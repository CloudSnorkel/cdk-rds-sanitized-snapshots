{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "Tree": {
        "id": "Tree",
        "path": "Tree",
        "constructInfo": {
          "fqn": "constructs.Construct",
          "version": "10.0.5"
        }
      },
      "RDS-Sanitized-Snapshotter-VPC": {
        "id": "RDS-Sanitized-Snapshotter-VPC",
        "path": "RDS-Sanitized-Snapshotter-VPC",
        "children": {
          "VPC": {
            "id": "VPC",
            "path": "RDS-Sanitized-Snapshotter-VPC/VPC",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "RDS-Sanitized-Snapshotter-VPC/VPC/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPC",
                  "aws:cdk:cloudformation:props": {
                    "cidrBlock": "10.0.0.0/16",
                    "enableDnsHostnames": true,
                    "enableDnsSupport": true,
                    "instanceTenancy": "default",
                    "tags": [
                      {
                        "key": "Name",
                        "value": "RDS-Sanitized-Snapshotter-VPC/VPC"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnVPC",
                  "version": "2.0.0"
                }
              },
              "PublicSubnet1": {
                "id": "PublicSubnet1",
                "path": "RDS-Sanitized-Snapshotter-VPC/VPC/PublicSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "RDS-Sanitized-Snapshotter-VPC/VPC/PublicSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.0.0/19",
                        "vpcId": {
                          "Ref": "VPCB9E5F0B4"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            0,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "Name",
                            "value": "RDS-Sanitized-Snapshotter-VPC/VPC/PublicSubnet1"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnet",
                      "version": "2.0.0"
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "RDS-Sanitized-Snapshotter-VPC/VPC/PublicSubnet1/Acl",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.0.0"
                    }
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "RDS-Sanitized-Snapshotter-VPC/VPC/PublicSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "VPCB9E5F0B4"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "RDS-Sanitized-Snapshotter-VPC/VPC/PublicSubnet1"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRouteTable",
                      "version": "2.0.0"
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "RDS-Sanitized-Snapshotter-VPC/VPC/PublicSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
                        },
                        "subnetId": {
                          "Ref": "VPCPublicSubnet1SubnetB4246D30"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnetRouteTableAssociation",
                      "version": "2.0.0"
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "RDS-Sanitized-Snapshotter-VPC/VPC/PublicSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "VPCIGWB7E252D3"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRoute",
                      "version": "2.0.0"
                    }
                  },
                  "EIP": {
                    "id": "EIP",
                    "path": "RDS-Sanitized-Snapshotter-VPC/VPC/PublicSubnet1/EIP",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                      "aws:cdk:cloudformation:props": {
                        "domain": "vpc",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "RDS-Sanitized-Snapshotter-VPC/VPC/PublicSubnet1"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnEIP",
                      "version": "2.0.0"
                    }
                  },
                  "NATGateway": {
                    "id": "NATGateway",
                    "path": "RDS-Sanitized-Snapshotter-VPC/VPC/PublicSubnet1/NATGateway",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                      "aws:cdk:cloudformation:props": {
                        "subnetId": {
                          "Ref": "VPCPublicSubnet1SubnetB4246D30"
                        },
                        "allocationId": {
                          "Fn::GetAtt": [
                            "VPCPublicSubnet1EIP6AD938E8",
                            "AllocationId"
                          ]
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "RDS-Sanitized-Snapshotter-VPC/VPC/PublicSubnet1"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnNatGateway",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.PublicSubnet",
                  "version": "2.0.0"
                }
              },
              "PublicSubnet2": {
                "id": "PublicSubnet2",
                "path": "RDS-Sanitized-Snapshotter-VPC/VPC/PublicSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "RDS-Sanitized-Snapshotter-VPC/VPC/PublicSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.32.0/19",
                        "vpcId": {
                          "Ref": "VPCB9E5F0B4"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            1,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "Name",
                            "value": "RDS-Sanitized-Snapshotter-VPC/VPC/PublicSubnet2"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnet",
                      "version": "2.0.0"
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "RDS-Sanitized-Snapshotter-VPC/VPC/PublicSubnet2/Acl",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.0.0"
                    }
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "RDS-Sanitized-Snapshotter-VPC/VPC/PublicSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "VPCB9E5F0B4"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "RDS-Sanitized-Snapshotter-VPC/VPC/PublicSubnet2"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRouteTable",
                      "version": "2.0.0"
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "RDS-Sanitized-Snapshotter-VPC/VPC/PublicSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
                        },
                        "subnetId": {
                          "Ref": "VPCPublicSubnet2Subnet74179F39"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnetRouteTableAssociation",
                      "version": "2.0.0"
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "RDS-Sanitized-Snapshotter-VPC/VPC/PublicSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "VPCIGWB7E252D3"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRoute",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.PublicSubnet",
                  "version": "2.0.0"
                }
              },
              "PrivateSubnet1": {
                "id": "PrivateSubnet1",
                "path": "RDS-Sanitized-Snapshotter-VPC/VPC/PrivateSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "RDS-Sanitized-Snapshotter-VPC/VPC/PrivateSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.64.0/19",
                        "vpcId": {
                          "Ref": "VPCB9E5F0B4"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            0,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Isolated"
                          },
                          {
                            "key": "Name",
                            "value": "RDS-Sanitized-Snapshotter-VPC/VPC/PrivateSubnet1"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnet",
                      "version": "2.0.0"
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "RDS-Sanitized-Snapshotter-VPC/VPC/PrivateSubnet1/Acl",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.0.0"
                    }
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "RDS-Sanitized-Snapshotter-VPC/VPC/PrivateSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "VPCB9E5F0B4"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "RDS-Sanitized-Snapshotter-VPC/VPC/PrivateSubnet1"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRouteTable",
                      "version": "2.0.0"
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "RDS-Sanitized-Snapshotter-VPC/VPC/PrivateSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
                        },
                        "subnetId": {
                          "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnetRouteTableAssociation",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.PrivateSubnet",
                  "version": "2.0.0"
                }
              },
              "PrivateSubnet2": {
                "id": "PrivateSubnet2",
                "path": "RDS-Sanitized-Snapshotter-VPC/VPC/PrivateSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "RDS-Sanitized-Snapshotter-VPC/VPC/PrivateSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.96.0/19",
                        "vpcId": {
                          "Ref": "VPCB9E5F0B4"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            1,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Isolated"
                          },
                          {
                            "key": "Name",
                            "value": "RDS-Sanitized-Snapshotter-VPC/VPC/PrivateSubnet2"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnet",
                      "version": "2.0.0"
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "RDS-Sanitized-Snapshotter-VPC/VPC/PrivateSubnet2/Acl",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.0.0"
                    }
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "RDS-Sanitized-Snapshotter-VPC/VPC/PrivateSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "VPCB9E5F0B4"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "RDS-Sanitized-Snapshotter-VPC/VPC/PrivateSubnet2"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRouteTable",
                      "version": "2.0.0"
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "RDS-Sanitized-Snapshotter-VPC/VPC/PrivateSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
                        },
                        "subnetId": {
                          "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnetRouteTableAssociation",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.PrivateSubnet",
                  "version": "2.0.0"
                }
              },
              "IsolatedSubnet1": {
                "id": "IsolatedSubnet1",
                "path": "RDS-Sanitized-Snapshotter-VPC/VPC/IsolatedSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "RDS-Sanitized-Snapshotter-VPC/VPC/IsolatedSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.128.0/19",
                        "vpcId": {
                          "Ref": "VPCB9E5F0B4"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            0,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Isolated"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          },
                          {
                            "key": "Name",
                            "value": "RDS-Sanitized-Snapshotter-VPC/VPC/IsolatedSubnet1"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnet",
                      "version": "2.0.0"
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "RDS-Sanitized-Snapshotter-VPC/VPC/IsolatedSubnet1/Acl",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.0.0"
                    }
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "RDS-Sanitized-Snapshotter-VPC/VPC/IsolatedSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "VPCB9E5F0B4"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "RDS-Sanitized-Snapshotter-VPC/VPC/IsolatedSubnet1"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRouteTable",
                      "version": "2.0.0"
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "RDS-Sanitized-Snapshotter-VPC/VPC/IsolatedSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VPCIsolatedSubnet1RouteTableEB156210"
                        },
                        "subnetId": {
                          "Ref": "VPCIsolatedSubnet1SubnetEBD00FC6"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnetRouteTableAssociation",
                      "version": "2.0.0"
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "RDS-Sanitized-Snapshotter-VPC/VPC/IsolatedSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VPCIsolatedSubnet1RouteTableEB156210"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "VPCPublicSubnet1NATGatewayE0556630"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRoute",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.PrivateSubnet",
                  "version": "2.0.0"
                }
              },
              "IsolatedSubnet2": {
                "id": "IsolatedSubnet2",
                "path": "RDS-Sanitized-Snapshotter-VPC/VPC/IsolatedSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "RDS-Sanitized-Snapshotter-VPC/VPC/IsolatedSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.160.0/19",
                        "vpcId": {
                          "Ref": "VPCB9E5F0B4"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            1,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Isolated"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          },
                          {
                            "key": "Name",
                            "value": "RDS-Sanitized-Snapshotter-VPC/VPC/IsolatedSubnet2"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnet",
                      "version": "2.0.0"
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "RDS-Sanitized-Snapshotter-VPC/VPC/IsolatedSubnet2/Acl",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.0.0"
                    }
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "RDS-Sanitized-Snapshotter-VPC/VPC/IsolatedSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "VPCB9E5F0B4"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "RDS-Sanitized-Snapshotter-VPC/VPC/IsolatedSubnet2"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRouteTable",
                      "version": "2.0.0"
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "RDS-Sanitized-Snapshotter-VPC/VPC/IsolatedSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VPCIsolatedSubnet2RouteTable9B4F78DC"
                        },
                        "subnetId": {
                          "Ref": "VPCIsolatedSubnet2Subnet4B1C8CAA"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnetRouteTableAssociation",
                      "version": "2.0.0"
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "RDS-Sanitized-Snapshotter-VPC/VPC/IsolatedSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VPCIsolatedSubnet2RouteTable9B4F78DC"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "VPCPublicSubnet1NATGatewayE0556630"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRoute",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.PrivateSubnet",
                  "version": "2.0.0"
                }
              },
              "IGW": {
                "id": "IGW",
                "path": "RDS-Sanitized-Snapshotter-VPC/VPC/IGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::InternetGateway",
                  "aws:cdk:cloudformation:props": {
                    "tags": [
                      {
                        "key": "Name",
                        "value": "RDS-Sanitized-Snapshotter-VPC/VPC"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnInternetGateway",
                  "version": "2.0.0"
                }
              },
              "VPCGW": {
                "id": "VPCGW",
                "path": "RDS-Sanitized-Snapshotter-VPC/VPC/VPCGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPCGatewayAttachment",
                  "aws:cdk:cloudformation:props": {
                    "vpcId": {
                      "Ref": "VPCB9E5F0B4"
                    },
                    "internetGatewayId": {
                      "Ref": "VPCIGWB7E252D3"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnVPCGatewayAttachment",
                  "version": "2.0.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ec2.Vpc",
              "version": "2.0.0"
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "RDS-Sanitized-Snapshotter-VPC/Exports",
            "children": {
              "Output{\"Ref\":\"VPCIsolatedSubnet1SubnetEBD00FC6\"}": {
                "id": "Output{\"Ref\":\"VPCIsolatedSubnet1SubnetEBD00FC6\"}",
                "path": "RDS-Sanitized-Snapshotter-VPC/Exports/Output{\"Ref\":\"VPCIsolatedSubnet1SubnetEBD00FC6\"}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.0.0"
                }
              },
              "Output{\"Ref\":\"VPCIsolatedSubnet2Subnet4B1C8CAA\"}": {
                "id": "Output{\"Ref\":\"VPCIsolatedSubnet2Subnet4B1C8CAA\"}",
                "path": "RDS-Sanitized-Snapshotter-VPC/Exports/Output{\"Ref\":\"VPCIsolatedSubnet2Subnet4B1C8CAA\"}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.0.0"
                }
              },
              "Output{\"Ref\":\"VPCB9E5F0B4\"}": {
                "id": "Output{\"Ref\":\"VPCB9E5F0B4\"}",
                "path": "RDS-Sanitized-Snapshotter-VPC/Exports/Output{\"Ref\":\"VPCB9E5F0B4\"}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.0.0"
                }
              },
              "Output{\"Ref\":\"VPCPrivateSubnet1Subnet8BCA10E0\"}": {
                "id": "Output{\"Ref\":\"VPCPrivateSubnet1Subnet8BCA10E0\"}",
                "path": "RDS-Sanitized-Snapshotter-VPC/Exports/Output{\"Ref\":\"VPCPrivateSubnet1Subnet8BCA10E0\"}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.0.0"
                }
              },
              "Output{\"Ref\":\"VPCPrivateSubnet2SubnetCFCDAA7A\"}": {
                "id": "Output{\"Ref\":\"VPCPrivateSubnet2SubnetCFCDAA7A\"}",
                "path": "RDS-Sanitized-Snapshotter-VPC/Exports/Output{\"Ref\":\"VPCPrivateSubnet2SubnetCFCDAA7A\"}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.0.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.0.5"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.0.0"
        }
      },
      "RDS-Sanitized-Snapshotter-RDS": {
        "id": "RDS-Sanitized-Snapshotter-RDS",
        "path": "RDS-Sanitized-Snapshotter-RDS",
        "children": {
          "MySQL Instance": {
            "id": "MySQL Instance",
            "path": "RDS-Sanitized-Snapshotter-RDS/MySQL Instance",
            "children": {
              "SubnetGroup": {
                "id": "SubnetGroup",
                "path": "RDS-Sanitized-Snapshotter-RDS/MySQL Instance/SubnetGroup",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "RDS-Sanitized-Snapshotter-RDS/MySQL Instance/SubnetGroup/Default",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::RDS::DBSubnetGroup",
                      "aws:cdk:cloudformation:props": {
                        "dbSubnetGroupDescription": "Subnet group for MySQL Instance database",
                        "subnetIds": [
                          {
                            "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCIsolatedSubnet1SubnetEBD00FC6298E81EF"
                          },
                          {
                            "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCIsolatedSubnet2Subnet4B1C8CAAD8B83B81"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_rds.CfnDBSubnetGroup",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_rds.SubnetGroup",
                  "version": "2.0.0"
                }
              },
              "SecurityGroup": {
                "id": "SecurityGroup",
                "path": "RDS-Sanitized-Snapshotter-RDS/MySQL Instance/SecurityGroup",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-RDS/MySQL Instance/SecurityGroup/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "Security group for MySQL Instance database",
                        "securityGroupEgress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "description": "Allow all outbound traffic by default",
                            "ipProtocol": "-1"
                          }
                        ],
                        "vpcId": {
                          "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCB9E5F0B4BD23A326"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroup",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup",
                  "version": "2.0.0"
                }
              },
              "Secret": {
                "id": "Secret",
                "path": "RDS-Sanitized-Snapshotter-RDS/MySQL Instance/Secret",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-RDS/MySQL Instance/Secret/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::SecretsManager::Secret",
                      "aws:cdk:cloudformation:props": {
                        "description": {
                          "Fn::Join": [
                            "",
                            [
                              "Generated by the CDK for stack: ",
                              {
                                "Ref": "AWS::StackName"
                              }
                            ]
                          ]
                        },
                        "generateSecretString": {
                          "passwordLength": 30,
                          "secretStringTemplate": "{\"username\":\"admin\"}",
                          "generateStringKey": "password",
                          "excludeCharacters": " %+~`#$&*()|[]{}:;<>?!'/@\"\\"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_secretsmanager.CfnSecret",
                      "version": "2.0.0"
                    }
                  },
                  "Attachment": {
                    "id": "Attachment",
                    "path": "RDS-Sanitized-Snapshotter-RDS/MySQL Instance/Secret/Attachment",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-RDS/MySQL Instance/Secret/Attachment/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::SecretsManager::SecretTargetAttachment",
                          "aws:cdk:cloudformation:props": {
                            "secretId": {
                              "Ref": "MySQLInstanceSecret84563F6F"
                            },
                            "targetId": {
                              "Ref": "MySQLInstanceA2499B9D"
                            },
                            "targetType": "AWS::RDS::DBInstance"
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_secretsmanager.CfnSecretTargetAttachment",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_secretsmanager.SecretTargetAttachment",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_rds.DatabaseSecret",
                  "version": "2.0.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "RDS-Sanitized-Snapshotter-RDS/MySQL Instance/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::RDS::DBInstance",
                  "aws:cdk:cloudformation:props": {
                    "dbInstanceClass": "db.t3.small",
                    "allocatedStorage": "100",
                    "backupRetentionPeriod": 0,
                    "copyTagsToSnapshot": true,
                    "dbSubnetGroupName": {
                      "Ref": "MySQLInstanceSubnetGroup2F3554B3"
                    },
                    "deleteAutomatedBackups": true,
                    "engine": "mysql",
                    "engineVersion": "8.0",
                    "masterUsername": {
                      "Fn::Join": [
                        "",
                        [
                          "{{resolve:secretsmanager:",
                          {
                            "Ref": "MySQLInstanceSecret84563F6F"
                          },
                          ":SecretString:username::}}"
                        ]
                      ]
                    },
                    "masterUserPassword": {
                      "Fn::Join": [
                        "",
                        [
                          "{{resolve:secretsmanager:",
                          {
                            "Ref": "MySQLInstanceSecret84563F6F"
                          },
                          ":SecretString:password::}}"
                        ]
                      ]
                    },
                    "storageType": "gp2",
                    "vpcSecurityGroups": [
                      {
                        "Fn::GetAtt": [
                          "MySQLInstanceSecurityGroupF67D2455",
                          "GroupId"
                        ]
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_rds.CfnDBInstance",
                  "version": "2.0.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_rds.DatabaseInstance",
              "version": "2.0.0"
            }
          },
          "MySQL Cluster": {
            "id": "MySQL Cluster",
            "path": "RDS-Sanitized-Snapshotter-RDS/MySQL Cluster",
            "children": {
              "Subnets": {
                "id": "Subnets",
                "path": "RDS-Sanitized-Snapshotter-RDS/MySQL Cluster/Subnets",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "RDS-Sanitized-Snapshotter-RDS/MySQL Cluster/Subnets/Default",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::RDS::DBSubnetGroup",
                      "aws:cdk:cloudformation:props": {
                        "dbSubnetGroupDescription": "Subnets for MySQL Cluster database",
                        "subnetIds": [
                          {
                            "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCIsolatedSubnet1SubnetEBD00FC6298E81EF"
                          },
                          {
                            "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCIsolatedSubnet2Subnet4B1C8CAAD8B83B81"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_rds.CfnDBSubnetGroup",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_rds.SubnetGroup",
                  "version": "2.0.0"
                }
              },
              "SecurityGroup": {
                "id": "SecurityGroup",
                "path": "RDS-Sanitized-Snapshotter-RDS/MySQL Cluster/SecurityGroup",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-RDS/MySQL Cluster/SecurityGroup/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "RDS security group",
                        "securityGroupEgress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "description": "Allow all outbound traffic by default",
                            "ipProtocol": "-1"
                          }
                        ],
                        "vpcId": {
                          "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCB9E5F0B4BD23A326"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroup",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup",
                  "version": "2.0.0"
                }
              },
              "AuroraMySqlDatabaseClusterEngineDefaultParameterGroup": {
                "id": "AuroraMySqlDatabaseClusterEngineDefaultParameterGroup",
                "path": "RDS-Sanitized-Snapshotter-RDS/MySQL Cluster/AuroraMySqlDatabaseClusterEngineDefaultParameterGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.0.0"
                }
              },
              "Secret": {
                "id": "Secret",
                "path": "RDS-Sanitized-Snapshotter-RDS/MySQL Cluster/Secret",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-RDS/MySQL Cluster/Secret/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::SecretsManager::Secret",
                      "aws:cdk:cloudformation:props": {
                        "description": {
                          "Fn::Join": [
                            "",
                            [
                              "Generated by the CDK for stack: ",
                              {
                                "Ref": "AWS::StackName"
                              }
                            ]
                          ]
                        },
                        "generateSecretString": {
                          "passwordLength": 30,
                          "secretStringTemplate": "{\"username\":\"admin\"}",
                          "generateStringKey": "password",
                          "excludeCharacters": " %+~`#$&*()|[]{}:;<>?!'/@\"\\"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_secretsmanager.CfnSecret",
                      "version": "2.0.0"
                    }
                  },
                  "Attachment": {
                    "id": "Attachment",
                    "path": "RDS-Sanitized-Snapshotter-RDS/MySQL Cluster/Secret/Attachment",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-RDS/MySQL Cluster/Secret/Attachment/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::SecretsManager::SecretTargetAttachment",
                          "aws:cdk:cloudformation:props": {
                            "secretId": {
                              "Ref": "MySQLClusterSecret06B35C31"
                            },
                            "targetId": {
                              "Ref": "MySQLClusterD5C73C33"
                            },
                            "targetType": "AWS::RDS::DBCluster"
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_secretsmanager.CfnSecretTargetAttachment",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_secretsmanager.SecretTargetAttachment",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_rds.DatabaseSecret",
                  "version": "2.0.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "RDS-Sanitized-Snapshotter-RDS/MySQL Cluster/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::RDS::DBCluster",
                  "aws:cdk:cloudformation:props": {
                    "engine": "aurora-mysql",
                    "backupRetentionPeriod": 1,
                    "copyTagsToSnapshot": true,
                    "dbClusterParameterGroupName": "default.aurora-mysql5.7",
                    "dbSubnetGroupName": {
                      "Ref": "MySQLClusterSubnets30A4ABD4"
                    },
                    "masterUsername": {
                      "Fn::Join": [
                        "",
                        [
                          "{{resolve:secretsmanager:",
                          {
                            "Ref": "MySQLClusterSecret06B35C31"
                          },
                          ":SecretString:username::}}"
                        ]
                      ]
                    },
                    "masterUserPassword": {
                      "Fn::Join": [
                        "",
                        [
                          "{{resolve:secretsmanager:",
                          {
                            "Ref": "MySQLClusterSecret06B35C31"
                          },
                          ":SecretString:password::}}"
                        ]
                      ]
                    },
                    "vpcSecurityGroupIds": [
                      {
                        "Fn::GetAtt": [
                          "MySQLClusterSecurityGroupBC9C8E26",
                          "GroupId"
                        ]
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_rds.CfnDBCluster",
                  "version": "2.0.0"
                }
              },
              "Instance1": {
                "id": "Instance1",
                "path": "RDS-Sanitized-Snapshotter-RDS/MySQL Cluster/Instance1",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::RDS::DBInstance",
                  "aws:cdk:cloudformation:props": {
                    "dbInstanceClass": "db.t3.medium",
                    "dbClusterIdentifier": {
                      "Ref": "MySQLClusterD5C73C33"
                    },
                    "dbSubnetGroupName": {
                      "Ref": "MySQLClusterSubnets30A4ABD4"
                    },
                    "engine": "aurora-mysql"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_rds.CfnDBInstance",
                  "version": "2.0.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_rds.DatabaseCluster",
              "version": "2.0.0"
            }
          },
          "Key": {
            "id": "Key",
            "path": "RDS-Sanitized-Snapshotter-RDS/Key",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "RDS-Sanitized-Snapshotter-RDS/Key/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::KMS::Key",
                  "aws:cdk:cloudformation:props": {
                    "keyPolicy": {
                      "Statement": [
                        {
                          "Action": "kms:*",
                          "Effect": "Allow",
                          "Principal": {
                            "AWS": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":iam::",
                                  {
                                    "Ref": "AWS::AccountId"
                                  },
                                  ":root"
                                ]
                              ]
                            }
                          },
                          "Resource": "*"
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "description": "RDS sanitize test source key"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_kms.CfnKey",
                  "version": "2.0.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_kms.Key",
              "version": "2.0.0"
            }
          },
          "Postgres Instance": {
            "id": "Postgres Instance",
            "path": "RDS-Sanitized-Snapshotter-RDS/Postgres Instance",
            "children": {
              "SubnetGroup": {
                "id": "SubnetGroup",
                "path": "RDS-Sanitized-Snapshotter-RDS/Postgres Instance/SubnetGroup",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "RDS-Sanitized-Snapshotter-RDS/Postgres Instance/SubnetGroup/Default",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::RDS::DBSubnetGroup",
                      "aws:cdk:cloudformation:props": {
                        "dbSubnetGroupDescription": "Subnet group for Postgres Instance database",
                        "subnetIds": [
                          {
                            "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCIsolatedSubnet1SubnetEBD00FC6298E81EF"
                          },
                          {
                            "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCIsolatedSubnet2Subnet4B1C8CAAD8B83B81"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_rds.CfnDBSubnetGroup",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_rds.SubnetGroup",
                  "version": "2.0.0"
                }
              },
              "SecurityGroup": {
                "id": "SecurityGroup",
                "path": "RDS-Sanitized-Snapshotter-RDS/Postgres Instance/SecurityGroup",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-RDS/Postgres Instance/SecurityGroup/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "Security group for Postgres Instance database",
                        "securityGroupEgress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "description": "Allow all outbound traffic by default",
                            "ipProtocol": "-1"
                          }
                        ],
                        "vpcId": {
                          "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCB9E5F0B4BD23A326"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroup",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup",
                  "version": "2.0.0"
                }
              },
              "Secret": {
                "id": "Secret",
                "path": "RDS-Sanitized-Snapshotter-RDS/Postgres Instance/Secret",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-RDS/Postgres Instance/Secret/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::SecretsManager::Secret",
                      "aws:cdk:cloudformation:props": {
                        "description": {
                          "Fn::Join": [
                            "",
                            [
                              "Generated by the CDK for stack: ",
                              {
                                "Ref": "AWS::StackName"
                              }
                            ]
                          ]
                        },
                        "generateSecretString": {
                          "passwordLength": 30,
                          "secretStringTemplate": "{\"username\":\"postgres\"}",
                          "generateStringKey": "password",
                          "excludeCharacters": " %+~`#$&*()|[]{}:;<>?!'/@\"\\"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_secretsmanager.CfnSecret",
                      "version": "2.0.0"
                    }
                  },
                  "Attachment": {
                    "id": "Attachment",
                    "path": "RDS-Sanitized-Snapshotter-RDS/Postgres Instance/Secret/Attachment",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-RDS/Postgres Instance/Secret/Attachment/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::SecretsManager::SecretTargetAttachment",
                          "aws:cdk:cloudformation:props": {
                            "secretId": {
                              "Ref": "PostgresInstanceSecret47B7DD5E"
                            },
                            "targetId": {
                              "Ref": "PostgresInstance8F00D2DD"
                            },
                            "targetType": "AWS::RDS::DBInstance"
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_secretsmanager.CfnSecretTargetAttachment",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_secretsmanager.SecretTargetAttachment",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_rds.DatabaseSecret",
                  "version": "2.0.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "RDS-Sanitized-Snapshotter-RDS/Postgres Instance/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::RDS::DBInstance",
                  "aws:cdk:cloudformation:props": {
                    "dbInstanceClass": "db.t3.small",
                    "allocatedStorage": "100",
                    "backupRetentionPeriod": 0,
                    "copyTagsToSnapshot": true,
                    "dbSubnetGroupName": {
                      "Ref": "PostgresInstanceSubnetGroup539F8609"
                    },
                    "deleteAutomatedBackups": true,
                    "engine": "postgres",
                    "engineVersion": "10",
                    "kmsKeyId": {
                      "Fn::GetAtt": [
                        "Key961B73FD",
                        "Arn"
                      ]
                    },
                    "masterUsername": {
                      "Fn::Join": [
                        "",
                        [
                          "{{resolve:secretsmanager:",
                          {
                            "Ref": "PostgresInstanceSecret47B7DD5E"
                          },
                          ":SecretString:username::}}"
                        ]
                      ]
                    },
                    "masterUserPassword": {
                      "Fn::Join": [
                        "",
                        [
                          "{{resolve:secretsmanager:",
                          {
                            "Ref": "PostgresInstanceSecret47B7DD5E"
                          },
                          ":SecretString:password::}}"
                        ]
                      ]
                    },
                    "storageEncrypted": true,
                    "storageType": "gp2",
                    "vpcSecurityGroups": [
                      {
                        "Fn::GetAtt": [
                          "PostgresInstanceSecurityGroup08920A2A",
                          "GroupId"
                        ]
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_rds.CfnDBInstance",
                  "version": "2.0.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_rds.DatabaseInstance",
              "version": "2.0.0"
            }
          },
          "Postgres Cluster": {
            "id": "Postgres Cluster",
            "path": "RDS-Sanitized-Snapshotter-RDS/Postgres Cluster",
            "children": {
              "Subnets": {
                "id": "Subnets",
                "path": "RDS-Sanitized-Snapshotter-RDS/Postgres Cluster/Subnets",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "RDS-Sanitized-Snapshotter-RDS/Postgres Cluster/Subnets/Default",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::RDS::DBSubnetGroup",
                      "aws:cdk:cloudformation:props": {
                        "dbSubnetGroupDescription": "Subnets for Postgres Cluster database",
                        "subnetIds": [
                          {
                            "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCIsolatedSubnet1SubnetEBD00FC6298E81EF"
                          },
                          {
                            "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCIsolatedSubnet2Subnet4B1C8CAAD8B83B81"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_rds.CfnDBSubnetGroup",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_rds.SubnetGroup",
                  "version": "2.0.0"
                }
              },
              "SecurityGroup": {
                "id": "SecurityGroup",
                "path": "RDS-Sanitized-Snapshotter-RDS/Postgres Cluster/SecurityGroup",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-RDS/Postgres Cluster/SecurityGroup/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "RDS security group",
                        "securityGroupEgress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "description": "Allow all outbound traffic by default",
                            "ipProtocol": "-1"
                          }
                        ],
                        "vpcId": {
                          "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCB9E5F0B4BD23A326"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroup",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup",
                  "version": "2.0.0"
                }
              },
              "AuroraPostgreSqlDatabaseClusterEngineDefaultParameterGroup": {
                "id": "AuroraPostgreSqlDatabaseClusterEngineDefaultParameterGroup",
                "path": "RDS-Sanitized-Snapshotter-RDS/Postgres Cluster/AuroraPostgreSqlDatabaseClusterEngineDefaultParameterGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.0.0"
                }
              },
              "Secret": {
                "id": "Secret",
                "path": "RDS-Sanitized-Snapshotter-RDS/Postgres Cluster/Secret",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-RDS/Postgres Cluster/Secret/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::SecretsManager::Secret",
                      "aws:cdk:cloudformation:props": {
                        "description": {
                          "Fn::Join": [
                            "",
                            [
                              "Generated by the CDK for stack: ",
                              {
                                "Ref": "AWS::StackName"
                              }
                            ]
                          ]
                        },
                        "generateSecretString": {
                          "passwordLength": 30,
                          "secretStringTemplate": "{\"username\":\"postgres\"}",
                          "generateStringKey": "password",
                          "excludeCharacters": " %+~`#$&*()|[]{}:;<>?!'/@\"\\"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_secretsmanager.CfnSecret",
                      "version": "2.0.0"
                    }
                  },
                  "Attachment": {
                    "id": "Attachment",
                    "path": "RDS-Sanitized-Snapshotter-RDS/Postgres Cluster/Secret/Attachment",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-RDS/Postgres Cluster/Secret/Attachment/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::SecretsManager::SecretTargetAttachment",
                          "aws:cdk:cloudformation:props": {
                            "secretId": {
                              "Ref": "PostgresClusterSecretEB353FC9"
                            },
                            "targetId": {
                              "Ref": "PostgresCluster5A5B7BE8"
                            },
                            "targetType": "AWS::RDS::DBCluster"
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_secretsmanager.CfnSecretTargetAttachment",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_secretsmanager.SecretTargetAttachment",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_rds.DatabaseSecret",
                  "version": "2.0.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "RDS-Sanitized-Snapshotter-RDS/Postgres Cluster/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::RDS::DBCluster",
                  "aws:cdk:cloudformation:props": {
                    "engine": "aurora-postgresql",
                    "backupRetentionPeriod": 1,
                    "copyTagsToSnapshot": true,
                    "dbClusterParameterGroupName": "default.aurora-postgresql12",
                    "dbSubnetGroupName": {
                      "Ref": "PostgresClusterSubnetsFC10D676"
                    },
                    "engineVersion": "12.4",
                    "kmsKeyId": {
                      "Fn::GetAtt": [
                        "Key961B73FD",
                        "Arn"
                      ]
                    },
                    "masterUsername": {
                      "Fn::Join": [
                        "",
                        [
                          "{{resolve:secretsmanager:",
                          {
                            "Ref": "PostgresClusterSecretEB353FC9"
                          },
                          ":SecretString:username::}}"
                        ]
                      ]
                    },
                    "masterUserPassword": {
                      "Fn::Join": [
                        "",
                        [
                          "{{resolve:secretsmanager:",
                          {
                            "Ref": "PostgresClusterSecretEB353FC9"
                          },
                          ":SecretString:password::}}"
                        ]
                      ]
                    },
                    "port": 5432,
                    "storageEncrypted": true,
                    "vpcSecurityGroupIds": [
                      {
                        "Fn::GetAtt": [
                          "PostgresClusterSecurityGroupA7EFBA97",
                          "GroupId"
                        ]
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_rds.CfnDBCluster",
                  "version": "2.0.0"
                }
              },
              "Instance1": {
                "id": "Instance1",
                "path": "RDS-Sanitized-Snapshotter-RDS/Postgres Cluster/Instance1",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::RDS::DBInstance",
                  "aws:cdk:cloudformation:props": {
                    "dbInstanceClass": "db.t3.medium",
                    "dbClusterIdentifier": {
                      "Ref": "PostgresCluster5A5B7BE8"
                    },
                    "dbSubnetGroupName": {
                      "Ref": "PostgresClusterSubnetsFC10D676"
                    },
                    "engine": "aurora-postgresql",
                    "engineVersion": "12.4"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_rds.CfnDBInstance",
                  "version": "2.0.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_rds.DatabaseCluster",
              "version": "2.0.0"
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "RDS-Sanitized-Snapshotter-RDS/Exports",
            "children": {
              "Output{\"Ref\":\"MySQLInstanceA2499B9D\"}": {
                "id": "Output{\"Ref\":\"MySQLInstanceA2499B9D\"}",
                "path": "RDS-Sanitized-Snapshotter-RDS/Exports/Output{\"Ref\":\"MySQLInstanceA2499B9D\"}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.0.0"
                }
              },
              "Output{\"Ref\":\"MySQLClusterD5C73C33\"}": {
                "id": "Output{\"Ref\":\"MySQLClusterD5C73C33\"}",
                "path": "RDS-Sanitized-Snapshotter-RDS/Exports/Output{\"Ref\":\"MySQLClusterD5C73C33\"}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.0.0"
                }
              },
              "Output{\"Ref\":\"PostgresInstance8F00D2DD\"}": {
                "id": "Output{\"Ref\":\"PostgresInstance8F00D2DD\"}",
                "path": "RDS-Sanitized-Snapshotter-RDS/Exports/Output{\"Ref\":\"PostgresInstance8F00D2DD\"}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.0.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"Key961B73FD\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"Key961B73FD\",\"Arn\"]}",
                "path": "RDS-Sanitized-Snapshotter-RDS/Exports/Output{\"Fn::GetAtt\":[\"Key961B73FD\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.0.0"
                }
              },
              "Output{\"Ref\":\"PostgresCluster5A5B7BE8\"}": {
                "id": "Output{\"Ref\":\"PostgresCluster5A5B7BE8\"}",
                "path": "RDS-Sanitized-Snapshotter-RDS/Exports/Output{\"Ref\":\"PostgresCluster5A5B7BE8\"}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.0.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.0.5"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.0.0"
        }
      },
      "RDS-Sanitized-Snapshotter-SFN": {
        "id": "RDS-Sanitized-Snapshotter-SFN",
        "path": "RDS-Sanitized-Snapshotter-SFN",
        "children": {
          "MySQL Instance Snapshotter": {
            "id": "MySQL Instance Snapshotter",
            "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter",
            "children": {
              "SG": {
                "id": "SG",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/SG",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/SG/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "Group for communication between sanitizing job and database",
                        "securityGroupEgress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "description": "Allow all outbound traffic by default",
                            "ipProtocol": "-1"
                          }
                        ],
                        "tags": [
                          {
                            "key": "Name",
                            "value": "RDS-sanitized-snapshots"
                          }
                        ],
                        "vpcId": {
                          "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCB9E5F0B4BD23A326"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroup",
                      "version": "2.0.0"
                    }
                  },
                  "from RDSSanitizedSnapshotterSFNMySQLInstanceSnapshotterSG69AE57C1:ALL PORTS": {
                    "id": "from RDSSanitizedSnapshotterSFNMySQLInstanceSnapshotterSG69AE57C1:ALL PORTS",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/SG/from RDSSanitizedSnapshotterSFNMySQLInstanceSnapshotterSG69AE57C1:ALL PORTS",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupIngress",
                      "aws:cdk:cloudformation:props": {
                        "ipProtocol": "tcp",
                        "description": "from RDSSanitizedSnapshotterSFNMySQLInstanceSnapshotterSG69AE57C1:ALL PORTS",
                        "fromPort": 0,
                        "groupId": {
                          "Fn::GetAtt": [
                            "MySQLInstanceSnapshotterSGC75DA465",
                            "GroupId"
                          ]
                        },
                        "sourceSecurityGroupId": {
                          "Fn::GetAtt": [
                            "MySQLInstanceSnapshotterSGC75DA465",
                            "GroupId"
                          ]
                        },
                        "toPort": 65535
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroupIngress",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup",
                  "version": "2.0.0"
                }
              },
              "Subnet group": {
                "id": "Subnet group",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/Subnet group",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/Subnet group/Default",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::RDS::DBSubnetGroup",
                      "aws:cdk:cloudformation:props": {
                        "dbSubnetGroupDescription": "Temporary database used for RDS-sanitize-snapshots",
                        "subnetIds": [
                          {
                            "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCPrivateSubnet1Subnet8BCA10E01F79A1B7"
                          },
                          {
                            "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCPrivateSubnet2SubnetCFCDAA7AB22CF85D"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_rds.CfnDBSubnetGroup",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_rds.SubnetGroup",
                  "version": "2.0.0"
                }
              },
              "cluster": {
                "id": "cluster",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/cluster",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/cluster/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ECS::Cluster",
                      "aws:cdk:cloudformation:props": {}
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ecs.CfnCluster",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.Cluster",
                  "version": "2.0.0"
                }
              },
              "parameters": {
                "id": "parameters",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/parameters",
                "children": {
                  "ServiceRole": {
                    "id": "ServiceRole",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/parameters/ServiceRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/parameters/ServiceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "lambda.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                  ]
                                ]
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.0.0"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/parameters/ServiceRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/parameters/ServiceRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "rds:DescribeDBInstances",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":rds:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":db:",
                                            {
                                              "Fn::ImportValue": "RDS-Sanitized-Snapshotter-RDS:ExportsOutputRefMySQLInstanceA2499B9D2BD8E026"
                                            }
                                          ]
                                        ]
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "MySQLInstanceSnapshotterparametersServiceRoleDefaultPolicyD8BFD2E0",
                                "roles": [
                                  {
                                    "Ref": "MySQLInstanceSnapshotterparametersServiceRole0017B602"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                              "version": "2.0.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Policy",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.0.0"
                    }
                  },
                  "Code": {
                    "id": "Code",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/parameters/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/parameters/Code/Stage",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.AssetStaging",
                          "version": "2.0.0"
                        }
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/parameters/Code/AssetBucket",
                        "children": {
                          "Notifications": {
                            "id": "Notifications",
                            "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/parameters/Code/AssetBucket/Notifications",
                            "constructInfo": {
                              "fqn": "constructs.Construct",
                              "version": "10.0.5"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                      "version": "2.0.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/parameters/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "s3Bucket": {
                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                          },
                          "s3Key": "aaa0b8f0bda64ba64db3f302f540214a8d226e02ea5a2841e6a7bcf6d0d40635.zip"
                        },
                        "role": {
                          "Fn::GetAtt": [
                            "MySQLInstanceSnapshotterparametersServiceRole0017B602",
                            "Arn"
                          ]
                        },
                        "description": "src/parameters.lambda.ts",
                        "environment": {
                          "variables": {
                            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                          }
                        },
                        "handler": "index.handler",
                        "runtime": "nodejs14.x"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                      "version": "2.0.0"
                    }
                  },
                  "LogRetention": {
                    "id": "LogRetention",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/parameters/LogRetention",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/parameters/LogRetention/Resource",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.CfnResource",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                      "version": "2.0.0"
                    }
                  },
                  "LogGroup": {
                    "id": "LogGroup",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/parameters/LogGroup",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.Function",
                  "version": "2.0.0"
                }
              },
              "Get Parameters": {
                "id": "Get Parameters",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/Get Parameters",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.LambdaInvoke",
                  "version": "2.0.0"
                }
              },
              "Error Catcher": {
                "id": "Error Catcher",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/Error Catcher",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions.Parallel",
                  "version": "2.0.0"
                }
              },
              "Create Temporary Snapshot": {
                "id": "Create Temporary Snapshot",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/Create Temporary Snapshot",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.CallAwsService",
                  "version": "2.0.0"
                }
              },
              "wait": {
                "id": "wait",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/wait",
                "children": {
                  "ServiceRole": {
                    "id": "ServiceRole",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/wait/ServiceRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/wait/ServiceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "lambda.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                  ]
                                ]
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.0.0"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/wait/ServiceRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/wait/ServiceRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "rds:DescribeDBClusters",
                                        "rds:DescribeDBClusterSnapshots",
                                        "rds:DescribeDBSnapshots",
                                        "rds:DescribeDBInstances"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":cluster:",
                                              {
                                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-RDS:ExportsOutputRefMySQLInstanceA2499B9D2BD8E026"
                                              }
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":db:",
                                              {
                                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-RDS:ExportsOutputRefMySQLInstanceA2499B9D2BD8E026"
                                              }
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":cluster:sanitize-*"
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":snapshot:sanitize-*"
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":snapshot:mysql-instance-snapshot-*"
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":db:sanitize-*"
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "MySQLInstanceSnapshotterwaitServiceRoleDefaultPolicyE6063975",
                                "roles": [
                                  {
                                    "Ref": "MySQLInstanceSnapshotterwaitServiceRole21AAE4F2"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                              "version": "2.0.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Policy",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.0.0"
                    }
                  },
                  "Code": {
                    "id": "Code",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/wait/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/wait/Code/Stage",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.AssetStaging",
                          "version": "2.0.0"
                        }
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/wait/Code/AssetBucket",
                        "children": {
                          "Notifications": {
                            "id": "Notifications",
                            "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/wait/Code/AssetBucket/Notifications",
                            "constructInfo": {
                              "fqn": "constructs.Construct",
                              "version": "10.0.5"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                      "version": "2.0.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/wait/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "s3Bucket": {
                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                          },
                          "s3Key": "5fdb11c9c7a3632057afe2a65486806fb26289e8093d19943ad55e9b08090383.zip"
                        },
                        "role": {
                          "Fn::GetAtt": [
                            "MySQLInstanceSnapshotterwaitServiceRole21AAE4F2",
                            "Arn"
                          ]
                        },
                        "description": "src/wait.lambda.ts",
                        "environment": {
                          "variables": {
                            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                          }
                        },
                        "handler": "index.handler",
                        "runtime": "nodejs14.x"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                      "version": "2.0.0"
                    }
                  },
                  "LogRetention": {
                    "id": "LogRetention",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/wait/LogRetention",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/wait/LogRetention/Resource",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.CfnResource",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                      "version": "2.0.0"
                    }
                  },
                  "LogGroup": {
                    "id": "LogGroup",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/wait/LogGroup",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.Function",
                  "version": "2.0.0"
                }
              },
              "Wait for Snapshot": {
                "id": "Wait for Snapshot",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/Wait for Snapshot",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.LambdaInvoke",
                  "version": "2.0.0"
                }
              },
              "Create Temporary Database": {
                "id": "Create Temporary Database",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/Create Temporary Database",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.CallAwsService",
                  "version": "2.0.0"
                }
              },
              "Wait for Temporary Database": {
                "id": "Wait for Temporary Database",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/Wait for Temporary Database",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.LambdaInvoke",
                  "version": "2.0.0"
                }
              },
              "Set Temporary Password": {
                "id": "Set Temporary Password",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/Set Temporary Password",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.CallAwsService",
                  "version": "2.0.0"
                }
              },
              "Wait for Temporary Password": {
                "id": "Wait for Temporary Password",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/Wait for Temporary Password",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.LambdaInvoke",
                  "version": "2.0.0"
                }
              },
              "Get Temporary Endpoint": {
                "id": "Get Temporary Endpoint",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/Get Temporary Endpoint",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.CallAwsService",
                  "version": "2.0.0"
                }
              },
              "Logs": {
                "id": "Logs",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/Logs",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/Logs/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                      "aws:cdk:cloudformation:props": {
                        "retentionInDays": 30
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_logs.CfnLogGroup",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogGroup",
                  "version": "2.0.0"
                }
              },
              "MySQL Task": {
                "id": "MySQL Task",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/MySQL Task",
                "children": {
                  "TaskRole": {
                    "id": "TaskRole",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/MySQL Task/TaskRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/MySQL Task/TaskRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "ecs-tasks.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.0.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/MySQL Task/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                      "aws:cdk:cloudformation:props": {
                        "containerDefinitions": [
                          {
                            "command": [
                              "bash",
                              "-c",
                              "echo \"[client]\nuser=$MYSQL_USER\nhost=$MYSQL_HOST\nport=$MYSQL_PORT\npassword=$MYSQL_PASSWORD\" > ~/.my.cnf && chmod 700 ~/.my.cnf"
                            ],
                            "essential": false,
                            "image": "public.ecr.aws/docker/library/bash:4-alpine3.15",
                            "mountPoints": [
                              {
                                "containerPath": "/root",
                                "readOnly": false,
                                "sourceVolume": "config"
                              }
                            ],
                            "name": "config",
                            "logConfiguration": {
                              "logDriver": "awslogs",
                              "options": {
                                "awslogs-group": {
                                  "Ref": "MySQLInstanceSnapshotterLogs55691739"
                                },
                                "awslogs-stream-prefix": "mysql-config",
                                "awslogs-region": {
                                  "Ref": "AWS::Region"
                                }
                              }
                            }
                          },
                          {
                            "command": [
                              "mysql",
                              "-e",
                              "SELECT 1"
                            ],
                            "dependsOn": [
                              {
                                "containerName": "config",
                                "condition": "SUCCESS"
                              }
                            ],
                            "essential": true,
                            "image": "public.ecr.aws/lts/mysql:latest",
                            "mountPoints": [
                              {
                                "containerPath": "/root",
                                "readOnly": true,
                                "sourceVolume": "config"
                              }
                            ],
                            "name": "mysql",
                            "logConfiguration": {
                              "logDriver": "awslogs",
                              "options": {
                                "awslogs-group": {
                                  "Ref": "MySQLInstanceSnapshotterLogs55691739"
                                },
                                "awslogs-stream-prefix": "mysql-sanitize",
                                "awslogs-region": {
                                  "Ref": "AWS::Region"
                                }
                              }
                            }
                          }
                        ],
                        "cpu": "256",
                        "executionRoleArn": {
                          "Fn::GetAtt": [
                            "MySQLInstanceSnapshotterMySQLTaskExecutionRole1DD381B7",
                            "Arn"
                          ]
                        },
                        "family": "RDSSanitizedSnapshotterSFNMySQLInstanceSnapshotterMySQLTask5753E21D",
                        "memory": "512",
                        "networkMode": "awsvpc",
                        "requiresCompatibilities": [
                          "FARGATE"
                        ],
                        "taskRoleArn": {
                          "Fn::GetAtt": [
                            "MySQLInstanceSnapshotterMySQLTaskTaskRoleBFA1FB36",
                            "Arn"
                          ]
                        },
                        "volumes": [
                          {
                            "host": {},
                            "name": "config"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ecs.CfnTaskDefinition",
                      "version": "2.0.0"
                    }
                  },
                  "config": {
                    "id": "config",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/MySQL Task/config",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ecs.ContainerDefinition",
                      "version": "2.0.0"
                    }
                  },
                  "ExecutionRole": {
                    "id": "ExecutionRole",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/MySQL Task/ExecutionRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/MySQL Task/ExecutionRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "ecs-tasks.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.0.0"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/MySQL Task/ExecutionRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/MySQL Task/ExecutionRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "MySQLInstanceSnapshotterLogs55691739",
                                          "Arn"
                                        ]
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "MySQLInstanceSnapshotterMySQLTaskExecutionRoleDefaultPolicy99EE7B1E",
                                "roles": [
                                  {
                                    "Ref": "MySQLInstanceSnapshotterMySQLTaskExecutionRole1DD381B7"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                              "version": "2.0.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Policy",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.0.0"
                    }
                  },
                  "mysql": {
                    "id": "mysql",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/MySQL Task/mysql",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ecs.ContainerDefinition",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.FargateTaskDefinition",
                  "version": "2.0.0"
                }
              },
              "PostreSQL Task": {
                "id": "PostreSQL Task",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/PostreSQL Task",
                "children": {
                  "TaskRole": {
                    "id": "TaskRole",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/PostreSQL Task/TaskRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/PostreSQL Task/TaskRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "ecs-tasks.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.0.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/PostreSQL Task/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                      "aws:cdk:cloudformation:props": {
                        "containerDefinitions": [
                          {
                            "command": [
                              "psql",
                              "-c",
                              "SELECT 1"
                            ],
                            "essential": true,
                            "image": "public.ecr.aws/lts/postgres:latest",
                            "name": "postgres",
                            "logConfiguration": {
                              "logDriver": "awslogs",
                              "options": {
                                "awslogs-group": {
                                  "Ref": "MySQLInstanceSnapshotterLogs55691739"
                                },
                                "awslogs-stream-prefix": "psql-sanitize",
                                "awslogs-region": {
                                  "Ref": "AWS::Region"
                                }
                              }
                            }
                          }
                        ],
                        "cpu": "256",
                        "executionRoleArn": {
                          "Fn::GetAtt": [
                            "MySQLInstanceSnapshotterPostreSQLTaskExecutionRole78969E33",
                            "Arn"
                          ]
                        },
                        "family": "RDSSanitizedSnapshotterSFNMySQLInstanceSnapshotterPostreSQLTask702D64B7",
                        "memory": "512",
                        "networkMode": "awsvpc",
                        "requiresCompatibilities": [
                          "FARGATE"
                        ],
                        "taskRoleArn": {
                          "Fn::GetAtt": [
                            "MySQLInstanceSnapshotterPostreSQLTaskTaskRole82DDF085",
                            "Arn"
                          ]
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ecs.CfnTaskDefinition",
                      "version": "2.0.0"
                    }
                  },
                  "postgres": {
                    "id": "postgres",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/PostreSQL Task/postgres",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ecs.ContainerDefinition",
                      "version": "2.0.0"
                    }
                  },
                  "ExecutionRole": {
                    "id": "ExecutionRole",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/PostreSQL Task/ExecutionRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/PostreSQL Task/ExecutionRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "ecs-tasks.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.0.0"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/PostreSQL Task/ExecutionRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/PostreSQL Task/ExecutionRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "MySQLInstanceSnapshotterLogs55691739",
                                          "Arn"
                                        ]
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "MySQLInstanceSnapshotterPostreSQLTaskExecutionRoleDefaultPolicy78800565",
                                "roles": [
                                  {
                                    "Ref": "MySQLInstanceSnapshotterPostreSQLTaskExecutionRole78969E33"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                              "version": "2.0.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Policy",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.FargateTaskDefinition",
                  "version": "2.0.0"
                }
              },
              "Sanitize": {
                "id": "Sanitize",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/Sanitize",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions.Choice",
                  "version": "2.0.0"
                }
              },
              "Sanitize MySQL": {
                "id": "Sanitize MySQL",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/Sanitize MySQL",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.EcsRunTask",
                  "version": "2.0.0"
                }
              },
              "Sanitize Postgres": {
                "id": "Sanitize Postgres",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/Sanitize Postgres",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.EcsRunTask",
                  "version": "2.0.0"
                }
              },
              "Create Final Snapshot": {
                "id": "Create Final Snapshot",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/Create Final Snapshot",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.CallAwsService",
                  "version": "2.0.0"
                }
              },
              "Wait for Final Snapshot": {
                "id": "Wait for Final Snapshot",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/Wait for Final Snapshot",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.LambdaInvoke",
                  "version": "2.0.0"
                }
              },
              "Cleanup": {
                "id": "Cleanup",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/Cleanup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions.Parallel",
                  "version": "2.0.0"
                }
              },
              "Temporary Snapshot": {
                "id": "Temporary Snapshot",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/Temporary Snapshot",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.CallAwsService",
                  "version": "2.0.0"
                }
              },
              "Temporary Database Instance": {
                "id": "Temporary Database Instance",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/Temporary Database Instance",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.CallAwsService",
                  "version": "2.0.0"
                }
              },
              "Director": {
                "id": "Director",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/Director",
                "children": {
                  "Role": {
                    "id": "Role",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/Director/Role",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/Director/Role/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "states.",
                                          {
                                            "Ref": "AWS::Region"
                                          },
                                          ".amazonaws.com"
                                        ]
                                      ]
                                    }
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.0.0"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/Director/Role/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/Director/Role/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "lambda:InvokeFunction",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "MySQLInstanceSnapshotterparameters53B0A6E1",
                                          "Arn"
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "rds:deleteDBSnapshot",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":rds:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":snapshot:sanitize-*"
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "rds:deleteDBInstance",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":rds:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":db:sanitize-*"
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "rds:createDBSnapshot",
                                      "Effect": "Allow",
                                      "Resource": "*"
                                    },
                                    {
                                      "Action": "lambda:InvokeFunction",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "MySQLInstanceSnapshotterwait17927A95",
                                          "Arn"
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "rds:restoreDBInstanceFromDBSnapshot",
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":cluster:sanitize-*"
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":db:sanitize-*"
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":snapshot:sanitize-*"
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":subgrp:",
                                              {
                                                "Ref": "MySQLInstanceSnapshotterSubnetgroup503CB3B3"
                                              }
                                            ]
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Action": "rds:modifyDBInstance",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":rds:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":db:sanitize-*"
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "rds:describeDBInstances",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":rds:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":db:sanitize-*"
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "ecs:RunTask",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Fn::Select": [
                                                1,
                                                {
                                                  "Fn::Split": [
                                                    ":",
                                                    {
                                                      "Ref": "MySQLInstanceSnapshotterMySQLTask45C5FE96"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            ":",
                                            {
                                              "Fn::Select": [
                                                2,
                                                {
                                                  "Fn::Split": [
                                                    ":",
                                                    {
                                                      "Ref": "MySQLInstanceSnapshotterMySQLTask45C5FE96"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            ":",
                                            {
                                              "Fn::Select": [
                                                3,
                                                {
                                                  "Fn::Split": [
                                                    ":",
                                                    {
                                                      "Ref": "MySQLInstanceSnapshotterMySQLTask45C5FE96"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            ":",
                                            {
                                              "Fn::Select": [
                                                4,
                                                {
                                                  "Fn::Split": [
                                                    ":",
                                                    {
                                                      "Ref": "MySQLInstanceSnapshotterMySQLTask45C5FE96"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            ":",
                                            {
                                              "Fn::Select": [
                                                0,
                                                {
                                                  "Fn::Split": [
                                                    "/",
                                                    {
                                                      "Fn::Select": [
                                                        5,
                                                        {
                                                          "Fn::Split": [
                                                            ":",
                                                            {
                                                              "Ref": "MySQLInstanceSnapshotterMySQLTask45C5FE96"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            "/",
                                            {
                                              "Fn::Select": [
                                                1,
                                                {
                                                  "Fn::Split": [
                                                    "/",
                                                    {
                                                      "Fn::Select": [
                                                        5,
                                                        {
                                                          "Fn::Split": [
                                                            ":",
                                                            {
                                                              "Ref": "MySQLInstanceSnapshotterMySQLTask45C5FE96"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": [
                                        "ecs:StopTask",
                                        "ecs:DescribeTasks"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*"
                                    },
                                    {
                                      "Action": "iam:PassRole",
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::GetAtt": [
                                            "MySQLInstanceSnapshotterMySQLTaskTaskRoleBFA1FB36",
                                            "Arn"
                                          ]
                                        },
                                        {
                                          "Fn::GetAtt": [
                                            "MySQLInstanceSnapshotterMySQLTaskExecutionRole1DD381B7",
                                            "Arn"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Action": [
                                        "events:PutTargets",
                                        "events:PutRule",
                                        "events:DescribeRule"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":events:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":rule/StepFunctionsGetEventsForECSTaskRule"
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "ecs:RunTask",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Fn::Select": [
                                                1,
                                                {
                                                  "Fn::Split": [
                                                    ":",
                                                    {
                                                      "Ref": "MySQLInstanceSnapshotterPostreSQLTaskFAABAACF"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            ":",
                                            {
                                              "Fn::Select": [
                                                2,
                                                {
                                                  "Fn::Split": [
                                                    ":",
                                                    {
                                                      "Ref": "MySQLInstanceSnapshotterPostreSQLTaskFAABAACF"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            ":",
                                            {
                                              "Fn::Select": [
                                                3,
                                                {
                                                  "Fn::Split": [
                                                    ":",
                                                    {
                                                      "Ref": "MySQLInstanceSnapshotterPostreSQLTaskFAABAACF"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            ":",
                                            {
                                              "Fn::Select": [
                                                4,
                                                {
                                                  "Fn::Split": [
                                                    ":",
                                                    {
                                                      "Ref": "MySQLInstanceSnapshotterPostreSQLTaskFAABAACF"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            ":",
                                            {
                                              "Fn::Select": [
                                                0,
                                                {
                                                  "Fn::Split": [
                                                    "/",
                                                    {
                                                      "Fn::Select": [
                                                        5,
                                                        {
                                                          "Fn::Split": [
                                                            ":",
                                                            {
                                                              "Ref": "MySQLInstanceSnapshotterPostreSQLTaskFAABAACF"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            "/",
                                            {
                                              "Fn::Select": [
                                                1,
                                                {
                                                  "Fn::Split": [
                                                    "/",
                                                    {
                                                      "Fn::Select": [
                                                        5,
                                                        {
                                                          "Fn::Split": [
                                                            ":",
                                                            {
                                                              "Ref": "MySQLInstanceSnapshotterPostreSQLTaskFAABAACF"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "iam:PassRole",
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::GetAtt": [
                                            "MySQLInstanceSnapshotterPostreSQLTaskTaskRole82DDF085",
                                            "Arn"
                                          ]
                                        },
                                        {
                                          "Fn::GetAtt": [
                                            "MySQLInstanceSnapshotterPostreSQLTaskExecutionRole78969E33",
                                            "Arn"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Action": "rds:AddTagsToResource",
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":snapshot:sanitize-*"
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":snapshot:mysql-instance-snapshot-*"
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":cluster:sanitize-*"
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "MySQLInstanceSnapshotterDirectorRoleDefaultPolicyF62C2EC2",
                                "roles": [
                                  {
                                    "Ref": "MySQLInstanceSnapshotterDirectorRoleE2669C80"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                              "version": "2.0.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Policy",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.0.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Instance Snapshotter/Director/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::StepFunctions::StateMachine",
                      "aws:cdk:cloudformation:props": {
                        "roleArn": {
                          "Fn::GetAtt": [
                            "MySQLInstanceSnapshotterDirectorRoleE2669C80",
                            "Arn"
                          ]
                        },
                        "definitionString": {
                          "Fn::Join": [
                            "",
                            [
                              "{\"StartAt\":\"Get Parameters\",\"States\":{\"Get Parameters\":{\"Next\":\"Error Catcher\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"",
                              {
                                "Fn::GetAtt": [
                                  "MySQLInstanceSnapshotterparameters53B0A6E1",
                                  "Arn"
                                ]
                              },
                              "\",\"Parameters\":{\"executionId.$\":\"$$.Execution.Id\",\"isCluster\":false,\"databaseIdentifier\":\"",
                              {
                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-RDS:ExportsOutputRefMySQLInstanceA2499B9D2BD8E026"
                              },
                              "\",\"databaseKey\":\"\",\"snapshotPrefix\":\"mysql-instance-snapshot\",\"tempPrefix\":\"sanitize\"}},\"Error Catcher\":{\"Type\":\"Parallel\",\"ResultPath\":null,\"Next\":\"Cleanup\",\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"ResultPath\":null,\"Next\":\"Cleanup\"}],\"Branches\":[{\"StartAt\":\"Create Temporary Snapshot\",\"States\":{\"Create Temporary Snapshot\":{\"Next\":\"Wait for Snapshot\",\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::aws-sdk:rds:createDBSnapshot\",\"Parameters\":{\"DbInstanceIdentifier.$\":\"$.databaseIdentifier\",\"DbSnapshotIdentifier.$\":\"$.tempSnapshotId\",\"Tags\":[{\"Key\":\"RDS-sanitized-snapshots\",\"Value\":\"",
                              {
                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-RDS:ExportsOutputRefMySQLInstanceA2499B9D2BD8E026"
                              },
                              "\"}]}},\"Wait for Snapshot\":{\"Next\":\"Create Temporary Database\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"NotReady\"],\"IntervalSeconds\":60,\"MaxAttempts\":300,\"BackoffRate\":1}],\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"",
                              {
                                "Fn::GetAtt": [
                                  "MySQLInstanceSnapshotterwait17927A95",
                                  "Arn"
                                ]
                              },
                              "\",\"Parameters\":{\"resourceType\":\"snapshot\",\"databaseIdentifier.$\":\"$.databaseIdentifier\",\"snapshotIdentifier.$\":\"$.tempSnapshotId\",\"isCluster\":false}},\"Create Temporary Database\":{\"Next\":\"Wait for Temporary Database\",\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::aws-sdk:rds:restoreDBInstanceFromDBSnapshot\",\"Parameters\":{\"DbInstanceIdentifier.$\":\"$.tempDbId\",\"Engine.$\":\"$.engine\",\"DbSnapshotIdentifier.$\":\"$.tempSnapshotId\",\"PubliclyAccessible\":false,\"VpcSecurityGroupIds\":[\"",
                              {
                                "Fn::GetAtt": [
                                  "MySQLInstanceSnapshotterSGC75DA465",
                                  "GroupId"
                                ]
                              },
                              "\"],\"DbSubnetGroupName\":\"",
                              {
                                "Ref": "MySQLInstanceSnapshotterSubnetgroup503CB3B3"
                              },
                              "\",\"Tags\":[{\"Key\":\"RDS-sanitized-snapshots\",\"Value\":\"",
                              {
                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-RDS:ExportsOutputRefMySQLInstanceA2499B9D2BD8E026"
                              },
                              "\"}]}},\"Wait for Temporary Database\":{\"Next\":\"Set Temporary Password\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"NotReady\"],\"IntervalSeconds\":60,\"MaxAttempts\":300,\"BackoffRate\":1}],\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"",
                              {
                                "Fn::GetAtt": [
                                  "MySQLInstanceSnapshotterwait17927A95",
                                  "Arn"
                                ]
                              },
                              "\",\"Parameters\":{\"resourceType\":\"instance\",\"databaseIdentifier.$\":\"$.tempDbId\",\"isCluster\":false}},\"Set Temporary Password\":{\"Next\":\"Wait for Temporary Password\",\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::aws-sdk:rds:modifyDBInstance\",\"Parameters\":{\"DbInstanceIdentifier.$\":\"$.tempDbId\",\"MasterUserPassword.$\":\"$.tempDb.password\",\"ApplyImmediately\":true,\"BackupRetentionPeriod\":0}},\"Wait for Temporary Password\":{\"Next\":\"Get Temporary Endpoint\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"NotReady\"],\"IntervalSeconds\":60,\"MaxAttempts\":300,\"BackoffRate\":1}],\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"",
                              {
                                "Fn::GetAtt": [
                                  "MySQLInstanceSnapshotterwait17927A95",
                                  "Arn"
                                ]
                              },
                              "\",\"Parameters\":{\"resourceType\":\"instance\",\"databaseIdentifier.$\":\"$.tempDbId\",\"isCluster\":false}},\"Get Temporary Endpoint\":{\"Next\":\"Sanitize\",\"Type\":\"Task\",\"ResultPath\":\"$.tempDb.host\",\"ResultSelector\":{\"endpoint.$\":\"$.DbInstances[0].Endpoint.Address\"},\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::aws-sdk:rds:describeDBInstances\",\"Parameters\":{\"DbInstanceIdentifier.$\":\"$.tempDbId\"}},\"Sanitize\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.dockerImage\",\"StringEquals\":\"mysql\",\"Next\":\"Sanitize MySQL\"},{\"Variable\":\"$.dockerImage\",\"StringEquals\":\"postgres\",\"Next\":\"Sanitize Postgres\"}]},\"Sanitize MySQL\":{\"Next\":\"Create Final Snapshot\",\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::ecs:runTask.sync\",\"Parameters\":{\"Cluster\":\"",
                              {
                                "Fn::GetAtt": [
                                  "MySQLInstanceSnapshottercluster86DF6015",
                                  "Arn"
                                ]
                              },
                              "\",\"TaskDefinition\":\"RDSSanitizedSnapshotterSFNMySQLInstanceSnapshotterMySQLTask5753E21D\",\"NetworkConfiguration\":{\"AwsvpcConfiguration\":{\"Subnets\":[\"",
                              {
                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCIsolatedSubnet1SubnetEBD00FC6298E81EF"
                              },
                              "\",\"",
                              {
                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCIsolatedSubnet2Subnet4B1C8CAAD8B83B81"
                              },
                              "\"],\"SecurityGroups\":[\"",
                              {
                                "Fn::GetAtt": [
                                  "MySQLInstanceSnapshotterSGC75DA465",
                                  "GroupId"
                                ]
                              },
                              "\"]}},\"Overrides\":{\"ContainerOverrides\":[{\"Name\":\"config\",\"Environment\":[{\"Name\":\"MYSQL_HOST\",\"Value.$\":\"$.tempDb.host.endpoint\"},{\"Name\":\"MYSQL_PORT\",\"Value.$\":\"$.tempDb.port\"},{\"Name\":\"MYSQL_USER\",\"Value.$\":\"$.tempDb.user\"},{\"Name\":\"MYSQL_PASSWORD\",\"Value.$\":\"$.tempDb.password\"},{\"Name\":\"MYSQL_DATABASE\",\"Value\":\"\"}]}]},\"LaunchType\":\"FARGATE\"}},\"Create Final Snapshot\":{\"Next\":\"Wait for Final Snapshot\",\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::aws-sdk:rds:createDBSnapshot\",\"Parameters\":{\"DbInstanceIdentifier.$\":\"$.tempDbId\",\"DbSnapshotIdentifier.$\":\"$.targetSnapshotId\",\"Tags\":[{\"Key\":\"RDS-sanitized-snapshots\",\"Value\":\"",
                              {
                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-RDS:ExportsOutputRefMySQLInstanceA2499B9D2BD8E026"
                              },
                              "\"},{\"Key\":\"Final\",\"Value\":\"true\"}]}},\"Sanitize Postgres\":{\"Next\":\"Create Final Snapshot\",\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::ecs:runTask.sync\",\"Parameters\":{\"Cluster\":\"",
                              {
                                "Fn::GetAtt": [
                                  "MySQLInstanceSnapshottercluster86DF6015",
                                  "Arn"
                                ]
                              },
                              "\",\"TaskDefinition\":\"RDSSanitizedSnapshotterSFNMySQLInstanceSnapshotterPostreSQLTask702D64B7\",\"NetworkConfiguration\":{\"AwsvpcConfiguration\":{\"Subnets\":[\"",
                              {
                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCIsolatedSubnet1SubnetEBD00FC6298E81EF"
                              },
                              "\",\"",
                              {
                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCIsolatedSubnet2Subnet4B1C8CAAD8B83B81"
                              },
                              "\"],\"SecurityGroups\":[\"",
                              {
                                "Fn::GetAtt": [
                                  "MySQLInstanceSnapshotterSGC75DA465",
                                  "GroupId"
                                ]
                              },
                              "\"]}},\"Overrides\":{\"ContainerOverrides\":[{\"Name\":\"postgres\",\"Environment\":[{\"Name\":\"PGHOST\",\"Value.$\":\"$.tempDb.host.endpoint\"},{\"Name\":\"PGPORT\",\"Value.$\":\"$.tempDb.port\"},{\"Name\":\"PGUSER\",\"Value.$\":\"$.tempDb.user\"},{\"Name\":\"PGPASSWORD\",\"Value.$\":\"$.tempDb.password\"},{\"Name\":\"PGDATABASE\",\"Value\":\"postgres\"},{\"Name\":\"PGCONNECT_TIMEOUT\",\"Value\":\"30\"}]}]},\"LaunchType\":\"FARGATE\"}},\"Wait for Final Snapshot\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"NotReady\"],\"IntervalSeconds\":60,\"MaxAttempts\":300,\"BackoffRate\":1}],\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"",
                              {
                                "Fn::GetAtt": [
                                  "MySQLInstanceSnapshotterwait17927A95",
                                  "Arn"
                                ]
                              },
                              "\",\"Parameters\":{\"resourceType\":\"snapshot\",\"databaseIdentifier.$\":\"$.tempDbId\",\"snapshotIdentifier.$\":\"$.targetSnapshotId\",\"isCluster\":false}}}}]},\"Cleanup\":{\"Type\":\"Parallel\",\"ResultPath\":null,\"End\":true,\"Branches\":[{\"StartAt\":\"Temporary Snapshot\",\"States\":{\"Temporary Snapshot\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"States.ALL\"],\"IntervalSeconds\":10,\"MaxAttempts\":5}],\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::aws-sdk:rds:deleteDBSnapshot\",\"Parameters\":{\"DbSnapshotIdentifier.$\":\"$.tempSnapshotId\"}}}},{\"StartAt\":\"Temporary Database Instance\",\"States\":{\"Temporary Database Instance\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"States.ALL\"],\"IntervalSeconds\":10,\"MaxAttempts\":5}],\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::aws-sdk:rds:deleteDBInstance\",\"Parameters\":{\"DbInstanceIdentifier.$\":\"$.tempDbId\",\"SkipFinalSnapshot\":true}}}}]}}}"
                            ]
                          ]
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_stepfunctions.CfnStateMachine",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions.StateMachine",
                  "version": "2.0.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.0.5"
            }
          },
          "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a": {
            "id": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "path": "RDS-Sanitized-Snapshotter-SFN/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "children": {
              "Code": {
                "id": "Code",
                "path": "RDS-Sanitized-Snapshotter-SFN/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "RDS-Sanitized-Snapshotter-SFN/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.0.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "RDS-Sanitized-Snapshotter-SFN/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/AssetBucket",
                    "children": {
                      "Notifications": {
                        "id": "Notifications",
                        "path": "RDS-Sanitized-Snapshotter-SFN/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/AssetBucket/Notifications",
                        "constructInfo": {
                          "fqn": "constructs.Construct",
                          "version": "10.0.5"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.0.0"
                }
              },
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "RDS-Sanitized-Snapshotter-SFN/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-SFN/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.0.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "RDS-Sanitized-Snapshotter-SFN/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-SFN/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:PutRetentionPolicy",
                                    "logs:DeleteRetentionPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
                            "roles": [
                              {
                                "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.0.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "RDS-Sanitized-Snapshotter-SFN/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.0.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.0.5"
            }
          },
          "MySQL Cluster Snapshotter": {
            "id": "MySQL Cluster Snapshotter",
            "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter",
            "children": {
              "SG": {
                "id": "SG",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/SG",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/SG/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "Group for communication between sanitizing job and database",
                        "securityGroupEgress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "description": "Allow all outbound traffic by default",
                            "ipProtocol": "-1"
                          }
                        ],
                        "tags": [
                          {
                            "key": "Name",
                            "value": "RDS-sanitized-snapshots"
                          }
                        ],
                        "vpcId": {
                          "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCB9E5F0B4BD23A326"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroup",
                      "version": "2.0.0"
                    }
                  },
                  "from RDSSanitizedSnapshotterSFNMySQLClusterSnapshotterSG88C422B1:ALL PORTS": {
                    "id": "from RDSSanitizedSnapshotterSFNMySQLClusterSnapshotterSG88C422B1:ALL PORTS",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/SG/from RDSSanitizedSnapshotterSFNMySQLClusterSnapshotterSG88C422B1:ALL PORTS",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupIngress",
                      "aws:cdk:cloudformation:props": {
                        "ipProtocol": "tcp",
                        "description": "from RDSSanitizedSnapshotterSFNMySQLClusterSnapshotterSG88C422B1:ALL PORTS",
                        "fromPort": 0,
                        "groupId": {
                          "Fn::GetAtt": [
                            "MySQLClusterSnapshotterSGF5188D63",
                            "GroupId"
                          ]
                        },
                        "sourceSecurityGroupId": {
                          "Fn::GetAtt": [
                            "MySQLClusterSnapshotterSGF5188D63",
                            "GroupId"
                          ]
                        },
                        "toPort": 65535
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroupIngress",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup",
                  "version": "2.0.0"
                }
              },
              "Subnet group": {
                "id": "Subnet group",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/Subnet group",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/Subnet group/Default",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::RDS::DBSubnetGroup",
                      "aws:cdk:cloudformation:props": {
                        "dbSubnetGroupDescription": "Temporary database used for RDS-sanitize-snapshots",
                        "subnetIds": [
                          {
                            "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCPrivateSubnet1Subnet8BCA10E01F79A1B7"
                          },
                          {
                            "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCPrivateSubnet2SubnetCFCDAA7AB22CF85D"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_rds.CfnDBSubnetGroup",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_rds.SubnetGroup",
                  "version": "2.0.0"
                }
              },
              "cluster": {
                "id": "cluster",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/cluster",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/cluster/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ECS::Cluster",
                      "aws:cdk:cloudformation:props": {}
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ecs.CfnCluster",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.Cluster",
                  "version": "2.0.0"
                }
              },
              "parameters": {
                "id": "parameters",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/parameters",
                "children": {
                  "ServiceRole": {
                    "id": "ServiceRole",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/parameters/ServiceRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/parameters/ServiceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "lambda.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                  ]
                                ]
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.0.0"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/parameters/ServiceRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/parameters/ServiceRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "rds:DescribeDBClusters",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":rds:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":cluster:",
                                            {
                                              "Fn::ImportValue": "RDS-Sanitized-Snapshotter-RDS:ExportsOutputRefMySQLClusterD5C73C3376F94030"
                                            }
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "rds:DescribeDBInstances",
                                      "Effect": "Allow",
                                      "Resource": "*"
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "MySQLClusterSnapshotterparametersServiceRoleDefaultPolicy9544C62B",
                                "roles": [
                                  {
                                    "Ref": "MySQLClusterSnapshotterparametersServiceRole4959428F"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                              "version": "2.0.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Policy",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.0.0"
                    }
                  },
                  "Code": {
                    "id": "Code",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/parameters/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/parameters/Code/Stage",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.AssetStaging",
                          "version": "2.0.0"
                        }
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/parameters/Code/AssetBucket",
                        "children": {
                          "Notifications": {
                            "id": "Notifications",
                            "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/parameters/Code/AssetBucket/Notifications",
                            "constructInfo": {
                              "fqn": "constructs.Construct",
                              "version": "10.0.5"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                      "version": "2.0.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/parameters/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "s3Bucket": {
                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                          },
                          "s3Key": "aaa0b8f0bda64ba64db3f302f540214a8d226e02ea5a2841e6a7bcf6d0d40635.zip"
                        },
                        "role": {
                          "Fn::GetAtt": [
                            "MySQLClusterSnapshotterparametersServiceRole4959428F",
                            "Arn"
                          ]
                        },
                        "description": "src/parameters.lambda.ts",
                        "environment": {
                          "variables": {
                            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                          }
                        },
                        "handler": "index.handler",
                        "runtime": "nodejs14.x"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                      "version": "2.0.0"
                    }
                  },
                  "LogRetention": {
                    "id": "LogRetention",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/parameters/LogRetention",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/parameters/LogRetention/Resource",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.CfnResource",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                      "version": "2.0.0"
                    }
                  },
                  "LogGroup": {
                    "id": "LogGroup",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/parameters/LogGroup",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.Function",
                  "version": "2.0.0"
                }
              },
              "Get Parameters": {
                "id": "Get Parameters",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/Get Parameters",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.LambdaInvoke",
                  "version": "2.0.0"
                }
              },
              "Error Catcher": {
                "id": "Error Catcher",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/Error Catcher",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions.Parallel",
                  "version": "2.0.0"
                }
              },
              "Create Temporary Snapshot": {
                "id": "Create Temporary Snapshot",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/Create Temporary Snapshot",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.CallAwsService",
                  "version": "2.0.0"
                }
              },
              "wait": {
                "id": "wait",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/wait",
                "children": {
                  "ServiceRole": {
                    "id": "ServiceRole",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/wait/ServiceRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/wait/ServiceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "lambda.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                  ]
                                ]
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.0.0"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/wait/ServiceRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/wait/ServiceRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "rds:DescribeDBClusters",
                                        "rds:DescribeDBClusterSnapshots",
                                        "rds:DescribeDBSnapshots",
                                        "rds:DescribeDBInstances"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":cluster:",
                                              {
                                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-RDS:ExportsOutputRefMySQLClusterD5C73C3376F94030"
                                              }
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":db:",
                                              {
                                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-RDS:ExportsOutputRefMySQLClusterD5C73C3376F94030"
                                              }
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":cluster:sanitize-*"
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":cluster-snapshot:sanitize-*"
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":cluster-snapshot:mysql-cluster-snapshot-*"
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":db:sanitize-*"
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "MySQLClusterSnapshotterwaitServiceRoleDefaultPolicy9E878AF7",
                                "roles": [
                                  {
                                    "Ref": "MySQLClusterSnapshotterwaitServiceRoleD1DB455D"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                              "version": "2.0.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Policy",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.0.0"
                    }
                  },
                  "Code": {
                    "id": "Code",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/wait/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/wait/Code/Stage",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.AssetStaging",
                          "version": "2.0.0"
                        }
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/wait/Code/AssetBucket",
                        "children": {
                          "Notifications": {
                            "id": "Notifications",
                            "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/wait/Code/AssetBucket/Notifications",
                            "constructInfo": {
                              "fqn": "constructs.Construct",
                              "version": "10.0.5"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                      "version": "2.0.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/wait/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "s3Bucket": {
                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                          },
                          "s3Key": "5fdb11c9c7a3632057afe2a65486806fb26289e8093d19943ad55e9b08090383.zip"
                        },
                        "role": {
                          "Fn::GetAtt": [
                            "MySQLClusterSnapshotterwaitServiceRoleD1DB455D",
                            "Arn"
                          ]
                        },
                        "description": "src/wait.lambda.ts",
                        "environment": {
                          "variables": {
                            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                          }
                        },
                        "handler": "index.handler",
                        "runtime": "nodejs14.x"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                      "version": "2.0.0"
                    }
                  },
                  "LogRetention": {
                    "id": "LogRetention",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/wait/LogRetention",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/wait/LogRetention/Resource",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.CfnResource",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                      "version": "2.0.0"
                    }
                  },
                  "LogGroup": {
                    "id": "LogGroup",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/wait/LogGroup",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.Function",
                  "version": "2.0.0"
                }
              },
              "Wait for Snapshot": {
                "id": "Wait for Snapshot",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/Wait for Snapshot",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.LambdaInvoke",
                  "version": "2.0.0"
                }
              },
              "Create Temporary Database": {
                "id": "Create Temporary Database",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/Create Temporary Database",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.CallAwsService",
                  "version": "2.0.0"
                }
              },
              "Wait for Temporary Database": {
                "id": "Wait for Temporary Database",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/Wait for Temporary Database",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.LambdaInvoke",
                  "version": "2.0.0"
                }
              },
              "Set Temporary Password": {
                "id": "Set Temporary Password",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/Set Temporary Password",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.CallAwsService",
                  "version": "2.0.0"
                }
              },
              "Wait for Temporary Password": {
                "id": "Wait for Temporary Password",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/Wait for Temporary Password",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.LambdaInvoke",
                  "version": "2.0.0"
                }
              },
              "Create Temporary Instance": {
                "id": "Create Temporary Instance",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/Create Temporary Instance",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.CallAwsService",
                  "version": "2.0.0"
                }
              },
              "Wait for Temporary Instance": {
                "id": "Wait for Temporary Instance",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/Wait for Temporary Instance",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.LambdaInvoke",
                  "version": "2.0.0"
                }
              },
              "Get Temporary Cluster Endpoint": {
                "id": "Get Temporary Cluster Endpoint",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/Get Temporary Cluster Endpoint",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.CallAwsService",
                  "version": "2.0.0"
                }
              },
              "Logs": {
                "id": "Logs",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/Logs",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/Logs/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                      "aws:cdk:cloudformation:props": {
                        "retentionInDays": 30
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_logs.CfnLogGroup",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogGroup",
                  "version": "2.0.0"
                }
              },
              "MySQL Task": {
                "id": "MySQL Task",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/MySQL Task",
                "children": {
                  "TaskRole": {
                    "id": "TaskRole",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/MySQL Task/TaskRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/MySQL Task/TaskRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "ecs-tasks.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.0.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/MySQL Task/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                      "aws:cdk:cloudformation:props": {
                        "containerDefinitions": [
                          {
                            "command": [
                              "bash",
                              "-c",
                              "echo \"[client]\nuser=$MYSQL_USER\nhost=$MYSQL_HOST\nport=$MYSQL_PORT\npassword=$MYSQL_PASSWORD\" > ~/.my.cnf && chmod 700 ~/.my.cnf"
                            ],
                            "essential": false,
                            "image": "public.ecr.aws/docker/library/bash:4-alpine3.15",
                            "mountPoints": [
                              {
                                "containerPath": "/root",
                                "readOnly": false,
                                "sourceVolume": "config"
                              }
                            ],
                            "name": "config",
                            "logConfiguration": {
                              "logDriver": "awslogs",
                              "options": {
                                "awslogs-group": {
                                  "Ref": "MySQLClusterSnapshotterLogs987A7E0A"
                                },
                                "awslogs-stream-prefix": "mysql-config",
                                "awslogs-region": {
                                  "Ref": "AWS::Region"
                                }
                              }
                            }
                          },
                          {
                            "command": [
                              "mysql",
                              "-e",
                              "SELECT 1"
                            ],
                            "dependsOn": [
                              {
                                "containerName": "config",
                                "condition": "SUCCESS"
                              }
                            ],
                            "essential": true,
                            "image": "public.ecr.aws/lts/mysql:latest",
                            "mountPoints": [
                              {
                                "containerPath": "/root",
                                "readOnly": true,
                                "sourceVolume": "config"
                              }
                            ],
                            "name": "mysql",
                            "logConfiguration": {
                              "logDriver": "awslogs",
                              "options": {
                                "awslogs-group": {
                                  "Ref": "MySQLClusterSnapshotterLogs987A7E0A"
                                },
                                "awslogs-stream-prefix": "mysql-sanitize",
                                "awslogs-region": {
                                  "Ref": "AWS::Region"
                                }
                              }
                            }
                          }
                        ],
                        "cpu": "256",
                        "executionRoleArn": {
                          "Fn::GetAtt": [
                            "MySQLClusterSnapshotterMySQLTaskExecutionRole50CCB6FA",
                            "Arn"
                          ]
                        },
                        "family": "RDSSanitizedSnapshotterSFNMySQLClusterSnapshotterMySQLTask813891E0",
                        "memory": "512",
                        "networkMode": "awsvpc",
                        "requiresCompatibilities": [
                          "FARGATE"
                        ],
                        "taskRoleArn": {
                          "Fn::GetAtt": [
                            "MySQLClusterSnapshotterMySQLTaskTaskRole3BAE9027",
                            "Arn"
                          ]
                        },
                        "volumes": [
                          {
                            "host": {},
                            "name": "config"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ecs.CfnTaskDefinition",
                      "version": "2.0.0"
                    }
                  },
                  "config": {
                    "id": "config",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/MySQL Task/config",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ecs.ContainerDefinition",
                      "version": "2.0.0"
                    }
                  },
                  "ExecutionRole": {
                    "id": "ExecutionRole",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/MySQL Task/ExecutionRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/MySQL Task/ExecutionRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "ecs-tasks.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.0.0"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/MySQL Task/ExecutionRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/MySQL Task/ExecutionRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "MySQLClusterSnapshotterLogs987A7E0A",
                                          "Arn"
                                        ]
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "MySQLClusterSnapshotterMySQLTaskExecutionRoleDefaultPolicy109BFD8B",
                                "roles": [
                                  {
                                    "Ref": "MySQLClusterSnapshotterMySQLTaskExecutionRole50CCB6FA"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                              "version": "2.0.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Policy",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.0.0"
                    }
                  },
                  "mysql": {
                    "id": "mysql",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/MySQL Task/mysql",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ecs.ContainerDefinition",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.FargateTaskDefinition",
                  "version": "2.0.0"
                }
              },
              "PostreSQL Task": {
                "id": "PostreSQL Task",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/PostreSQL Task",
                "children": {
                  "TaskRole": {
                    "id": "TaskRole",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/PostreSQL Task/TaskRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/PostreSQL Task/TaskRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "ecs-tasks.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.0.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/PostreSQL Task/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                      "aws:cdk:cloudformation:props": {
                        "containerDefinitions": [
                          {
                            "command": [
                              "psql",
                              "-c",
                              "SELECT 1"
                            ],
                            "essential": true,
                            "image": "public.ecr.aws/lts/postgres:latest",
                            "name": "postgres",
                            "logConfiguration": {
                              "logDriver": "awslogs",
                              "options": {
                                "awslogs-group": {
                                  "Ref": "MySQLClusterSnapshotterLogs987A7E0A"
                                },
                                "awslogs-stream-prefix": "psql-sanitize",
                                "awslogs-region": {
                                  "Ref": "AWS::Region"
                                }
                              }
                            }
                          }
                        ],
                        "cpu": "256",
                        "executionRoleArn": {
                          "Fn::GetAtt": [
                            "MySQLClusterSnapshotterPostreSQLTaskExecutionRole430431E0",
                            "Arn"
                          ]
                        },
                        "family": "RDSSanitizedSnapshotterSFNMySQLClusterSnapshotterPostreSQLTask8BE86494",
                        "memory": "512",
                        "networkMode": "awsvpc",
                        "requiresCompatibilities": [
                          "FARGATE"
                        ],
                        "taskRoleArn": {
                          "Fn::GetAtt": [
                            "MySQLClusterSnapshotterPostreSQLTaskTaskRole09172C54",
                            "Arn"
                          ]
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ecs.CfnTaskDefinition",
                      "version": "2.0.0"
                    }
                  },
                  "postgres": {
                    "id": "postgres",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/PostreSQL Task/postgres",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ecs.ContainerDefinition",
                      "version": "2.0.0"
                    }
                  },
                  "ExecutionRole": {
                    "id": "ExecutionRole",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/PostreSQL Task/ExecutionRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/PostreSQL Task/ExecutionRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "ecs-tasks.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.0.0"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/PostreSQL Task/ExecutionRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/PostreSQL Task/ExecutionRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "MySQLClusterSnapshotterLogs987A7E0A",
                                          "Arn"
                                        ]
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "MySQLClusterSnapshotterPostreSQLTaskExecutionRoleDefaultPolicyBFF6CA44",
                                "roles": [
                                  {
                                    "Ref": "MySQLClusterSnapshotterPostreSQLTaskExecutionRole430431E0"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                              "version": "2.0.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Policy",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.FargateTaskDefinition",
                  "version": "2.0.0"
                }
              },
              "Sanitize": {
                "id": "Sanitize",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/Sanitize",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions.Choice",
                  "version": "2.0.0"
                }
              },
              "Sanitize MySQL": {
                "id": "Sanitize MySQL",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/Sanitize MySQL",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.EcsRunTask",
                  "version": "2.0.0"
                }
              },
              "Sanitize Postgres": {
                "id": "Sanitize Postgres",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/Sanitize Postgres",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.EcsRunTask",
                  "version": "2.0.0"
                }
              },
              "Create Final Snapshot": {
                "id": "Create Final Snapshot",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/Create Final Snapshot",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.CallAwsService",
                  "version": "2.0.0"
                }
              },
              "Wait for Final Snapshot": {
                "id": "Wait for Final Snapshot",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/Wait for Final Snapshot",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.LambdaInvoke",
                  "version": "2.0.0"
                }
              },
              "Cleanup": {
                "id": "Cleanup",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/Cleanup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions.Parallel",
                  "version": "2.0.0"
                }
              },
              "Temporary Snapshot": {
                "id": "Temporary Snapshot",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/Temporary Snapshot",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.CallAwsService",
                  "version": "2.0.0"
                }
              },
              "Temporary Database Instance": {
                "id": "Temporary Database Instance",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/Temporary Database Instance",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.CallAwsService",
                  "version": "2.0.0"
                }
              },
              "Temporary Database": {
                "id": "Temporary Database",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/Temporary Database",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.CallAwsService",
                  "version": "2.0.0"
                }
              },
              "Director": {
                "id": "Director",
                "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/Director",
                "children": {
                  "Role": {
                    "id": "Role",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/Director/Role",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/Director/Role/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "states.",
                                          {
                                            "Ref": "AWS::Region"
                                          },
                                          ".amazonaws.com"
                                        ]
                                      ]
                                    }
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.0.0"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/Director/Role/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/Director/Role/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "lambda:InvokeFunction",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "MySQLClusterSnapshotterparametersAF9FF89F",
                                          "Arn"
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "rds:deleteDBClusterSnapshot",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":rds:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":cluster-snapshot:sanitize-*"
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "rds:deleteDBInstance",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":rds:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":db:sanitize-*"
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "rds:deleteDBCluster",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":rds:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":cluster:sanitize-*"
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "rds:createDBClusterSnapshot",
                                      "Effect": "Allow",
                                      "Resource": "*"
                                    },
                                    {
                                      "Action": "lambda:InvokeFunction",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "MySQLClusterSnapshotterwait73D57C6D",
                                          "Arn"
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "rds:restoreDBClusterFromSnapshot",
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":cluster:sanitize-*"
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":db:sanitize-*"
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":cluster-snapshot:sanitize-*"
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":subgrp:",
                                              {
                                                "Ref": "MySQLClusterSnapshotterSubnetgroupF2F35C6A"
                                              }
                                            ]
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Action": "rds:modifyDBCluster",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":rds:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":cluster:sanitize-*"
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "rds:createDBInstance",
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":cluster:sanitize-*"
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":db:sanitize-*"
                                            ]
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Action": "rds:describeDBClusters",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":rds:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":cluster:sanitize-*"
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "ecs:RunTask",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Fn::Select": [
                                                1,
                                                {
                                                  "Fn::Split": [
                                                    ":",
                                                    {
                                                      "Ref": "MySQLClusterSnapshotterMySQLTask8414A409"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            ":",
                                            {
                                              "Fn::Select": [
                                                2,
                                                {
                                                  "Fn::Split": [
                                                    ":",
                                                    {
                                                      "Ref": "MySQLClusterSnapshotterMySQLTask8414A409"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            ":",
                                            {
                                              "Fn::Select": [
                                                3,
                                                {
                                                  "Fn::Split": [
                                                    ":",
                                                    {
                                                      "Ref": "MySQLClusterSnapshotterMySQLTask8414A409"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            ":",
                                            {
                                              "Fn::Select": [
                                                4,
                                                {
                                                  "Fn::Split": [
                                                    ":",
                                                    {
                                                      "Ref": "MySQLClusterSnapshotterMySQLTask8414A409"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            ":",
                                            {
                                              "Fn::Select": [
                                                0,
                                                {
                                                  "Fn::Split": [
                                                    "/",
                                                    {
                                                      "Fn::Select": [
                                                        5,
                                                        {
                                                          "Fn::Split": [
                                                            ":",
                                                            {
                                                              "Ref": "MySQLClusterSnapshotterMySQLTask8414A409"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            "/",
                                            {
                                              "Fn::Select": [
                                                1,
                                                {
                                                  "Fn::Split": [
                                                    "/",
                                                    {
                                                      "Fn::Select": [
                                                        5,
                                                        {
                                                          "Fn::Split": [
                                                            ":",
                                                            {
                                                              "Ref": "MySQLClusterSnapshotterMySQLTask8414A409"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": [
                                        "ecs:StopTask",
                                        "ecs:DescribeTasks"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*"
                                    },
                                    {
                                      "Action": "iam:PassRole",
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::GetAtt": [
                                            "MySQLClusterSnapshotterMySQLTaskTaskRole3BAE9027",
                                            "Arn"
                                          ]
                                        },
                                        {
                                          "Fn::GetAtt": [
                                            "MySQLClusterSnapshotterMySQLTaskExecutionRole50CCB6FA",
                                            "Arn"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Action": [
                                        "events:PutTargets",
                                        "events:PutRule",
                                        "events:DescribeRule"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":events:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":rule/StepFunctionsGetEventsForECSTaskRule"
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "ecs:RunTask",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Fn::Select": [
                                                1,
                                                {
                                                  "Fn::Split": [
                                                    ":",
                                                    {
                                                      "Ref": "MySQLClusterSnapshotterPostreSQLTaskB18030B4"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            ":",
                                            {
                                              "Fn::Select": [
                                                2,
                                                {
                                                  "Fn::Split": [
                                                    ":",
                                                    {
                                                      "Ref": "MySQLClusterSnapshotterPostreSQLTaskB18030B4"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            ":",
                                            {
                                              "Fn::Select": [
                                                3,
                                                {
                                                  "Fn::Split": [
                                                    ":",
                                                    {
                                                      "Ref": "MySQLClusterSnapshotterPostreSQLTaskB18030B4"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            ":",
                                            {
                                              "Fn::Select": [
                                                4,
                                                {
                                                  "Fn::Split": [
                                                    ":",
                                                    {
                                                      "Ref": "MySQLClusterSnapshotterPostreSQLTaskB18030B4"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            ":",
                                            {
                                              "Fn::Select": [
                                                0,
                                                {
                                                  "Fn::Split": [
                                                    "/",
                                                    {
                                                      "Fn::Select": [
                                                        5,
                                                        {
                                                          "Fn::Split": [
                                                            ":",
                                                            {
                                                              "Ref": "MySQLClusterSnapshotterPostreSQLTaskB18030B4"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            "/",
                                            {
                                              "Fn::Select": [
                                                1,
                                                {
                                                  "Fn::Split": [
                                                    "/",
                                                    {
                                                      "Fn::Select": [
                                                        5,
                                                        {
                                                          "Fn::Split": [
                                                            ":",
                                                            {
                                                              "Ref": "MySQLClusterSnapshotterPostreSQLTaskB18030B4"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "iam:PassRole",
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::GetAtt": [
                                            "MySQLClusterSnapshotterPostreSQLTaskTaskRole09172C54",
                                            "Arn"
                                          ]
                                        },
                                        {
                                          "Fn::GetAtt": [
                                            "MySQLClusterSnapshotterPostreSQLTaskExecutionRole430431E0",
                                            "Arn"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Action": "rds:AddTagsToResource",
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":cluster-snapshot:sanitize-*"
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":cluster-snapshot:mysql-cluster-snapshot-*"
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":cluster:sanitize-*"
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "MySQLClusterSnapshotterDirectorRoleDefaultPolicy78A869F9",
                                "roles": [
                                  {
                                    "Ref": "MySQLClusterSnapshotterDirectorRole6035EB89"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                              "version": "2.0.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Policy",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.0.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-SFN/MySQL Cluster Snapshotter/Director/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::StepFunctions::StateMachine",
                      "aws:cdk:cloudformation:props": {
                        "roleArn": {
                          "Fn::GetAtt": [
                            "MySQLClusterSnapshotterDirectorRole6035EB89",
                            "Arn"
                          ]
                        },
                        "definitionString": {
                          "Fn::Join": [
                            "",
                            [
                              "{\"StartAt\":\"Get Parameters\",\"States\":{\"Get Parameters\":{\"Next\":\"Error Catcher\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"",
                              {
                                "Fn::GetAtt": [
                                  "MySQLClusterSnapshotterparametersAF9FF89F",
                                  "Arn"
                                ]
                              },
                              "\",\"Parameters\":{\"executionId.$\":\"$$.Execution.Id\",\"isCluster\":true,\"databaseIdentifier\":\"",
                              {
                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-RDS:ExportsOutputRefMySQLClusterD5C73C3376F94030"
                              },
                              "\",\"databaseKey\":\"\",\"snapshotPrefix\":\"mysql-cluster-snapshot\",\"tempPrefix\":\"sanitize\"}},\"Error Catcher\":{\"Type\":\"Parallel\",\"ResultPath\":null,\"Next\":\"Cleanup\",\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"ResultPath\":null,\"Next\":\"Cleanup\"}],\"Branches\":[{\"StartAt\":\"Create Temporary Snapshot\",\"States\":{\"Create Temporary Snapshot\":{\"Next\":\"Wait for Snapshot\",\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::aws-sdk:rds:createDBClusterSnapshot\",\"Parameters\":{\"DbClusterIdentifier.$\":\"$.databaseIdentifier\",\"DbClusterSnapshotIdentifier.$\":\"$.tempSnapshotId\",\"Tags\":[{\"Key\":\"RDS-sanitized-snapshots\",\"Value\":\"",
                              {
                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-RDS:ExportsOutputRefMySQLClusterD5C73C3376F94030"
                              },
                              "\"}]}},\"Wait for Snapshot\":{\"Next\":\"Create Temporary Database\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"NotReady\"],\"IntervalSeconds\":60,\"MaxAttempts\":300,\"BackoffRate\":1}],\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"",
                              {
                                "Fn::GetAtt": [
                                  "MySQLClusterSnapshotterwait73D57C6D",
                                  "Arn"
                                ]
                              },
                              "\",\"Parameters\":{\"resourceType\":\"snapshot\",\"databaseIdentifier.$\":\"$.databaseIdentifier\",\"snapshotIdentifier.$\":\"$.tempSnapshotId\",\"isCluster\":true}},\"Create Temporary Database\":{\"Next\":\"Wait for Temporary Database\",\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::aws-sdk:rds:restoreDBClusterFromSnapshot\",\"Parameters\":{\"DbClusterIdentifier.$\":\"$.tempDbId\",\"Engine.$\":\"$.engine\",\"SnapshotIdentifier.$\":\"$.tempSnapshotId\",\"PubliclyAccessible\":false,\"VpcSecurityGroupIds\":[\"",
                              {
                                "Fn::GetAtt": [
                                  "MySQLClusterSnapshotterSGF5188D63",
                                  "GroupId"
                                ]
                              },
                              "\"],\"DbSubnetGroupName\":\"",
                              {
                                "Ref": "MySQLClusterSnapshotterSubnetgroupF2F35C6A"
                              },
                              "\",\"Tags\":[{\"Key\":\"RDS-sanitized-snapshots\",\"Value\":\"",
                              {
                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-RDS:ExportsOutputRefMySQLClusterD5C73C3376F94030"
                              },
                              "\"}]}},\"Wait for Temporary Database\":{\"Next\":\"Set Temporary Password\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"NotReady\"],\"IntervalSeconds\":60,\"MaxAttempts\":300,\"BackoffRate\":1}],\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"",
                              {
                                "Fn::GetAtt": [
                                  "MySQLClusterSnapshotterwait73D57C6D",
                                  "Arn"
                                ]
                              },
                              "\",\"Parameters\":{\"resourceType\":\"cluster\",\"databaseIdentifier.$\":\"$.tempDbId\",\"isCluster\":true}},\"Set Temporary Password\":{\"Next\":\"Wait for Temporary Password\",\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::aws-sdk:rds:modifyDBCluster\",\"Parameters\":{\"DbClusterIdentifier.$\":\"$.tempDbId\",\"MasterUserPassword.$\":\"$.tempDb.password\",\"ApplyImmediately\":true}},\"Wait for Temporary Password\":{\"Next\":\"Create Temporary Instance\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"NotReady\"],\"IntervalSeconds\":60,\"MaxAttempts\":300,\"BackoffRate\":1}],\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"",
                              {
                                "Fn::GetAtt": [
                                  "MySQLClusterSnapshotterwait73D57C6D",
                                  "Arn"
                                ]
                              },
                              "\",\"Parameters\":{\"resourceType\":\"cluster\",\"databaseIdentifier.$\":\"$.tempDbId\",\"isCluster\":true}},\"Create Temporary Instance\":{\"Next\":\"Wait for Temporary Instance\",\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::aws-sdk:rds:createDBInstance\",\"Parameters\":{\"DbClusterIdentifier.$\":\"$.tempDbId\",\"DbInstanceIdentifier.$\":\"$.tempDbInstanceId\",\"DbInstanceClass.$\":\"$.tempDbInstanceClass\",\"Engine.$\":\"$.engine\"}},\"Wait for Temporary Instance\":{\"Next\":\"Get Temporary Cluster Endpoint\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"NotReady\"],\"IntervalSeconds\":60,\"MaxAttempts\":300,\"BackoffRate\":1}],\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"",
                              {
                                "Fn::GetAtt": [
                                  "MySQLClusterSnapshotterwait73D57C6D",
                                  "Arn"
                                ]
                              },
                              "\",\"Parameters\":{\"resourceType\":\"instance\",\"databaseIdentifier.$\":\"$.tempDbInstanceId\",\"isCluster\":true}},\"Get Temporary Cluster Endpoint\":{\"Next\":\"Sanitize\",\"Type\":\"Task\",\"ResultPath\":\"$.tempDb.host\",\"ResultSelector\":{\"endpoint.$\":\"$.DbClusters[0].Endpoint\"},\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::aws-sdk:rds:describeDBClusters\",\"Parameters\":{\"DbClusterIdentifier.$\":\"$.tempDbId\"}},\"Sanitize\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.dockerImage\",\"StringEquals\":\"mysql\",\"Next\":\"Sanitize MySQL\"},{\"Variable\":\"$.dockerImage\",\"StringEquals\":\"postgres\",\"Next\":\"Sanitize Postgres\"}]},\"Sanitize MySQL\":{\"Next\":\"Create Final Snapshot\",\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::ecs:runTask.sync\",\"Parameters\":{\"Cluster\":\"",
                              {
                                "Fn::GetAtt": [
                                  "MySQLClusterSnapshottercluster9B2B4982",
                                  "Arn"
                                ]
                              },
                              "\",\"TaskDefinition\":\"RDSSanitizedSnapshotterSFNMySQLClusterSnapshotterMySQLTask813891E0\",\"NetworkConfiguration\":{\"AwsvpcConfiguration\":{\"Subnets\":[\"",
                              {
                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCIsolatedSubnet1SubnetEBD00FC6298E81EF"
                              },
                              "\",\"",
                              {
                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCIsolatedSubnet2Subnet4B1C8CAAD8B83B81"
                              },
                              "\"],\"SecurityGroups\":[\"",
                              {
                                "Fn::GetAtt": [
                                  "MySQLClusterSnapshotterSGF5188D63",
                                  "GroupId"
                                ]
                              },
                              "\"]}},\"Overrides\":{\"ContainerOverrides\":[{\"Name\":\"config\",\"Environment\":[{\"Name\":\"MYSQL_HOST\",\"Value.$\":\"$.tempDb.host.endpoint\"},{\"Name\":\"MYSQL_PORT\",\"Value.$\":\"$.tempDb.port\"},{\"Name\":\"MYSQL_USER\",\"Value.$\":\"$.tempDb.user\"},{\"Name\":\"MYSQL_PASSWORD\",\"Value.$\":\"$.tempDb.password\"},{\"Name\":\"MYSQL_DATABASE\",\"Value\":\"\"}]}]},\"LaunchType\":\"FARGATE\"}},\"Create Final Snapshot\":{\"Next\":\"Wait for Final Snapshot\",\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::aws-sdk:rds:createDBClusterSnapshot\",\"Parameters\":{\"DbClusterIdentifier.$\":\"$.tempDbId\",\"DbClusterSnapshotIdentifier.$\":\"$.targetSnapshotId\",\"Tags\":[{\"Key\":\"RDS-sanitized-snapshots\",\"Value\":\"",
                              {
                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-RDS:ExportsOutputRefMySQLClusterD5C73C3376F94030"
                              },
                              "\"},{\"Key\":\"Final\",\"Value\":\"true\"}]}},\"Sanitize Postgres\":{\"Next\":\"Create Final Snapshot\",\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::ecs:runTask.sync\",\"Parameters\":{\"Cluster\":\"",
                              {
                                "Fn::GetAtt": [
                                  "MySQLClusterSnapshottercluster9B2B4982",
                                  "Arn"
                                ]
                              },
                              "\",\"TaskDefinition\":\"RDSSanitizedSnapshotterSFNMySQLClusterSnapshotterPostreSQLTask8BE86494\",\"NetworkConfiguration\":{\"AwsvpcConfiguration\":{\"Subnets\":[\"",
                              {
                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCIsolatedSubnet1SubnetEBD00FC6298E81EF"
                              },
                              "\",\"",
                              {
                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCIsolatedSubnet2Subnet4B1C8CAAD8B83B81"
                              },
                              "\"],\"SecurityGroups\":[\"",
                              {
                                "Fn::GetAtt": [
                                  "MySQLClusterSnapshotterSGF5188D63",
                                  "GroupId"
                                ]
                              },
                              "\"]}},\"Overrides\":{\"ContainerOverrides\":[{\"Name\":\"postgres\",\"Environment\":[{\"Name\":\"PGHOST\",\"Value.$\":\"$.tempDb.host.endpoint\"},{\"Name\":\"PGPORT\",\"Value.$\":\"$.tempDb.port\"},{\"Name\":\"PGUSER\",\"Value.$\":\"$.tempDb.user\"},{\"Name\":\"PGPASSWORD\",\"Value.$\":\"$.tempDb.password\"},{\"Name\":\"PGDATABASE\",\"Value\":\"postgres\"},{\"Name\":\"PGCONNECT_TIMEOUT\",\"Value\":\"30\"}]}]},\"LaunchType\":\"FARGATE\"}},\"Wait for Final Snapshot\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"NotReady\"],\"IntervalSeconds\":60,\"MaxAttempts\":300,\"BackoffRate\":1}],\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"",
                              {
                                "Fn::GetAtt": [
                                  "MySQLClusterSnapshotterwait73D57C6D",
                                  "Arn"
                                ]
                              },
                              "\",\"Parameters\":{\"resourceType\":\"snapshot\",\"databaseIdentifier.$\":\"$.tempDbId\",\"snapshotIdentifier.$\":\"$.targetSnapshotId\",\"isCluster\":true}}}}]},\"Cleanup\":{\"Type\":\"Parallel\",\"ResultPath\":null,\"End\":true,\"Branches\":[{\"StartAt\":\"Temporary Snapshot\",\"States\":{\"Temporary Snapshot\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"States.ALL\"],\"IntervalSeconds\":10,\"MaxAttempts\":5}],\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::aws-sdk:rds:deleteDBClusterSnapshot\",\"Parameters\":{\"DbClusterSnapshotIdentifier.$\":\"$.tempSnapshotId\"}}}},{\"StartAt\":\"Temporary Database Instance\",\"States\":{\"Temporary Database Instance\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"States.ALL\"],\"IntervalSeconds\":10,\"MaxAttempts\":5}],\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::aws-sdk:rds:deleteDBInstance\",\"Parameters\":{\"DbInstanceIdentifier.$\":\"$.tempDbInstanceId\",\"SkipFinalSnapshot\":true}}}},{\"StartAt\":\"Temporary Database\",\"States\":{\"Temporary Database\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"States.ALL\"],\"IntervalSeconds\":10,\"MaxAttempts\":5}],\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::aws-sdk:rds:deleteDBCluster\",\"Parameters\":{\"DbClusterIdentifier.$\":\"$.tempDbId\",\"SkipFinalSnapshot\":true}}}}]}}}"
                            ]
                          ]
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_stepfunctions.CfnStateMachine",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions.StateMachine",
                  "version": "2.0.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.0.5"
            }
          },
          "PostgreSQL Instance Snapshotter": {
            "id": "PostgreSQL Instance Snapshotter",
            "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter",
            "children": {
              "SG": {
                "id": "SG",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/SG",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/SG/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "Group for communication between sanitizing job and database",
                        "securityGroupEgress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "description": "Allow all outbound traffic by default",
                            "ipProtocol": "-1"
                          }
                        ],
                        "tags": [
                          {
                            "key": "Name",
                            "value": "RDS-sanitized-snapshots"
                          }
                        ],
                        "vpcId": {
                          "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCB9E5F0B4BD23A326"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroup",
                      "version": "2.0.0"
                    }
                  },
                  "from RDSSanitizedSnapshotterSFNPostgreSQLInstanceSnapshotterSG52C89F5A:ALL PORTS": {
                    "id": "from RDSSanitizedSnapshotterSFNPostgreSQLInstanceSnapshotterSG52C89F5A:ALL PORTS",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/SG/from RDSSanitizedSnapshotterSFNPostgreSQLInstanceSnapshotterSG52C89F5A:ALL PORTS",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupIngress",
                      "aws:cdk:cloudformation:props": {
                        "ipProtocol": "tcp",
                        "description": "from RDSSanitizedSnapshotterSFNPostgreSQLInstanceSnapshotterSG52C89F5A:ALL PORTS",
                        "fromPort": 0,
                        "groupId": {
                          "Fn::GetAtt": [
                            "PostgreSQLInstanceSnapshotterSG97FD02BB",
                            "GroupId"
                          ]
                        },
                        "sourceSecurityGroupId": {
                          "Fn::GetAtt": [
                            "PostgreSQLInstanceSnapshotterSG97FD02BB",
                            "GroupId"
                          ]
                        },
                        "toPort": 65535
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroupIngress",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup",
                  "version": "2.0.0"
                }
              },
              "Subnet group": {
                "id": "Subnet group",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/Subnet group",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/Subnet group/Default",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::RDS::DBSubnetGroup",
                      "aws:cdk:cloudformation:props": {
                        "dbSubnetGroupDescription": "Temporary database used for RDS-sanitize-snapshots",
                        "subnetIds": [
                          {
                            "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCPrivateSubnet1Subnet8BCA10E01F79A1B7"
                          },
                          {
                            "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCPrivateSubnet2SubnetCFCDAA7AB22CF85D"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_rds.CfnDBSubnetGroup",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_rds.SubnetGroup",
                  "version": "2.0.0"
                }
              },
              "cluster": {
                "id": "cluster",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/cluster",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/cluster/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ECS::Cluster",
                      "aws:cdk:cloudformation:props": {}
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ecs.CfnCluster",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.Cluster",
                  "version": "2.0.0"
                }
              },
              "parameters": {
                "id": "parameters",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/parameters",
                "children": {
                  "ServiceRole": {
                    "id": "ServiceRole",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/parameters/ServiceRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/parameters/ServiceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "lambda.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                  ]
                                ]
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.0.0"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/parameters/ServiceRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/parameters/ServiceRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "rds:DescribeDBInstances",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":rds:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":db:",
                                            {
                                              "Fn::ImportValue": "RDS-Sanitized-Snapshotter-RDS:ExportsOutputRefPostgresInstance8F00D2DD14EE3CD9"
                                            }
                                          ]
                                        ]
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "PostgreSQLInstanceSnapshotterparametersServiceRoleDefaultPolicy9C4B4594",
                                "roles": [
                                  {
                                    "Ref": "PostgreSQLInstanceSnapshotterparametersServiceRole23B2E630"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                              "version": "2.0.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Policy",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.0.0"
                    }
                  },
                  "Code": {
                    "id": "Code",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/parameters/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/parameters/Code/Stage",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.AssetStaging",
                          "version": "2.0.0"
                        }
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/parameters/Code/AssetBucket",
                        "children": {
                          "Notifications": {
                            "id": "Notifications",
                            "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/parameters/Code/AssetBucket/Notifications",
                            "constructInfo": {
                              "fqn": "constructs.Construct",
                              "version": "10.0.5"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                      "version": "2.0.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/parameters/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "s3Bucket": {
                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                          },
                          "s3Key": "aaa0b8f0bda64ba64db3f302f540214a8d226e02ea5a2841e6a7bcf6d0d40635.zip"
                        },
                        "role": {
                          "Fn::GetAtt": [
                            "PostgreSQLInstanceSnapshotterparametersServiceRole23B2E630",
                            "Arn"
                          ]
                        },
                        "description": "src/parameters.lambda.ts",
                        "environment": {
                          "variables": {
                            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                          }
                        },
                        "handler": "index.handler",
                        "runtime": "nodejs14.x"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                      "version": "2.0.0"
                    }
                  },
                  "LogRetention": {
                    "id": "LogRetention",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/parameters/LogRetention",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/parameters/LogRetention/Resource",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.CfnResource",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                      "version": "2.0.0"
                    }
                  },
                  "LogGroup": {
                    "id": "LogGroup",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/parameters/LogGroup",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.Function",
                  "version": "2.0.0"
                }
              },
              "Get Parameters": {
                "id": "Get Parameters",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/Get Parameters",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.LambdaInvoke",
                  "version": "2.0.0"
                }
              },
              "Error Catcher": {
                "id": "Error Catcher",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/Error Catcher",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions.Parallel",
                  "version": "2.0.0"
                }
              },
              "Create Temporary Snapshot": {
                "id": "Create Temporary Snapshot",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/Create Temporary Snapshot",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.CallAwsService",
                  "version": "2.0.0"
                }
              },
              "wait": {
                "id": "wait",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/wait",
                "children": {
                  "ServiceRole": {
                    "id": "ServiceRole",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/wait/ServiceRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/wait/ServiceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "lambda.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                  ]
                                ]
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.0.0"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/wait/ServiceRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/wait/ServiceRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "rds:DescribeDBClusters",
                                        "rds:DescribeDBClusterSnapshots",
                                        "rds:DescribeDBSnapshots",
                                        "rds:DescribeDBInstances"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":cluster:",
                                              {
                                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-RDS:ExportsOutputRefPostgresInstance8F00D2DD14EE3CD9"
                                              }
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":db:",
                                              {
                                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-RDS:ExportsOutputRefPostgresInstance8F00D2DD14EE3CD9"
                                              }
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":cluster:sanitize-*"
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":snapshot:sanitize-*"
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":snapshot:psql-instance-snapshot-*"
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":db:sanitize-*"
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "PostgreSQLInstanceSnapshotterwaitServiceRoleDefaultPolicy20C24234",
                                "roles": [
                                  {
                                    "Ref": "PostgreSQLInstanceSnapshotterwaitServiceRole7815F7FF"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                              "version": "2.0.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Policy",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.0.0"
                    }
                  },
                  "Code": {
                    "id": "Code",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/wait/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/wait/Code/Stage",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.AssetStaging",
                          "version": "2.0.0"
                        }
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/wait/Code/AssetBucket",
                        "children": {
                          "Notifications": {
                            "id": "Notifications",
                            "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/wait/Code/AssetBucket/Notifications",
                            "constructInfo": {
                              "fqn": "constructs.Construct",
                              "version": "10.0.5"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                      "version": "2.0.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/wait/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "s3Bucket": {
                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                          },
                          "s3Key": "5fdb11c9c7a3632057afe2a65486806fb26289e8093d19943ad55e9b08090383.zip"
                        },
                        "role": {
                          "Fn::GetAtt": [
                            "PostgreSQLInstanceSnapshotterwaitServiceRole7815F7FF",
                            "Arn"
                          ]
                        },
                        "description": "src/wait.lambda.ts",
                        "environment": {
                          "variables": {
                            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                          }
                        },
                        "handler": "index.handler",
                        "runtime": "nodejs14.x"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                      "version": "2.0.0"
                    }
                  },
                  "LogRetention": {
                    "id": "LogRetention",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/wait/LogRetention",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/wait/LogRetention/Resource",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.CfnResource",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                      "version": "2.0.0"
                    }
                  },
                  "LogGroup": {
                    "id": "LogGroup",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/wait/LogGroup",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.Function",
                  "version": "2.0.0"
                }
              },
              "Wait for Snapshot": {
                "id": "Wait for Snapshot",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/Wait for Snapshot",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.LambdaInvoke",
                  "version": "2.0.0"
                }
              },
              "Create Temporary Database": {
                "id": "Create Temporary Database",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/Create Temporary Database",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.CallAwsService",
                  "version": "2.0.0"
                }
              },
              "Wait for Temporary Database": {
                "id": "Wait for Temporary Database",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/Wait for Temporary Database",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.LambdaInvoke",
                  "version": "2.0.0"
                }
              },
              "Set Temporary Password": {
                "id": "Set Temporary Password",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/Set Temporary Password",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.CallAwsService",
                  "version": "2.0.0"
                }
              },
              "Wait for Temporary Password": {
                "id": "Wait for Temporary Password",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/Wait for Temporary Password",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.LambdaInvoke",
                  "version": "2.0.0"
                }
              },
              "Get Temporary Endpoint": {
                "id": "Get Temporary Endpoint",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/Get Temporary Endpoint",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.CallAwsService",
                  "version": "2.0.0"
                }
              },
              "Logs": {
                "id": "Logs",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/Logs",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/Logs/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                      "aws:cdk:cloudformation:props": {
                        "retentionInDays": 30
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_logs.CfnLogGroup",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogGroup",
                  "version": "2.0.0"
                }
              },
              "MySQL Task": {
                "id": "MySQL Task",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/MySQL Task",
                "children": {
                  "TaskRole": {
                    "id": "TaskRole",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/MySQL Task/TaskRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/MySQL Task/TaskRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "ecs-tasks.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.0.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/MySQL Task/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                      "aws:cdk:cloudformation:props": {
                        "containerDefinitions": [
                          {
                            "command": [
                              "bash",
                              "-c",
                              "echo \"[client]\nuser=$MYSQL_USER\nhost=$MYSQL_HOST\nport=$MYSQL_PORT\npassword=$MYSQL_PASSWORD\" > ~/.my.cnf && chmod 700 ~/.my.cnf"
                            ],
                            "essential": false,
                            "image": "public.ecr.aws/docker/library/bash:4-alpine3.15",
                            "mountPoints": [
                              {
                                "containerPath": "/root",
                                "readOnly": false,
                                "sourceVolume": "config"
                              }
                            ],
                            "name": "config",
                            "logConfiguration": {
                              "logDriver": "awslogs",
                              "options": {
                                "awslogs-group": {
                                  "Ref": "PostgreSQLInstanceSnapshotterLogsF028D514"
                                },
                                "awslogs-stream-prefix": "mysql-config",
                                "awslogs-region": {
                                  "Ref": "AWS::Region"
                                }
                              }
                            }
                          },
                          {
                            "command": [
                              "mysql",
                              "-e",
                              "SELECT 1"
                            ],
                            "dependsOn": [
                              {
                                "containerName": "config",
                                "condition": "SUCCESS"
                              }
                            ],
                            "essential": true,
                            "image": "public.ecr.aws/lts/mysql:latest",
                            "mountPoints": [
                              {
                                "containerPath": "/root",
                                "readOnly": true,
                                "sourceVolume": "config"
                              }
                            ],
                            "name": "mysql",
                            "logConfiguration": {
                              "logDriver": "awslogs",
                              "options": {
                                "awslogs-group": {
                                  "Ref": "PostgreSQLInstanceSnapshotterLogsF028D514"
                                },
                                "awslogs-stream-prefix": "mysql-sanitize",
                                "awslogs-region": {
                                  "Ref": "AWS::Region"
                                }
                              }
                            }
                          }
                        ],
                        "cpu": "256",
                        "executionRoleArn": {
                          "Fn::GetAtt": [
                            "PostgreSQLInstanceSnapshotterMySQLTaskExecutionRoleD0258DFF",
                            "Arn"
                          ]
                        },
                        "family": "RDSSanitizedSnapshotterSFNPostgreSQLInstanceSnapshotterMySQLTask1F6F549C",
                        "memory": "512",
                        "networkMode": "awsvpc",
                        "requiresCompatibilities": [
                          "FARGATE"
                        ],
                        "taskRoleArn": {
                          "Fn::GetAtt": [
                            "PostgreSQLInstanceSnapshotterMySQLTaskTaskRoleB2EF5D11",
                            "Arn"
                          ]
                        },
                        "volumes": [
                          {
                            "host": {},
                            "name": "config"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ecs.CfnTaskDefinition",
                      "version": "2.0.0"
                    }
                  },
                  "config": {
                    "id": "config",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/MySQL Task/config",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ecs.ContainerDefinition",
                      "version": "2.0.0"
                    }
                  },
                  "ExecutionRole": {
                    "id": "ExecutionRole",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/MySQL Task/ExecutionRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/MySQL Task/ExecutionRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "ecs-tasks.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.0.0"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/MySQL Task/ExecutionRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/MySQL Task/ExecutionRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "PostgreSQLInstanceSnapshotterLogsF028D514",
                                          "Arn"
                                        ]
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "PostgreSQLInstanceSnapshotterMySQLTaskExecutionRoleDefaultPolicyBC957120",
                                "roles": [
                                  {
                                    "Ref": "PostgreSQLInstanceSnapshotterMySQLTaskExecutionRoleD0258DFF"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                              "version": "2.0.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Policy",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.0.0"
                    }
                  },
                  "mysql": {
                    "id": "mysql",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/MySQL Task/mysql",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ecs.ContainerDefinition",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.FargateTaskDefinition",
                  "version": "2.0.0"
                }
              },
              "PostreSQL Task": {
                "id": "PostreSQL Task",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/PostreSQL Task",
                "children": {
                  "TaskRole": {
                    "id": "TaskRole",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/PostreSQL Task/TaskRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/PostreSQL Task/TaskRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "ecs-tasks.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.0.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/PostreSQL Task/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                      "aws:cdk:cloudformation:props": {
                        "containerDefinitions": [
                          {
                            "command": [
                              "psql",
                              "-c",
                              "SELECT 1"
                            ],
                            "essential": true,
                            "image": "public.ecr.aws/lts/postgres:latest",
                            "name": "postgres",
                            "logConfiguration": {
                              "logDriver": "awslogs",
                              "options": {
                                "awslogs-group": {
                                  "Ref": "PostgreSQLInstanceSnapshotterLogsF028D514"
                                },
                                "awslogs-stream-prefix": "psql-sanitize",
                                "awslogs-region": {
                                  "Ref": "AWS::Region"
                                }
                              }
                            }
                          }
                        ],
                        "cpu": "256",
                        "executionRoleArn": {
                          "Fn::GetAtt": [
                            "PostgreSQLInstanceSnapshotterPostreSQLTaskExecutionRoleF7C4A7FB",
                            "Arn"
                          ]
                        },
                        "family": "RDSSanitizedSnapshotterSFNPostgreSQLInstanceSnapshotterPostreSQLTask00FF05BB",
                        "memory": "512",
                        "networkMode": "awsvpc",
                        "requiresCompatibilities": [
                          "FARGATE"
                        ],
                        "taskRoleArn": {
                          "Fn::GetAtt": [
                            "PostgreSQLInstanceSnapshotterPostreSQLTaskTaskRole04FEDCFB",
                            "Arn"
                          ]
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ecs.CfnTaskDefinition",
                      "version": "2.0.0"
                    }
                  },
                  "postgres": {
                    "id": "postgres",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/PostreSQL Task/postgres",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ecs.ContainerDefinition",
                      "version": "2.0.0"
                    }
                  },
                  "ExecutionRole": {
                    "id": "ExecutionRole",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/PostreSQL Task/ExecutionRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/PostreSQL Task/ExecutionRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "ecs-tasks.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.0.0"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/PostreSQL Task/ExecutionRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/PostreSQL Task/ExecutionRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "PostgreSQLInstanceSnapshotterLogsF028D514",
                                          "Arn"
                                        ]
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "PostgreSQLInstanceSnapshotterPostreSQLTaskExecutionRoleDefaultPolicy9201194B",
                                "roles": [
                                  {
                                    "Ref": "PostgreSQLInstanceSnapshotterPostreSQLTaskExecutionRoleF7C4A7FB"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                              "version": "2.0.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Policy",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.FargateTaskDefinition",
                  "version": "2.0.0"
                }
              },
              "Sanitize": {
                "id": "Sanitize",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/Sanitize",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions.Choice",
                  "version": "2.0.0"
                }
              },
              "Sanitize MySQL": {
                "id": "Sanitize MySQL",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/Sanitize MySQL",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.EcsRunTask",
                  "version": "2.0.0"
                }
              },
              "Sanitize Postgres": {
                "id": "Sanitize Postgres",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/Sanitize Postgres",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.EcsRunTask",
                  "version": "2.0.0"
                }
              },
              "Create Final Snapshot": {
                "id": "Create Final Snapshot",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/Create Final Snapshot",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.CallAwsService",
                  "version": "2.0.0"
                }
              },
              "Wait for Final Snapshot": {
                "id": "Wait for Final Snapshot",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/Wait for Final Snapshot",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.LambdaInvoke",
                  "version": "2.0.0"
                }
              },
              "Cleanup": {
                "id": "Cleanup",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/Cleanup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions.Parallel",
                  "version": "2.0.0"
                }
              },
              "Temporary Snapshot": {
                "id": "Temporary Snapshot",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/Temporary Snapshot",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.CallAwsService",
                  "version": "2.0.0"
                }
              },
              "Temporary Database Instance": {
                "id": "Temporary Database Instance",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/Temporary Database Instance",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.CallAwsService",
                  "version": "2.0.0"
                }
              },
              "Director": {
                "id": "Director",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/Director",
                "children": {
                  "Role": {
                    "id": "Role",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/Director/Role",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/Director/Role/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "states.",
                                          {
                                            "Ref": "AWS::Region"
                                          },
                                          ".amazonaws.com"
                                        ]
                                      ]
                                    }
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.0.0"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/Director/Role/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/Director/Role/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "lambda:InvokeFunction",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "PostgreSQLInstanceSnapshotterparametersA0CF862A",
                                          "Arn"
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "rds:deleteDBSnapshot",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":rds:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":snapshot:sanitize-*"
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "rds:deleteDBInstance",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":rds:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":db:sanitize-*"
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "rds:createDBSnapshot",
                                      "Effect": "Allow",
                                      "Resource": "*"
                                    },
                                    {
                                      "Action": "lambda:InvokeFunction",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "PostgreSQLInstanceSnapshotterwaitE64141BC",
                                          "Arn"
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "rds:restoreDBInstanceFromDBSnapshot",
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":cluster:sanitize-*"
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":db:sanitize-*"
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":snapshot:sanitize-*"
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":subgrp:",
                                              {
                                                "Ref": "PostgreSQLInstanceSnapshotterSubnetgroup7F19C7EE"
                                              }
                                            ]
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Action": "rds:modifyDBInstance",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":rds:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":db:sanitize-*"
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "rds:describeDBInstances",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":rds:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":db:sanitize-*"
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "ecs:RunTask",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Fn::Select": [
                                                1,
                                                {
                                                  "Fn::Split": [
                                                    ":",
                                                    {
                                                      "Ref": "PostgreSQLInstanceSnapshotterMySQLTask53136402"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            ":",
                                            {
                                              "Fn::Select": [
                                                2,
                                                {
                                                  "Fn::Split": [
                                                    ":",
                                                    {
                                                      "Ref": "PostgreSQLInstanceSnapshotterMySQLTask53136402"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            ":",
                                            {
                                              "Fn::Select": [
                                                3,
                                                {
                                                  "Fn::Split": [
                                                    ":",
                                                    {
                                                      "Ref": "PostgreSQLInstanceSnapshotterMySQLTask53136402"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            ":",
                                            {
                                              "Fn::Select": [
                                                4,
                                                {
                                                  "Fn::Split": [
                                                    ":",
                                                    {
                                                      "Ref": "PostgreSQLInstanceSnapshotterMySQLTask53136402"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            ":",
                                            {
                                              "Fn::Select": [
                                                0,
                                                {
                                                  "Fn::Split": [
                                                    "/",
                                                    {
                                                      "Fn::Select": [
                                                        5,
                                                        {
                                                          "Fn::Split": [
                                                            ":",
                                                            {
                                                              "Ref": "PostgreSQLInstanceSnapshotterMySQLTask53136402"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            "/",
                                            {
                                              "Fn::Select": [
                                                1,
                                                {
                                                  "Fn::Split": [
                                                    "/",
                                                    {
                                                      "Fn::Select": [
                                                        5,
                                                        {
                                                          "Fn::Split": [
                                                            ":",
                                                            {
                                                              "Ref": "PostgreSQLInstanceSnapshotterMySQLTask53136402"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": [
                                        "ecs:StopTask",
                                        "ecs:DescribeTasks"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*"
                                    },
                                    {
                                      "Action": "iam:PassRole",
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::GetAtt": [
                                            "PostgreSQLInstanceSnapshotterMySQLTaskTaskRoleB2EF5D11",
                                            "Arn"
                                          ]
                                        },
                                        {
                                          "Fn::GetAtt": [
                                            "PostgreSQLInstanceSnapshotterMySQLTaskExecutionRoleD0258DFF",
                                            "Arn"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Action": [
                                        "events:PutTargets",
                                        "events:PutRule",
                                        "events:DescribeRule"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":events:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":rule/StepFunctionsGetEventsForECSTaskRule"
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "ecs:RunTask",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Fn::Select": [
                                                1,
                                                {
                                                  "Fn::Split": [
                                                    ":",
                                                    {
                                                      "Ref": "PostgreSQLInstanceSnapshotterPostreSQLTask3DC21CCB"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            ":",
                                            {
                                              "Fn::Select": [
                                                2,
                                                {
                                                  "Fn::Split": [
                                                    ":",
                                                    {
                                                      "Ref": "PostgreSQLInstanceSnapshotterPostreSQLTask3DC21CCB"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            ":",
                                            {
                                              "Fn::Select": [
                                                3,
                                                {
                                                  "Fn::Split": [
                                                    ":",
                                                    {
                                                      "Ref": "PostgreSQLInstanceSnapshotterPostreSQLTask3DC21CCB"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            ":",
                                            {
                                              "Fn::Select": [
                                                4,
                                                {
                                                  "Fn::Split": [
                                                    ":",
                                                    {
                                                      "Ref": "PostgreSQLInstanceSnapshotterPostreSQLTask3DC21CCB"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            ":",
                                            {
                                              "Fn::Select": [
                                                0,
                                                {
                                                  "Fn::Split": [
                                                    "/",
                                                    {
                                                      "Fn::Select": [
                                                        5,
                                                        {
                                                          "Fn::Split": [
                                                            ":",
                                                            {
                                                              "Ref": "PostgreSQLInstanceSnapshotterPostreSQLTask3DC21CCB"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            "/",
                                            {
                                              "Fn::Select": [
                                                1,
                                                {
                                                  "Fn::Split": [
                                                    "/",
                                                    {
                                                      "Fn::Select": [
                                                        5,
                                                        {
                                                          "Fn::Split": [
                                                            ":",
                                                            {
                                                              "Ref": "PostgreSQLInstanceSnapshotterPostreSQLTask3DC21CCB"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "iam:PassRole",
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::GetAtt": [
                                            "PostgreSQLInstanceSnapshotterPostreSQLTaskTaskRole04FEDCFB",
                                            "Arn"
                                          ]
                                        },
                                        {
                                          "Fn::GetAtt": [
                                            "PostgreSQLInstanceSnapshotterPostreSQLTaskExecutionRoleF7C4A7FB",
                                            "Arn"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Action": "rds:AddTagsToResource",
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":snapshot:sanitize-*"
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":snapshot:psql-instance-snapshot-*"
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":cluster:sanitize-*"
                                            ]
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Action": [
                                        "kms:CreateGrant",
                                        "kms:DescribeKey"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::ImportValue": "RDS-Sanitized-Snapshotter-RDS:ExportsOutputFnGetAttKey961B73FDArn5A860C43"
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "PostgreSQLInstanceSnapshotterDirectorRoleDefaultPolicyC372C868",
                                "roles": [
                                  {
                                    "Ref": "PostgreSQLInstanceSnapshotterDirectorRole89143BB2"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                              "version": "2.0.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Policy",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.0.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Instance Snapshotter/Director/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::StepFunctions::StateMachine",
                      "aws:cdk:cloudformation:props": {
                        "roleArn": {
                          "Fn::GetAtt": [
                            "PostgreSQLInstanceSnapshotterDirectorRole89143BB2",
                            "Arn"
                          ]
                        },
                        "definitionString": {
                          "Fn::Join": [
                            "",
                            [
                              "{\"StartAt\":\"Get Parameters\",\"States\":{\"Get Parameters\":{\"Next\":\"Error Catcher\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"",
                              {
                                "Fn::GetAtt": [
                                  "PostgreSQLInstanceSnapshotterparametersA0CF862A",
                                  "Arn"
                                ]
                              },
                              "\",\"Parameters\":{\"executionId.$\":\"$$.Execution.Id\",\"isCluster\":false,\"databaseIdentifier\":\"",
                              {
                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-RDS:ExportsOutputRefPostgresInstance8F00D2DD14EE3CD9"
                              },
                              "\",\"databaseKey\":\"",
                              {
                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-RDS:ExportsOutputFnGetAttKey961B73FDArn5A860C43"
                              },
                              "\",\"snapshotPrefix\":\"psql-instance-snapshot\",\"tempPrefix\":\"sanitize\"}},\"Error Catcher\":{\"Type\":\"Parallel\",\"ResultPath\":null,\"Next\":\"Cleanup\",\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"ResultPath\":null,\"Next\":\"Cleanup\"}],\"Branches\":[{\"StartAt\":\"Create Temporary Snapshot\",\"States\":{\"Create Temporary Snapshot\":{\"Next\":\"Wait for Snapshot\",\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::aws-sdk:rds:createDBSnapshot\",\"Parameters\":{\"DbInstanceIdentifier.$\":\"$.databaseIdentifier\",\"DbSnapshotIdentifier.$\":\"$.tempSnapshotId\",\"Tags\":[{\"Key\":\"RDS-sanitized-snapshots\",\"Value\":\"",
                              {
                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-RDS:ExportsOutputRefPostgresInstance8F00D2DD14EE3CD9"
                              },
                              "\"}]}},\"Wait for Snapshot\":{\"Next\":\"Create Temporary Database\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"NotReady\"],\"IntervalSeconds\":60,\"MaxAttempts\":300,\"BackoffRate\":1}],\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"",
                              {
                                "Fn::GetAtt": [
                                  "PostgreSQLInstanceSnapshotterwaitE64141BC",
                                  "Arn"
                                ]
                              },
                              "\",\"Parameters\":{\"resourceType\":\"snapshot\",\"databaseIdentifier.$\":\"$.databaseIdentifier\",\"snapshotIdentifier.$\":\"$.tempSnapshotId\",\"isCluster\":false}},\"Create Temporary Database\":{\"Next\":\"Wait for Temporary Database\",\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::aws-sdk:rds:restoreDBInstanceFromDBSnapshot\",\"Parameters\":{\"DbInstanceIdentifier.$\":\"$.tempDbId\",\"Engine.$\":\"$.engine\",\"DbSnapshotIdentifier.$\":\"$.tempSnapshotId\",\"PubliclyAccessible\":false,\"VpcSecurityGroupIds\":[\"",
                              {
                                "Fn::GetAtt": [
                                  "PostgreSQLInstanceSnapshotterSG97FD02BB",
                                  "GroupId"
                                ]
                              },
                              "\"],\"DbSubnetGroupName\":\"",
                              {
                                "Ref": "PostgreSQLInstanceSnapshotterSubnetgroup7F19C7EE"
                              },
                              "\",\"Tags\":[{\"Key\":\"RDS-sanitized-snapshots\",\"Value\":\"",
                              {
                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-RDS:ExportsOutputRefPostgresInstance8F00D2DD14EE3CD9"
                              },
                              "\"}]}},\"Wait for Temporary Database\":{\"Next\":\"Set Temporary Password\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"NotReady\"],\"IntervalSeconds\":60,\"MaxAttempts\":300,\"BackoffRate\":1}],\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"",
                              {
                                "Fn::GetAtt": [
                                  "PostgreSQLInstanceSnapshotterwaitE64141BC",
                                  "Arn"
                                ]
                              },
                              "\",\"Parameters\":{\"resourceType\":\"instance\",\"databaseIdentifier.$\":\"$.tempDbId\",\"isCluster\":false}},\"Set Temporary Password\":{\"Next\":\"Wait for Temporary Password\",\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::aws-sdk:rds:modifyDBInstance\",\"Parameters\":{\"DbInstanceIdentifier.$\":\"$.tempDbId\",\"MasterUserPassword.$\":\"$.tempDb.password\",\"ApplyImmediately\":true,\"BackupRetentionPeriod\":0}},\"Wait for Temporary Password\":{\"Next\":\"Get Temporary Endpoint\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"NotReady\"],\"IntervalSeconds\":60,\"MaxAttempts\":300,\"BackoffRate\":1}],\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"",
                              {
                                "Fn::GetAtt": [
                                  "PostgreSQLInstanceSnapshotterwaitE64141BC",
                                  "Arn"
                                ]
                              },
                              "\",\"Parameters\":{\"resourceType\":\"instance\",\"databaseIdentifier.$\":\"$.tempDbId\",\"isCluster\":false}},\"Get Temporary Endpoint\":{\"Next\":\"Sanitize\",\"Type\":\"Task\",\"ResultPath\":\"$.tempDb.host\",\"ResultSelector\":{\"endpoint.$\":\"$.DbInstances[0].Endpoint.Address\"},\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::aws-sdk:rds:describeDBInstances\",\"Parameters\":{\"DbInstanceIdentifier.$\":\"$.tempDbId\"}},\"Sanitize\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.dockerImage\",\"StringEquals\":\"mysql\",\"Next\":\"Sanitize MySQL\"},{\"Variable\":\"$.dockerImage\",\"StringEquals\":\"postgres\",\"Next\":\"Sanitize Postgres\"}]},\"Sanitize MySQL\":{\"Next\":\"Create Final Snapshot\",\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::ecs:runTask.sync\",\"Parameters\":{\"Cluster\":\"",
                              {
                                "Fn::GetAtt": [
                                  "PostgreSQLInstanceSnapshottercluster067EC069",
                                  "Arn"
                                ]
                              },
                              "\",\"TaskDefinition\":\"RDSSanitizedSnapshotterSFNPostgreSQLInstanceSnapshotterMySQLTask1F6F549C\",\"NetworkConfiguration\":{\"AwsvpcConfiguration\":{\"Subnets\":[\"",
                              {
                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCIsolatedSubnet1SubnetEBD00FC6298E81EF"
                              },
                              "\",\"",
                              {
                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCIsolatedSubnet2Subnet4B1C8CAAD8B83B81"
                              },
                              "\"],\"SecurityGroups\":[\"",
                              {
                                "Fn::GetAtt": [
                                  "PostgreSQLInstanceSnapshotterSG97FD02BB",
                                  "GroupId"
                                ]
                              },
                              "\"]}},\"Overrides\":{\"ContainerOverrides\":[{\"Name\":\"config\",\"Environment\":[{\"Name\":\"MYSQL_HOST\",\"Value.$\":\"$.tempDb.host.endpoint\"},{\"Name\":\"MYSQL_PORT\",\"Value.$\":\"$.tempDb.port\"},{\"Name\":\"MYSQL_USER\",\"Value.$\":\"$.tempDb.user\"},{\"Name\":\"MYSQL_PASSWORD\",\"Value.$\":\"$.tempDb.password\"},{\"Name\":\"MYSQL_DATABASE\",\"Value\":\"\"}]}]},\"LaunchType\":\"FARGATE\"}},\"Create Final Snapshot\":{\"Next\":\"Wait for Final Snapshot\",\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::aws-sdk:rds:createDBSnapshot\",\"Parameters\":{\"DbInstanceIdentifier.$\":\"$.tempDbId\",\"DbSnapshotIdentifier.$\":\"$.targetSnapshotId\",\"Tags\":[{\"Key\":\"RDS-sanitized-snapshots\",\"Value\":\"",
                              {
                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-RDS:ExportsOutputRefPostgresInstance8F00D2DD14EE3CD9"
                              },
                              "\"},{\"Key\":\"Final\",\"Value\":\"true\"}]}},\"Sanitize Postgres\":{\"Next\":\"Create Final Snapshot\",\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::ecs:runTask.sync\",\"Parameters\":{\"Cluster\":\"",
                              {
                                "Fn::GetAtt": [
                                  "PostgreSQLInstanceSnapshottercluster067EC069",
                                  "Arn"
                                ]
                              },
                              "\",\"TaskDefinition\":\"RDSSanitizedSnapshotterSFNPostgreSQLInstanceSnapshotterPostreSQLTask00FF05BB\",\"NetworkConfiguration\":{\"AwsvpcConfiguration\":{\"Subnets\":[\"",
                              {
                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCIsolatedSubnet1SubnetEBD00FC6298E81EF"
                              },
                              "\",\"",
                              {
                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCIsolatedSubnet2Subnet4B1C8CAAD8B83B81"
                              },
                              "\"],\"SecurityGroups\":[\"",
                              {
                                "Fn::GetAtt": [
                                  "PostgreSQLInstanceSnapshotterSG97FD02BB",
                                  "GroupId"
                                ]
                              },
                              "\"]}},\"Overrides\":{\"ContainerOverrides\":[{\"Name\":\"postgres\",\"Environment\":[{\"Name\":\"PGHOST\",\"Value.$\":\"$.tempDb.host.endpoint\"},{\"Name\":\"PGPORT\",\"Value.$\":\"$.tempDb.port\"},{\"Name\":\"PGUSER\",\"Value.$\":\"$.tempDb.user\"},{\"Name\":\"PGPASSWORD\",\"Value.$\":\"$.tempDb.password\"},{\"Name\":\"PGDATABASE\",\"Value\":\"postgres\"},{\"Name\":\"PGCONNECT_TIMEOUT\",\"Value\":\"30\"}]}]},\"LaunchType\":\"FARGATE\"}},\"Wait for Final Snapshot\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"NotReady\"],\"IntervalSeconds\":60,\"MaxAttempts\":300,\"BackoffRate\":1}],\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"",
                              {
                                "Fn::GetAtt": [
                                  "PostgreSQLInstanceSnapshotterwaitE64141BC",
                                  "Arn"
                                ]
                              },
                              "\",\"Parameters\":{\"resourceType\":\"snapshot\",\"databaseIdentifier.$\":\"$.tempDbId\",\"snapshotIdentifier.$\":\"$.targetSnapshotId\",\"isCluster\":false}}}}]},\"Cleanup\":{\"Type\":\"Parallel\",\"ResultPath\":null,\"End\":true,\"Branches\":[{\"StartAt\":\"Temporary Snapshot\",\"States\":{\"Temporary Snapshot\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"States.ALL\"],\"IntervalSeconds\":10,\"MaxAttempts\":5}],\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::aws-sdk:rds:deleteDBSnapshot\",\"Parameters\":{\"DbSnapshotIdentifier.$\":\"$.tempSnapshotId\"}}}},{\"StartAt\":\"Temporary Database Instance\",\"States\":{\"Temporary Database Instance\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"States.ALL\"],\"IntervalSeconds\":10,\"MaxAttempts\":5}],\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::aws-sdk:rds:deleteDBInstance\",\"Parameters\":{\"DbInstanceIdentifier.$\":\"$.tempDbId\",\"SkipFinalSnapshot\":true}}}}]}}}"
                            ]
                          ]
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_stepfunctions.CfnStateMachine",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions.StateMachine",
                  "version": "2.0.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.0.5"
            }
          },
          "Snapshot Key": {
            "id": "Snapshot Key",
            "path": "RDS-Sanitized-Snapshotter-SFN/Snapshot Key",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "RDS-Sanitized-Snapshotter-SFN/Snapshot Key/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::KMS::Key",
                  "aws:cdk:cloudformation:props": {
                    "keyPolicy": {
                      "Statement": [
                        {
                          "Action": "kms:*",
                          "Effect": "Allow",
                          "Principal": {
                            "AWS": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":iam::",
                                  {
                                    "Ref": "AWS::AccountId"
                                  },
                                  ":root"
                                ]
                              ]
                            }
                          },
                          "Resource": "*"
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "description": "RDS sanitize test target key"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_kms.CfnKey",
                  "version": "2.0.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_kms.Key",
              "version": "2.0.0"
            }
          },
          "PostgreSQL Cluster Snapshotter": {
            "id": "PostgreSQL Cluster Snapshotter",
            "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter",
            "children": {
              "SG": {
                "id": "SG",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/SG",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/SG/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "Group for communication between sanitizing job and database",
                        "securityGroupEgress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "description": "Allow all outbound traffic by default",
                            "ipProtocol": "-1"
                          }
                        ],
                        "tags": [
                          {
                            "key": "Name",
                            "value": "RDS-sanitized-snapshots"
                          }
                        ],
                        "vpcId": {
                          "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCB9E5F0B4BD23A326"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroup",
                      "version": "2.0.0"
                    }
                  },
                  "from RDSSanitizedSnapshotterSFNPostgreSQLClusterSnapshotterSGD655B838:ALL PORTS": {
                    "id": "from RDSSanitizedSnapshotterSFNPostgreSQLClusterSnapshotterSGD655B838:ALL PORTS",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/SG/from RDSSanitizedSnapshotterSFNPostgreSQLClusterSnapshotterSGD655B838:ALL PORTS",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupIngress",
                      "aws:cdk:cloudformation:props": {
                        "ipProtocol": "tcp",
                        "description": "from RDSSanitizedSnapshotterSFNPostgreSQLClusterSnapshotterSGD655B838:ALL PORTS",
                        "fromPort": 0,
                        "groupId": {
                          "Fn::GetAtt": [
                            "PostgreSQLClusterSnapshotterSG7FF985A8",
                            "GroupId"
                          ]
                        },
                        "sourceSecurityGroupId": {
                          "Fn::GetAtt": [
                            "PostgreSQLClusterSnapshotterSG7FF985A8",
                            "GroupId"
                          ]
                        },
                        "toPort": 65535
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroupIngress",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup",
                  "version": "2.0.0"
                }
              },
              "Subnet group": {
                "id": "Subnet group",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/Subnet group",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/Subnet group/Default",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::RDS::DBSubnetGroup",
                      "aws:cdk:cloudformation:props": {
                        "dbSubnetGroupDescription": "Temporary database used for RDS-sanitize-snapshots",
                        "subnetIds": [
                          {
                            "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCPrivateSubnet1Subnet8BCA10E01F79A1B7"
                          },
                          {
                            "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCPrivateSubnet2SubnetCFCDAA7AB22CF85D"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_rds.CfnDBSubnetGroup",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_rds.SubnetGroup",
                  "version": "2.0.0"
                }
              },
              "cluster": {
                "id": "cluster",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/cluster",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/cluster/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ECS::Cluster",
                      "aws:cdk:cloudformation:props": {}
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ecs.CfnCluster",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.Cluster",
                  "version": "2.0.0"
                }
              },
              "parameters": {
                "id": "parameters",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/parameters",
                "children": {
                  "ServiceRole": {
                    "id": "ServiceRole",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/parameters/ServiceRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/parameters/ServiceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "lambda.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                  ]
                                ]
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.0.0"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/parameters/ServiceRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/parameters/ServiceRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "rds:DescribeDBClusters",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":rds:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":cluster:",
                                            {
                                              "Fn::ImportValue": "RDS-Sanitized-Snapshotter-RDS:ExportsOutputRefPostgresCluster5A5B7BE8BE4E3D78"
                                            }
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "rds:DescribeDBInstances",
                                      "Effect": "Allow",
                                      "Resource": "*"
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "PostgreSQLClusterSnapshotterparametersServiceRoleDefaultPolicy82F25ECA",
                                "roles": [
                                  {
                                    "Ref": "PostgreSQLClusterSnapshotterparametersServiceRoleB3208E28"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                              "version": "2.0.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Policy",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.0.0"
                    }
                  },
                  "Code": {
                    "id": "Code",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/parameters/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/parameters/Code/Stage",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.AssetStaging",
                          "version": "2.0.0"
                        }
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/parameters/Code/AssetBucket",
                        "children": {
                          "Notifications": {
                            "id": "Notifications",
                            "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/parameters/Code/AssetBucket/Notifications",
                            "constructInfo": {
                              "fqn": "constructs.Construct",
                              "version": "10.0.5"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                      "version": "2.0.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/parameters/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "s3Bucket": {
                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                          },
                          "s3Key": "aaa0b8f0bda64ba64db3f302f540214a8d226e02ea5a2841e6a7bcf6d0d40635.zip"
                        },
                        "role": {
                          "Fn::GetAtt": [
                            "PostgreSQLClusterSnapshotterparametersServiceRoleB3208E28",
                            "Arn"
                          ]
                        },
                        "description": "src/parameters.lambda.ts",
                        "environment": {
                          "variables": {
                            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                          }
                        },
                        "handler": "index.handler",
                        "runtime": "nodejs14.x"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                      "version": "2.0.0"
                    }
                  },
                  "LogRetention": {
                    "id": "LogRetention",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/parameters/LogRetention",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/parameters/LogRetention/Resource",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.CfnResource",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                      "version": "2.0.0"
                    }
                  },
                  "LogGroup": {
                    "id": "LogGroup",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/parameters/LogGroup",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.Function",
                  "version": "2.0.0"
                }
              },
              "Get Parameters": {
                "id": "Get Parameters",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/Get Parameters",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.LambdaInvoke",
                  "version": "2.0.0"
                }
              },
              "Error Catcher": {
                "id": "Error Catcher",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/Error Catcher",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions.Parallel",
                  "version": "2.0.0"
                }
              },
              "Create Temporary Snapshot": {
                "id": "Create Temporary Snapshot",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/Create Temporary Snapshot",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.CallAwsService",
                  "version": "2.0.0"
                }
              },
              "wait": {
                "id": "wait",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/wait",
                "children": {
                  "ServiceRole": {
                    "id": "ServiceRole",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/wait/ServiceRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/wait/ServiceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "lambda.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                  ]
                                ]
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.0.0"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/wait/ServiceRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/wait/ServiceRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "rds:DescribeDBClusters",
                                        "rds:DescribeDBClusterSnapshots",
                                        "rds:DescribeDBSnapshots",
                                        "rds:DescribeDBInstances"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":cluster:",
                                              {
                                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-RDS:ExportsOutputRefPostgresCluster5A5B7BE8BE4E3D78"
                                              }
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":db:",
                                              {
                                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-RDS:ExportsOutputRefPostgresCluster5A5B7BE8BE4E3D78"
                                              }
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":cluster:sanitize-*"
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":cluster-snapshot:sanitize-*"
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":cluster-snapshot:psql-cluster-snapshot-*"
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":db:sanitize-*"
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "PostgreSQLClusterSnapshotterwaitServiceRoleDefaultPolicyB7AEBC76",
                                "roles": [
                                  {
                                    "Ref": "PostgreSQLClusterSnapshotterwaitServiceRole662B9A5C"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                              "version": "2.0.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Policy",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.0.0"
                    }
                  },
                  "Code": {
                    "id": "Code",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/wait/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/wait/Code/Stage",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.AssetStaging",
                          "version": "2.0.0"
                        }
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/wait/Code/AssetBucket",
                        "children": {
                          "Notifications": {
                            "id": "Notifications",
                            "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/wait/Code/AssetBucket/Notifications",
                            "constructInfo": {
                              "fqn": "constructs.Construct",
                              "version": "10.0.5"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                      "version": "2.0.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/wait/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "s3Bucket": {
                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                          },
                          "s3Key": "5fdb11c9c7a3632057afe2a65486806fb26289e8093d19943ad55e9b08090383.zip"
                        },
                        "role": {
                          "Fn::GetAtt": [
                            "PostgreSQLClusterSnapshotterwaitServiceRole662B9A5C",
                            "Arn"
                          ]
                        },
                        "description": "src/wait.lambda.ts",
                        "environment": {
                          "variables": {
                            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                          }
                        },
                        "handler": "index.handler",
                        "runtime": "nodejs14.x"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                      "version": "2.0.0"
                    }
                  },
                  "LogRetention": {
                    "id": "LogRetention",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/wait/LogRetention",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/wait/LogRetention/Resource",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.CfnResource",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                      "version": "2.0.0"
                    }
                  },
                  "LogGroup": {
                    "id": "LogGroup",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/wait/LogGroup",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.Function",
                  "version": "2.0.0"
                }
              },
              "Wait for Snapshot": {
                "id": "Wait for Snapshot",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/Wait for Snapshot",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.LambdaInvoke",
                  "version": "2.0.0"
                }
              },
              "Re-encrypt Snapshot": {
                "id": "Re-encrypt Snapshot",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/Re-encrypt Snapshot",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.CallAwsService",
                  "version": "2.0.0"
                }
              },
              "Wait for Re-encrypt": {
                "id": "Wait for Re-encrypt",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/Wait for Re-encrypt",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.LambdaInvoke",
                  "version": "2.0.0"
                }
              },
              "Create Temporary Database": {
                "id": "Create Temporary Database",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/Create Temporary Database",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.CallAwsService",
                  "version": "2.0.0"
                }
              },
              "Wait for Temporary Database": {
                "id": "Wait for Temporary Database",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/Wait for Temporary Database",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.LambdaInvoke",
                  "version": "2.0.0"
                }
              },
              "Set Temporary Password": {
                "id": "Set Temporary Password",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/Set Temporary Password",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.CallAwsService",
                  "version": "2.0.0"
                }
              },
              "Wait for Temporary Password": {
                "id": "Wait for Temporary Password",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/Wait for Temporary Password",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.LambdaInvoke",
                  "version": "2.0.0"
                }
              },
              "Create Temporary Instance": {
                "id": "Create Temporary Instance",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/Create Temporary Instance",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.CallAwsService",
                  "version": "2.0.0"
                }
              },
              "Wait for Temporary Instance": {
                "id": "Wait for Temporary Instance",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/Wait for Temporary Instance",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.LambdaInvoke",
                  "version": "2.0.0"
                }
              },
              "Get Temporary Cluster Endpoint": {
                "id": "Get Temporary Cluster Endpoint",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/Get Temporary Cluster Endpoint",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.CallAwsService",
                  "version": "2.0.0"
                }
              },
              "Logs": {
                "id": "Logs",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/Logs",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/Logs/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                      "aws:cdk:cloudformation:props": {
                        "retentionInDays": 30
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_logs.CfnLogGroup",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogGroup",
                  "version": "2.0.0"
                }
              },
              "MySQL Task": {
                "id": "MySQL Task",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/MySQL Task",
                "children": {
                  "TaskRole": {
                    "id": "TaskRole",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/MySQL Task/TaskRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/MySQL Task/TaskRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "ecs-tasks.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.0.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/MySQL Task/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                      "aws:cdk:cloudformation:props": {
                        "containerDefinitions": [
                          {
                            "command": [
                              "bash",
                              "-c",
                              "echo \"[client]\nuser=$MYSQL_USER\nhost=$MYSQL_HOST\nport=$MYSQL_PORT\npassword=$MYSQL_PASSWORD\" > ~/.my.cnf && chmod 700 ~/.my.cnf"
                            ],
                            "essential": false,
                            "image": "public.ecr.aws/docker/library/bash:4-alpine3.15",
                            "mountPoints": [
                              {
                                "containerPath": "/root",
                                "readOnly": false,
                                "sourceVolume": "config"
                              }
                            ],
                            "name": "config",
                            "logConfiguration": {
                              "logDriver": "awslogs",
                              "options": {
                                "awslogs-group": {
                                  "Ref": "PostgreSQLClusterSnapshotterLogsD5C5A603"
                                },
                                "awslogs-stream-prefix": "mysql-config",
                                "awslogs-region": {
                                  "Ref": "AWS::Region"
                                }
                              }
                            }
                          },
                          {
                            "command": [
                              "mysql",
                              "-e",
                              "SELECT 1"
                            ],
                            "dependsOn": [
                              {
                                "containerName": "config",
                                "condition": "SUCCESS"
                              }
                            ],
                            "essential": true,
                            "image": "public.ecr.aws/lts/mysql:latest",
                            "mountPoints": [
                              {
                                "containerPath": "/root",
                                "readOnly": true,
                                "sourceVolume": "config"
                              }
                            ],
                            "name": "mysql",
                            "logConfiguration": {
                              "logDriver": "awslogs",
                              "options": {
                                "awslogs-group": {
                                  "Ref": "PostgreSQLClusterSnapshotterLogsD5C5A603"
                                },
                                "awslogs-stream-prefix": "mysql-sanitize",
                                "awslogs-region": {
                                  "Ref": "AWS::Region"
                                }
                              }
                            }
                          }
                        ],
                        "cpu": "256",
                        "executionRoleArn": {
                          "Fn::GetAtt": [
                            "PostgreSQLClusterSnapshotterMySQLTaskExecutionRole82F4953B",
                            "Arn"
                          ]
                        },
                        "family": "RDSSanitizedSnapshotterSFNPostgreSQLClusterSnapshotterMySQLTask9865F232",
                        "memory": "512",
                        "networkMode": "awsvpc",
                        "requiresCompatibilities": [
                          "FARGATE"
                        ],
                        "taskRoleArn": {
                          "Fn::GetAtt": [
                            "PostgreSQLClusterSnapshotterMySQLTaskTaskRoleE079F904",
                            "Arn"
                          ]
                        },
                        "volumes": [
                          {
                            "host": {},
                            "name": "config"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ecs.CfnTaskDefinition",
                      "version": "2.0.0"
                    }
                  },
                  "config": {
                    "id": "config",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/MySQL Task/config",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ecs.ContainerDefinition",
                      "version": "2.0.0"
                    }
                  },
                  "ExecutionRole": {
                    "id": "ExecutionRole",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/MySQL Task/ExecutionRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/MySQL Task/ExecutionRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "ecs-tasks.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.0.0"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/MySQL Task/ExecutionRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/MySQL Task/ExecutionRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "PostgreSQLClusterSnapshotterLogsD5C5A603",
                                          "Arn"
                                        ]
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "PostgreSQLClusterSnapshotterMySQLTaskExecutionRoleDefaultPolicy6066AB09",
                                "roles": [
                                  {
                                    "Ref": "PostgreSQLClusterSnapshotterMySQLTaskExecutionRole82F4953B"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                              "version": "2.0.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Policy",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.0.0"
                    }
                  },
                  "mysql": {
                    "id": "mysql",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/MySQL Task/mysql",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ecs.ContainerDefinition",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.FargateTaskDefinition",
                  "version": "2.0.0"
                }
              },
              "PostreSQL Task": {
                "id": "PostreSQL Task",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/PostreSQL Task",
                "children": {
                  "TaskRole": {
                    "id": "TaskRole",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/PostreSQL Task/TaskRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/PostreSQL Task/TaskRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "ecs-tasks.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.0.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/PostreSQL Task/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                      "aws:cdk:cloudformation:props": {
                        "containerDefinitions": [
                          {
                            "command": [
                              "psql",
                              "-c",
                              "SELECT 1"
                            ],
                            "essential": true,
                            "image": "public.ecr.aws/lts/postgres:latest",
                            "name": "postgres",
                            "logConfiguration": {
                              "logDriver": "awslogs",
                              "options": {
                                "awslogs-group": {
                                  "Ref": "PostgreSQLClusterSnapshotterLogsD5C5A603"
                                },
                                "awslogs-stream-prefix": "psql-sanitize",
                                "awslogs-region": {
                                  "Ref": "AWS::Region"
                                }
                              }
                            }
                          }
                        ],
                        "cpu": "256",
                        "executionRoleArn": {
                          "Fn::GetAtt": [
                            "PostgreSQLClusterSnapshotterPostreSQLTaskExecutionRole9B27EF24",
                            "Arn"
                          ]
                        },
                        "family": "RDSSanitizedSnapshotterSFNPostgreSQLClusterSnapshotterPostreSQLTask914B7835",
                        "memory": "512",
                        "networkMode": "awsvpc",
                        "requiresCompatibilities": [
                          "FARGATE"
                        ],
                        "taskRoleArn": {
                          "Fn::GetAtt": [
                            "PostgreSQLClusterSnapshotterPostreSQLTaskTaskRole4CCD7360",
                            "Arn"
                          ]
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ecs.CfnTaskDefinition",
                      "version": "2.0.0"
                    }
                  },
                  "postgres": {
                    "id": "postgres",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/PostreSQL Task/postgres",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ecs.ContainerDefinition",
                      "version": "2.0.0"
                    }
                  },
                  "ExecutionRole": {
                    "id": "ExecutionRole",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/PostreSQL Task/ExecutionRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/PostreSQL Task/ExecutionRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "ecs-tasks.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.0.0"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/PostreSQL Task/ExecutionRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/PostreSQL Task/ExecutionRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "PostgreSQLClusterSnapshotterLogsD5C5A603",
                                          "Arn"
                                        ]
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "PostgreSQLClusterSnapshotterPostreSQLTaskExecutionRoleDefaultPolicyC9A9FEA1",
                                "roles": [
                                  {
                                    "Ref": "PostgreSQLClusterSnapshotterPostreSQLTaskExecutionRole9B27EF24"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                              "version": "2.0.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Policy",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.FargateTaskDefinition",
                  "version": "2.0.0"
                }
              },
              "Sanitize": {
                "id": "Sanitize",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/Sanitize",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions.Choice",
                  "version": "2.0.0"
                }
              },
              "Sanitize MySQL": {
                "id": "Sanitize MySQL",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/Sanitize MySQL",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.EcsRunTask",
                  "version": "2.0.0"
                }
              },
              "Sanitize Postgres": {
                "id": "Sanitize Postgres",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/Sanitize Postgres",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.EcsRunTask",
                  "version": "2.0.0"
                }
              },
              "Create Final Snapshot": {
                "id": "Create Final Snapshot",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/Create Final Snapshot",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.CallAwsService",
                  "version": "2.0.0"
                }
              },
              "Wait for Final Snapshot": {
                "id": "Wait for Final Snapshot",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/Wait for Final Snapshot",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.LambdaInvoke",
                  "version": "2.0.0"
                }
              },
              "Cleanup": {
                "id": "Cleanup",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/Cleanup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions.Parallel",
                  "version": "2.0.0"
                }
              },
              "Temporary Snapshot": {
                "id": "Temporary Snapshot",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/Temporary Snapshot",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.CallAwsService",
                  "version": "2.0.0"
                }
              },
              "Re-encrypted Snapshot": {
                "id": "Re-encrypted Snapshot",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/Re-encrypted Snapshot",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.CallAwsService",
                  "version": "2.0.0"
                }
              },
              "Temporary Database Instance": {
                "id": "Temporary Database Instance",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/Temporary Database Instance",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.CallAwsService",
                  "version": "2.0.0"
                }
              },
              "Temporary Database": {
                "id": "Temporary Database",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/Temporary Database",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions_tasks.CallAwsService",
                  "version": "2.0.0"
                }
              },
              "Director": {
                "id": "Director",
                "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/Director",
                "children": {
                  "Role": {
                    "id": "Role",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/Director/Role",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/Director/Role/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "states.",
                                          {
                                            "Ref": "AWS::Region"
                                          },
                                          ".amazonaws.com"
                                        ]
                                      ]
                                    }
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.0.0"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/Director/Role/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/Director/Role/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "lambda:InvokeFunction",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "PostgreSQLClusterSnapshotterparameters25147BEC",
                                          "Arn"
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "rds:deleteDBClusterSnapshot",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":rds:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":cluster-snapshot:sanitize-*"
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "rds:deleteDBInstance",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":rds:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":db:sanitize-*"
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "rds:deleteDBCluster",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":rds:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":cluster:sanitize-*"
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "rds:createDBClusterSnapshot",
                                      "Effect": "Allow",
                                      "Resource": "*"
                                    },
                                    {
                                      "Action": "lambda:InvokeFunction",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "PostgreSQLClusterSnapshotterwait7A15A210",
                                          "Arn"
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "rds:copyDBClusterSnapshot",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":rds:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":cluster-snapshot:sanitize-*"
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "rds:restoreDBClusterFromSnapshot",
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":cluster:sanitize-*"
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":db:sanitize-*"
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":cluster-snapshot:sanitize-*"
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":subgrp:",
                                              {
                                                "Ref": "PostgreSQLClusterSnapshotterSubnetgroupA37EB2B3"
                                              }
                                            ]
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Action": "rds:modifyDBCluster",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":rds:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":cluster:sanitize-*"
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "rds:createDBInstance",
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":cluster:sanitize-*"
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":db:sanitize-*"
                                            ]
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Action": "rds:describeDBClusters",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":rds:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":cluster:sanitize-*"
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "ecs:RunTask",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Fn::Select": [
                                                1,
                                                {
                                                  "Fn::Split": [
                                                    ":",
                                                    {
                                                      "Ref": "PostgreSQLClusterSnapshotterMySQLTask9D91D3F5"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            ":",
                                            {
                                              "Fn::Select": [
                                                2,
                                                {
                                                  "Fn::Split": [
                                                    ":",
                                                    {
                                                      "Ref": "PostgreSQLClusterSnapshotterMySQLTask9D91D3F5"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            ":",
                                            {
                                              "Fn::Select": [
                                                3,
                                                {
                                                  "Fn::Split": [
                                                    ":",
                                                    {
                                                      "Ref": "PostgreSQLClusterSnapshotterMySQLTask9D91D3F5"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            ":",
                                            {
                                              "Fn::Select": [
                                                4,
                                                {
                                                  "Fn::Split": [
                                                    ":",
                                                    {
                                                      "Ref": "PostgreSQLClusterSnapshotterMySQLTask9D91D3F5"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            ":",
                                            {
                                              "Fn::Select": [
                                                0,
                                                {
                                                  "Fn::Split": [
                                                    "/",
                                                    {
                                                      "Fn::Select": [
                                                        5,
                                                        {
                                                          "Fn::Split": [
                                                            ":",
                                                            {
                                                              "Ref": "PostgreSQLClusterSnapshotterMySQLTask9D91D3F5"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            "/",
                                            {
                                              "Fn::Select": [
                                                1,
                                                {
                                                  "Fn::Split": [
                                                    "/",
                                                    {
                                                      "Fn::Select": [
                                                        5,
                                                        {
                                                          "Fn::Split": [
                                                            ":",
                                                            {
                                                              "Ref": "PostgreSQLClusterSnapshotterMySQLTask9D91D3F5"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": [
                                        "ecs:StopTask",
                                        "ecs:DescribeTasks"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*"
                                    },
                                    {
                                      "Action": "iam:PassRole",
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::GetAtt": [
                                            "PostgreSQLClusterSnapshotterMySQLTaskTaskRoleE079F904",
                                            "Arn"
                                          ]
                                        },
                                        {
                                          "Fn::GetAtt": [
                                            "PostgreSQLClusterSnapshotterMySQLTaskExecutionRole82F4953B",
                                            "Arn"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Action": [
                                        "events:PutTargets",
                                        "events:PutRule",
                                        "events:DescribeRule"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":events:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":rule/StepFunctionsGetEventsForECSTaskRule"
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "ecs:RunTask",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Fn::Select": [
                                                1,
                                                {
                                                  "Fn::Split": [
                                                    ":",
                                                    {
                                                      "Ref": "PostgreSQLClusterSnapshotterPostreSQLTaskE150FEBD"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            ":",
                                            {
                                              "Fn::Select": [
                                                2,
                                                {
                                                  "Fn::Split": [
                                                    ":",
                                                    {
                                                      "Ref": "PostgreSQLClusterSnapshotterPostreSQLTaskE150FEBD"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            ":",
                                            {
                                              "Fn::Select": [
                                                3,
                                                {
                                                  "Fn::Split": [
                                                    ":",
                                                    {
                                                      "Ref": "PostgreSQLClusterSnapshotterPostreSQLTaskE150FEBD"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            ":",
                                            {
                                              "Fn::Select": [
                                                4,
                                                {
                                                  "Fn::Split": [
                                                    ":",
                                                    {
                                                      "Ref": "PostgreSQLClusterSnapshotterPostreSQLTaskE150FEBD"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            ":",
                                            {
                                              "Fn::Select": [
                                                0,
                                                {
                                                  "Fn::Split": [
                                                    "/",
                                                    {
                                                      "Fn::Select": [
                                                        5,
                                                        {
                                                          "Fn::Split": [
                                                            ":",
                                                            {
                                                              "Ref": "PostgreSQLClusterSnapshotterPostreSQLTaskE150FEBD"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            "/",
                                            {
                                              "Fn::Select": [
                                                1,
                                                {
                                                  "Fn::Split": [
                                                    "/",
                                                    {
                                                      "Fn::Select": [
                                                        5,
                                                        {
                                                          "Fn::Split": [
                                                            ":",
                                                            {
                                                              "Ref": "PostgreSQLClusterSnapshotterPostreSQLTaskE150FEBD"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "iam:PassRole",
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::GetAtt": [
                                            "PostgreSQLClusterSnapshotterPostreSQLTaskTaskRole4CCD7360",
                                            "Arn"
                                          ]
                                        },
                                        {
                                          "Fn::GetAtt": [
                                            "PostgreSQLClusterSnapshotterPostreSQLTaskExecutionRole9B27EF24",
                                            "Arn"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Action": "rds:AddTagsToResource",
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":cluster-snapshot:sanitize-*"
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":cluster-snapshot:psql-cluster-snapshot-*"
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":cluster:sanitize-*"
                                            ]
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Action": [
                                        "kms:CreateGrant",
                                        "kms:DescribeKey"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "SnapshotKey0EDEBDF6",
                                          "Arn"
                                        ]
                                      }
                                    },
                                    {
                                      "Action": [
                                        "kms:CreateGrant",
                                        "kms:DescribeKey"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::ImportValue": "RDS-Sanitized-Snapshotter-RDS:ExportsOutputFnGetAttKey961B73FDArn5A860C43"
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "PostgreSQLClusterSnapshotterDirectorRoleDefaultPolicy6668829B",
                                "roles": [
                                  {
                                    "Ref": "PostgreSQLClusterSnapshotterDirectorRole38961E19"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                              "version": "2.0.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Policy",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.0.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-SFN/PostgreSQL Cluster Snapshotter/Director/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::StepFunctions::StateMachine",
                      "aws:cdk:cloudformation:props": {
                        "roleArn": {
                          "Fn::GetAtt": [
                            "PostgreSQLClusterSnapshotterDirectorRole38961E19",
                            "Arn"
                          ]
                        },
                        "definitionString": {
                          "Fn::Join": [
                            "",
                            [
                              "{\"StartAt\":\"Get Parameters\",\"States\":{\"Get Parameters\":{\"Next\":\"Error Catcher\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"",
                              {
                                "Fn::GetAtt": [
                                  "PostgreSQLClusterSnapshotterparameters25147BEC",
                                  "Arn"
                                ]
                              },
                              "\",\"Parameters\":{\"executionId.$\":\"$$.Execution.Id\",\"isCluster\":true,\"databaseIdentifier\":\"",
                              {
                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-RDS:ExportsOutputRefPostgresCluster5A5B7BE8BE4E3D78"
                              },
                              "\",\"databaseKey\":\"",
                              {
                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-RDS:ExportsOutputFnGetAttKey961B73FDArn5A860C43"
                              },
                              "\",\"snapshotPrefix\":\"psql-cluster-snapshot\",\"tempPrefix\":\"sanitize\"}},\"Error Catcher\":{\"Type\":\"Parallel\",\"ResultPath\":null,\"Next\":\"Cleanup\",\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"ResultPath\":null,\"Next\":\"Cleanup\"}],\"Branches\":[{\"StartAt\":\"Create Temporary Snapshot\",\"States\":{\"Create Temporary Snapshot\":{\"Next\":\"Wait for Snapshot\",\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::aws-sdk:rds:createDBClusterSnapshot\",\"Parameters\":{\"DbClusterIdentifier.$\":\"$.databaseIdentifier\",\"DbClusterSnapshotIdentifier.$\":\"$.tempSnapshotId\",\"Tags\":[{\"Key\":\"RDS-sanitized-snapshots\",\"Value\":\"",
                              {
                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-RDS:ExportsOutputRefPostgresCluster5A5B7BE8BE4E3D78"
                              },
                              "\"}]}},\"Wait for Snapshot\":{\"Next\":\"Re-encrypt Snapshot\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"NotReady\"],\"IntervalSeconds\":60,\"MaxAttempts\":300,\"BackoffRate\":1}],\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"",
                              {
                                "Fn::GetAtt": [
                                  "PostgreSQLClusterSnapshotterwait7A15A210",
                                  "Arn"
                                ]
                              },
                              "\",\"Parameters\":{\"resourceType\":\"snapshot\",\"databaseIdentifier.$\":\"$.databaseIdentifier\",\"snapshotIdentifier.$\":\"$.tempSnapshotId\",\"isCluster\":true}},\"Re-encrypt Snapshot\":{\"Next\":\"Wait for Re-encrypt\",\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::aws-sdk:rds:copyDBClusterSnapshot\",\"Parameters\":{\"SourceDBClusterSnapshotIdentifier.$\":\"$.tempSnapshotId\",\"TargetDBClusterSnapshotIdentifier.$\":\"$.tempEncSnapshotId\",\"KmsKeyId\":\"",
                              {
                                "Ref": "SnapshotKey0EDEBDF6"
                              },
                              "\",\"CopyTags\":false,\"Tags\":[{\"Key\":\"RDS-sanitized-snapshots\",\"Value\":\"",
                              {
                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-RDS:ExportsOutputRefPostgresCluster5A5B7BE8BE4E3D78"
                              },
                              "\"}]}},\"Wait for Re-encrypt\":{\"Next\":\"Create Temporary Database\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"NotReady\"],\"IntervalSeconds\":60,\"MaxAttempts\":300,\"BackoffRate\":1}],\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"",
                              {
                                "Fn::GetAtt": [
                                  "PostgreSQLClusterSnapshotterwait7A15A210",
                                  "Arn"
                                ]
                              },
                              "\",\"Parameters\":{\"resourceType\":\"snapshot\",\"databaseIdentifier.$\":\"$.databaseIdentifier\",\"snapshotIdentifier.$\":\"$.tempEncSnapshotId\",\"isCluster\":true}},\"Create Temporary Database\":{\"Next\":\"Wait for Temporary Database\",\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::aws-sdk:rds:restoreDBClusterFromSnapshot\",\"Parameters\":{\"DbClusterIdentifier.$\":\"$.tempDbId\",\"Engine.$\":\"$.engine\",\"SnapshotIdentifier.$\":\"$.tempEncSnapshotId\",\"PubliclyAccessible\":false,\"VpcSecurityGroupIds\":[\"",
                              {
                                "Fn::GetAtt": [
                                  "PostgreSQLClusterSnapshotterSG7FF985A8",
                                  "GroupId"
                                ]
                              },
                              "\"],\"DbSubnetGroupName\":\"",
                              {
                                "Ref": "PostgreSQLClusterSnapshotterSubnetgroupA37EB2B3"
                              },
                              "\",\"Tags\":[{\"Key\":\"RDS-sanitized-snapshots\",\"Value\":\"",
                              {
                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-RDS:ExportsOutputRefPostgresCluster5A5B7BE8BE4E3D78"
                              },
                              "\"}]}},\"Wait for Temporary Database\":{\"Next\":\"Set Temporary Password\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"NotReady\"],\"IntervalSeconds\":60,\"MaxAttempts\":300,\"BackoffRate\":1}],\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"",
                              {
                                "Fn::GetAtt": [
                                  "PostgreSQLClusterSnapshotterwait7A15A210",
                                  "Arn"
                                ]
                              },
                              "\",\"Parameters\":{\"resourceType\":\"cluster\",\"databaseIdentifier.$\":\"$.tempDbId\",\"isCluster\":true}},\"Set Temporary Password\":{\"Next\":\"Wait for Temporary Password\",\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::aws-sdk:rds:modifyDBCluster\",\"Parameters\":{\"DbClusterIdentifier.$\":\"$.tempDbId\",\"MasterUserPassword.$\":\"$.tempDb.password\",\"ApplyImmediately\":true}},\"Wait for Temporary Password\":{\"Next\":\"Create Temporary Instance\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"NotReady\"],\"IntervalSeconds\":60,\"MaxAttempts\":300,\"BackoffRate\":1}],\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"",
                              {
                                "Fn::GetAtt": [
                                  "PostgreSQLClusterSnapshotterwait7A15A210",
                                  "Arn"
                                ]
                              },
                              "\",\"Parameters\":{\"resourceType\":\"cluster\",\"databaseIdentifier.$\":\"$.tempDbId\",\"isCluster\":true}},\"Create Temporary Instance\":{\"Next\":\"Wait for Temporary Instance\",\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::aws-sdk:rds:createDBInstance\",\"Parameters\":{\"DbClusterIdentifier.$\":\"$.tempDbId\",\"DbInstanceIdentifier.$\":\"$.tempDbInstanceId\",\"DbInstanceClass.$\":\"$.tempDbInstanceClass\",\"Engine.$\":\"$.engine\"}},\"Wait for Temporary Instance\":{\"Next\":\"Get Temporary Cluster Endpoint\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"NotReady\"],\"IntervalSeconds\":60,\"MaxAttempts\":300,\"BackoffRate\":1}],\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"",
                              {
                                "Fn::GetAtt": [
                                  "PostgreSQLClusterSnapshotterwait7A15A210",
                                  "Arn"
                                ]
                              },
                              "\",\"Parameters\":{\"resourceType\":\"instance\",\"databaseIdentifier.$\":\"$.tempDbInstanceId\",\"isCluster\":true}},\"Get Temporary Cluster Endpoint\":{\"Next\":\"Sanitize\",\"Type\":\"Task\",\"ResultPath\":\"$.tempDb.host\",\"ResultSelector\":{\"endpoint.$\":\"$.DbClusters[0].Endpoint\"},\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::aws-sdk:rds:describeDBClusters\",\"Parameters\":{\"DbClusterIdentifier.$\":\"$.tempDbId\"}},\"Sanitize\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.dockerImage\",\"StringEquals\":\"mysql\",\"Next\":\"Sanitize MySQL\"},{\"Variable\":\"$.dockerImage\",\"StringEquals\":\"postgres\",\"Next\":\"Sanitize Postgres\"}]},\"Sanitize MySQL\":{\"Next\":\"Create Final Snapshot\",\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::ecs:runTask.sync\",\"Parameters\":{\"Cluster\":\"",
                              {
                                "Fn::GetAtt": [
                                  "PostgreSQLClusterSnapshotterclusterD066B562",
                                  "Arn"
                                ]
                              },
                              "\",\"TaskDefinition\":\"RDSSanitizedSnapshotterSFNPostgreSQLClusterSnapshotterMySQLTask9865F232\",\"NetworkConfiguration\":{\"AwsvpcConfiguration\":{\"Subnets\":[\"",
                              {
                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCIsolatedSubnet1SubnetEBD00FC6298E81EF"
                              },
                              "\",\"",
                              {
                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCIsolatedSubnet2Subnet4B1C8CAAD8B83B81"
                              },
                              "\"],\"SecurityGroups\":[\"",
                              {
                                "Fn::GetAtt": [
                                  "PostgreSQLClusterSnapshotterSG7FF985A8",
                                  "GroupId"
                                ]
                              },
                              "\"]}},\"Overrides\":{\"ContainerOverrides\":[{\"Name\":\"config\",\"Environment\":[{\"Name\":\"MYSQL_HOST\",\"Value.$\":\"$.tempDb.host.endpoint\"},{\"Name\":\"MYSQL_PORT\",\"Value.$\":\"$.tempDb.port\"},{\"Name\":\"MYSQL_USER\",\"Value.$\":\"$.tempDb.user\"},{\"Name\":\"MYSQL_PASSWORD\",\"Value.$\":\"$.tempDb.password\"},{\"Name\":\"MYSQL_DATABASE\",\"Value\":\"\"}]}]},\"LaunchType\":\"FARGATE\"}},\"Create Final Snapshot\":{\"Next\":\"Wait for Final Snapshot\",\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::aws-sdk:rds:createDBClusterSnapshot\",\"Parameters\":{\"DbClusterIdentifier.$\":\"$.tempDbId\",\"DbClusterSnapshotIdentifier.$\":\"$.targetSnapshotId\",\"Tags\":[{\"Key\":\"RDS-sanitized-snapshots\",\"Value\":\"",
                              {
                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-RDS:ExportsOutputRefPostgresCluster5A5B7BE8BE4E3D78"
                              },
                              "\"},{\"Key\":\"Final\",\"Value\":\"true\"}]}},\"Sanitize Postgres\":{\"Next\":\"Create Final Snapshot\",\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::ecs:runTask.sync\",\"Parameters\":{\"Cluster\":\"",
                              {
                                "Fn::GetAtt": [
                                  "PostgreSQLClusterSnapshotterclusterD066B562",
                                  "Arn"
                                ]
                              },
                              "\",\"TaskDefinition\":\"RDSSanitizedSnapshotterSFNPostgreSQLClusterSnapshotterPostreSQLTask914B7835\",\"NetworkConfiguration\":{\"AwsvpcConfiguration\":{\"Subnets\":[\"",
                              {
                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCIsolatedSubnet1SubnetEBD00FC6298E81EF"
                              },
                              "\",\"",
                              {
                                "Fn::ImportValue": "RDS-Sanitized-Snapshotter-VPC:ExportsOutputRefVPCIsolatedSubnet2Subnet4B1C8CAAD8B83B81"
                              },
                              "\"],\"SecurityGroups\":[\"",
                              {
                                "Fn::GetAtt": [
                                  "PostgreSQLClusterSnapshotterSG7FF985A8",
                                  "GroupId"
                                ]
                              },
                              "\"]}},\"Overrides\":{\"ContainerOverrides\":[{\"Name\":\"postgres\",\"Environment\":[{\"Name\":\"PGHOST\",\"Value.$\":\"$.tempDb.host.endpoint\"},{\"Name\":\"PGPORT\",\"Value.$\":\"$.tempDb.port\"},{\"Name\":\"PGUSER\",\"Value.$\":\"$.tempDb.user\"},{\"Name\":\"PGPASSWORD\",\"Value.$\":\"$.tempDb.password\"},{\"Name\":\"PGDATABASE\",\"Value\":\"postgres\"},{\"Name\":\"PGCONNECT_TIMEOUT\",\"Value\":\"30\"}]}]},\"LaunchType\":\"FARGATE\"}},\"Wait for Final Snapshot\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"NotReady\"],\"IntervalSeconds\":60,\"MaxAttempts\":300,\"BackoffRate\":1}],\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"",
                              {
                                "Fn::GetAtt": [
                                  "PostgreSQLClusterSnapshotterwait7A15A210",
                                  "Arn"
                                ]
                              },
                              "\",\"Parameters\":{\"resourceType\":\"snapshot\",\"databaseIdentifier.$\":\"$.tempDbId\",\"snapshotIdentifier.$\":\"$.targetSnapshotId\",\"isCluster\":true}}}}]},\"Cleanup\":{\"Type\":\"Parallel\",\"ResultPath\":null,\"End\":true,\"Branches\":[{\"StartAt\":\"Temporary Snapshot\",\"States\":{\"Temporary Snapshot\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"States.ALL\"],\"IntervalSeconds\":10,\"MaxAttempts\":5}],\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::aws-sdk:rds:deleteDBClusterSnapshot\",\"Parameters\":{\"DbClusterSnapshotIdentifier.$\":\"$.tempSnapshotId\"}}}},{\"StartAt\":\"Re-encrypted Snapshot\",\"States\":{\"Re-encrypted Snapshot\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"States.ALL\"],\"IntervalSeconds\":10,\"MaxAttempts\":5}],\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::aws-sdk:rds:deleteDBClusterSnapshot\",\"Parameters\":{\"DbClusterSnapshotIdentifier.$\":\"$.tempEncSnapshotId\"}}}},{\"StartAt\":\"Temporary Database Instance\",\"States\":{\"Temporary Database Instance\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"States.ALL\"],\"IntervalSeconds\":10,\"MaxAttempts\":5}],\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::aws-sdk:rds:deleteDBInstance\",\"Parameters\":{\"DbInstanceIdentifier.$\":\"$.tempDbInstanceId\",\"SkipFinalSnapshot\":true}}}},{\"StartAt\":\"Temporary Database\",\"States\":{\"Temporary Database\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"States.ALL\"],\"IntervalSeconds\":10,\"MaxAttempts\":5}],\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":states:::aws-sdk:rds:deleteDBCluster\",\"Parameters\":{\"DbClusterIdentifier.$\":\"$.tempDbId\",\"SkipFinalSnapshot\":true}}}}]}}}"
                            ]
                          ]
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_stepfunctions.CfnStateMachine",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_stepfunctions.StateMachine",
                  "version": "2.0.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.0.5"
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "RDS-Sanitized-Snapshotter-SFN/Exports",
            "children": {
              "Output{\"Ref\":\"MySQLInstanceSnapshotterDirector69A6B7B4\"}": {
                "id": "Output{\"Ref\":\"MySQLInstanceSnapshotterDirector69A6B7B4\"}",
                "path": "RDS-Sanitized-Snapshotter-SFN/Exports/Output{\"Ref\":\"MySQLInstanceSnapshotterDirector69A6B7B4\"}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.0.0"
                }
              },
              "Output{\"Ref\":\"MySQLClusterSnapshotterDirector73A14BB0\"}": {
                "id": "Output{\"Ref\":\"MySQLClusterSnapshotterDirector73A14BB0\"}",
                "path": "RDS-Sanitized-Snapshotter-SFN/Exports/Output{\"Ref\":\"MySQLClusterSnapshotterDirector73A14BB0\"}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.0.0"
                }
              },
              "Output{\"Ref\":\"PostgreSQLInstanceSnapshotterDirector22C6400C\"}": {
                "id": "Output{\"Ref\":\"PostgreSQLInstanceSnapshotterDirector22C6400C\"}",
                "path": "RDS-Sanitized-Snapshotter-SFN/Exports/Output{\"Ref\":\"PostgreSQLInstanceSnapshotterDirector22C6400C\"}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.0.0"
                }
              },
              "Output{\"Ref\":\"PostgreSQLClusterSnapshotterDirector864DA8F0\"}": {
                "id": "Output{\"Ref\":\"PostgreSQLClusterSnapshotterDirector864DA8F0\"}",
                "path": "RDS-Sanitized-Snapshotter-SFN/Exports/Output{\"Ref\":\"PostgreSQLClusterSnapshotterDirector864DA8F0\"}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.0.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.0.5"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.0.0"
        }
      },
      "RDS-Sanitized-Snapshotter-Test": {
        "id": "RDS-Sanitized-Snapshotter-Test",
        "path": "RDS-Sanitized-Snapshotter-Test",
        "children": {
          "Test": {
            "id": "Test",
            "path": "RDS-Sanitized-Snapshotter-Test/Test",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "RDS-Sanitized-Snapshotter-Test/Test/ServiceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-Test/Test/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.0.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "RDS-Sanitized-Snapshotter-Test/Test/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-Test/Test/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "states:StartExecution",
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "TestServiceRoleDefaultPolicyE51BF2AA",
                            "roles": [
                              {
                                "Ref": "TestServiceRoleCF49002B"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.0.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "RDS-Sanitized-Snapshotter-Test/Test/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "RDS-Sanitized-Snapshotter-Test/Test/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.0.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "RDS-Sanitized-Snapshotter-Test/Test/Code/AssetBucket",
                    "children": {
                      "Notifications": {
                        "id": "Notifications",
                        "path": "RDS-Sanitized-Snapshotter-Test/Test/Code/AssetBucket/Notifications",
                        "constructInfo": {
                          "fqn": "constructs.Construct",
                          "version": "10.0.5"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.0.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "RDS-Sanitized-Snapshotter-Test/Test/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": {
                        "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                      },
                      "s3Key": "d25370a2f08c7d78c76144e5c6caa6ee0c1d1af5861b81bdbd9d57f51f39685a.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "TestServiceRoleCF49002B",
                        "Arn"
                      ]
                    },
                    "description": "src/test.lambda.ts",
                    "environment": {
                      "variables": {
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "handler": "index.handler",
                    "runtime": "nodejs14.x"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.0.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "RDS-Sanitized-Snapshotter-Test/Test/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-Test/Test/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.0.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "RDS-Sanitized-Snapshotter-Test/Test/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.0.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda.Function",
              "version": "2.0.0"
            }
          },
          "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a": {
            "id": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "path": "RDS-Sanitized-Snapshotter-Test/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "children": {
              "Code": {
                "id": "Code",
                "path": "RDS-Sanitized-Snapshotter-Test/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "RDS-Sanitized-Snapshotter-Test/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.0.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "RDS-Sanitized-Snapshotter-Test/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/AssetBucket",
                    "children": {
                      "Notifications": {
                        "id": "Notifications",
                        "path": "RDS-Sanitized-Snapshotter-Test/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/AssetBucket/Notifications",
                        "constructInfo": {
                          "fqn": "constructs.Construct",
                          "version": "10.0.5"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.0.0"
                }
              },
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "RDS-Sanitized-Snapshotter-Test/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-Test/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.0.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "RDS-Sanitized-Snapshotter-Test/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-Test/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:PutRetentionPolicy",
                                    "logs:DeleteRetentionPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
                            "roles": [
                              {
                                "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.0.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "RDS-Sanitized-Snapshotter-Test/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.0.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.0.5"
            }
          },
          "Wait": {
            "id": "Wait",
            "path": "RDS-Sanitized-Snapshotter-Test/Wait",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "RDS-Sanitized-Snapshotter-Test/Wait/ServiceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-Test/Wait/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.0.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "RDS-Sanitized-Snapshotter-Test/Wait/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-Test/Wait/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "states:DescribeExecution",
                                    "rds:describeDBClusterSnapshots",
                                    "rds:DeleteDBClusterSnapshot",
                                    "rds:DescribeDBSnapshots",
                                    "rds:DeleteDBSnapshot"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "WaitServiceRoleDefaultPolicy527907DE",
                            "roles": [
                              {
                                "Ref": "WaitServiceRole80F0B8D7"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.0.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "RDS-Sanitized-Snapshotter-Test/Wait/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "RDS-Sanitized-Snapshotter-Test/Wait/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.0.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "RDS-Sanitized-Snapshotter-Test/Wait/Code/AssetBucket",
                    "children": {
                      "Notifications": {
                        "id": "Notifications",
                        "path": "RDS-Sanitized-Snapshotter-Test/Wait/Code/AssetBucket/Notifications",
                        "constructInfo": {
                          "fqn": "constructs.Construct",
                          "version": "10.0.5"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.0.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "RDS-Sanitized-Snapshotter-Test/Wait/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": {
                        "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                      },
                      "s3Key": "53617009c1b26595b7eed17e9c4849808a3b77969c47eb1a6da026cefb428c56.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "WaitServiceRole80F0B8D7",
                        "Arn"
                      ]
                    },
                    "description": "src/test-wait.lambda.ts",
                    "environment": {
                      "variables": {
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "handler": "index.handler",
                    "runtime": "nodejs14.x",
                    "timeout": 180
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.0.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "RDS-Sanitized-Snapshotter-Test/Wait/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-Test/Wait/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.0.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "RDS-Sanitized-Snapshotter-Test/Wait/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.0.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda.Function",
              "version": "2.0.0"
            }
          },
          "Provider": {
            "id": "Provider",
            "path": "RDS-Sanitized-Snapshotter-Test/Provider",
            "children": {
              "framework-onEvent": {
                "id": "framework-onEvent",
                "path": "RDS-Sanitized-Snapshotter-Test/Provider/framework-onEvent",
                "children": {
                  "ServiceRole": {
                    "id": "ServiceRole",
                    "path": "RDS-Sanitized-Snapshotter-Test/Provider/framework-onEvent/ServiceRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-Test/Provider/framework-onEvent/ServiceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "lambda.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                  ]
                                ]
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.0.0"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "RDS-Sanitized-Snapshotter-Test/Provider/framework-onEvent/ServiceRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "RDS-Sanitized-Snapshotter-Test/Provider/framework-onEvent/ServiceRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "lambda:InvokeFunction",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "Test7BFAF513",
                                          "Arn"
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "lambda:InvokeFunction",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "Wait4449FB25",
                                          "Arn"
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "states:StartExecution",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Ref": "Providerwaiterstatemachine5D4A9DF0"
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "ProviderframeworkonEventServiceRoleDefaultPolicy48CD2133",
                                "roles": [
                                  {
                                    "Ref": "ProviderframeworkonEventServiceRole9FF04296"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                              "version": "2.0.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Policy",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.0.0"
                    }
                  },
                  "Code": {
                    "id": "Code",
                    "path": "RDS-Sanitized-Snapshotter-Test/Provider/framework-onEvent/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "RDS-Sanitized-Snapshotter-Test/Provider/framework-onEvent/Code/Stage",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.AssetStaging",
                          "version": "2.0.0"
                        }
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "RDS-Sanitized-Snapshotter-Test/Provider/framework-onEvent/Code/AssetBucket",
                        "children": {
                          "Notifications": {
                            "id": "Notifications",
                            "path": "RDS-Sanitized-Snapshotter-Test/Provider/framework-onEvent/Code/AssetBucket/Notifications",
                            "constructInfo": {
                              "fqn": "constructs.Construct",
                              "version": "10.0.5"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                      "version": "2.0.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-Test/Provider/framework-onEvent/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "s3Bucket": {
                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                          },
                          "s3Key": "c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c.zip"
                        },
                        "role": {
                          "Fn::GetAtt": [
                            "ProviderframeworkonEventServiceRole9FF04296",
                            "Arn"
                          ]
                        },
                        "description": "AWS CDK resource provider framework - onEvent (RDS-Sanitized-Snapshotter-Test/Provider)",
                        "environment": {
                          "variables": {
                            "USER_ON_EVENT_FUNCTION_ARN": {
                              "Fn::GetAtt": [
                                "Test7BFAF513",
                                "Arn"
                              ]
                            },
                            "USER_IS_COMPLETE_FUNCTION_ARN": {
                              "Fn::GetAtt": [
                                "Wait4449FB25",
                                "Arn"
                              ]
                            },
                            "WAITER_STATE_MACHINE_ARN": {
                              "Ref": "Providerwaiterstatemachine5D4A9DF0"
                            }
                          }
                        },
                        "handler": "framework.onEvent",
                        "runtime": "nodejs12.x",
                        "timeout": 900
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                      "version": "2.0.0"
                    }
                  },
                  "LogRetention": {
                    "id": "LogRetention",
                    "path": "RDS-Sanitized-Snapshotter-Test/Provider/framework-onEvent/LogRetention",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-Test/Provider/framework-onEvent/LogRetention/Resource",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.CfnResource",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                      "version": "2.0.0"
                    }
                  },
                  "LogGroup": {
                    "id": "LogGroup",
                    "path": "RDS-Sanitized-Snapshotter-Test/Provider/framework-onEvent/LogGroup",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.Function",
                  "version": "2.0.0"
                }
              },
              "framework-isComplete": {
                "id": "framework-isComplete",
                "path": "RDS-Sanitized-Snapshotter-Test/Provider/framework-isComplete",
                "children": {
                  "ServiceRole": {
                    "id": "ServiceRole",
                    "path": "RDS-Sanitized-Snapshotter-Test/Provider/framework-isComplete/ServiceRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-Test/Provider/framework-isComplete/ServiceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "lambda.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                  ]
                                ]
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.0.0"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "RDS-Sanitized-Snapshotter-Test/Provider/framework-isComplete/ServiceRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "RDS-Sanitized-Snapshotter-Test/Provider/framework-isComplete/ServiceRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "lambda:InvokeFunction",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "Test7BFAF513",
                                          "Arn"
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "lambda:InvokeFunction",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "Wait4449FB25",
                                          "Arn"
                                        ]
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "ProviderframeworkisCompleteServiceRoleDefaultPolicy2E7140AC",
                                "roles": [
                                  {
                                    "Ref": "ProviderframeworkisCompleteServiceRoleB1087139"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                              "version": "2.0.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Policy",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.0.0"
                    }
                  },
                  "Code": {
                    "id": "Code",
                    "path": "RDS-Sanitized-Snapshotter-Test/Provider/framework-isComplete/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "RDS-Sanitized-Snapshotter-Test/Provider/framework-isComplete/Code/Stage",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.AssetStaging",
                          "version": "2.0.0"
                        }
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "RDS-Sanitized-Snapshotter-Test/Provider/framework-isComplete/Code/AssetBucket",
                        "children": {
                          "Notifications": {
                            "id": "Notifications",
                            "path": "RDS-Sanitized-Snapshotter-Test/Provider/framework-isComplete/Code/AssetBucket/Notifications",
                            "constructInfo": {
                              "fqn": "constructs.Construct",
                              "version": "10.0.5"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                      "version": "2.0.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-Test/Provider/framework-isComplete/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "s3Bucket": {
                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                          },
                          "s3Key": "c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c.zip"
                        },
                        "role": {
                          "Fn::GetAtt": [
                            "ProviderframeworkisCompleteServiceRoleB1087139",
                            "Arn"
                          ]
                        },
                        "description": "AWS CDK resource provider framework - isComplete (RDS-Sanitized-Snapshotter-Test/Provider)",
                        "environment": {
                          "variables": {
                            "USER_ON_EVENT_FUNCTION_ARN": {
                              "Fn::GetAtt": [
                                "Test7BFAF513",
                                "Arn"
                              ]
                            },
                            "USER_IS_COMPLETE_FUNCTION_ARN": {
                              "Fn::GetAtt": [
                                "Wait4449FB25",
                                "Arn"
                              ]
                            }
                          }
                        },
                        "handler": "framework.isComplete",
                        "runtime": "nodejs12.x",
                        "timeout": 900
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                      "version": "2.0.0"
                    }
                  },
                  "LogRetention": {
                    "id": "LogRetention",
                    "path": "RDS-Sanitized-Snapshotter-Test/Provider/framework-isComplete/LogRetention",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-Test/Provider/framework-isComplete/LogRetention/Resource",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.CfnResource",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                      "version": "2.0.0"
                    }
                  },
                  "LogGroup": {
                    "id": "LogGroup",
                    "path": "RDS-Sanitized-Snapshotter-Test/Provider/framework-isComplete/LogGroup",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.Function",
                  "version": "2.0.0"
                }
              },
              "framework-onTimeout": {
                "id": "framework-onTimeout",
                "path": "RDS-Sanitized-Snapshotter-Test/Provider/framework-onTimeout",
                "children": {
                  "ServiceRole": {
                    "id": "ServiceRole",
                    "path": "RDS-Sanitized-Snapshotter-Test/Provider/framework-onTimeout/ServiceRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-Test/Provider/framework-onTimeout/ServiceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "lambda.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                  ]
                                ]
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.0.0"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "RDS-Sanitized-Snapshotter-Test/Provider/framework-onTimeout/ServiceRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "RDS-Sanitized-Snapshotter-Test/Provider/framework-onTimeout/ServiceRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "lambda:InvokeFunction",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "Test7BFAF513",
                                          "Arn"
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "lambda:InvokeFunction",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "Wait4449FB25",
                                          "Arn"
                                        ]
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "ProviderframeworkonTimeoutServiceRoleDefaultPolicy2688969F",
                                "roles": [
                                  {
                                    "Ref": "ProviderframeworkonTimeoutServiceRole28643D26"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                              "version": "2.0.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Policy",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.0.0"
                    }
                  },
                  "Code": {
                    "id": "Code",
                    "path": "RDS-Sanitized-Snapshotter-Test/Provider/framework-onTimeout/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "RDS-Sanitized-Snapshotter-Test/Provider/framework-onTimeout/Code/Stage",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.AssetStaging",
                          "version": "2.0.0"
                        }
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "RDS-Sanitized-Snapshotter-Test/Provider/framework-onTimeout/Code/AssetBucket",
                        "children": {
                          "Notifications": {
                            "id": "Notifications",
                            "path": "RDS-Sanitized-Snapshotter-Test/Provider/framework-onTimeout/Code/AssetBucket/Notifications",
                            "constructInfo": {
                              "fqn": "constructs.Construct",
                              "version": "10.0.5"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                      "version": "2.0.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-Test/Provider/framework-onTimeout/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "s3Bucket": {
                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                          },
                          "s3Key": "c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c.zip"
                        },
                        "role": {
                          "Fn::GetAtt": [
                            "ProviderframeworkonTimeoutServiceRole28643D26",
                            "Arn"
                          ]
                        },
                        "description": "AWS CDK resource provider framework - onTimeout (RDS-Sanitized-Snapshotter-Test/Provider)",
                        "environment": {
                          "variables": {
                            "USER_ON_EVENT_FUNCTION_ARN": {
                              "Fn::GetAtt": [
                                "Test7BFAF513",
                                "Arn"
                              ]
                            },
                            "USER_IS_COMPLETE_FUNCTION_ARN": {
                              "Fn::GetAtt": [
                                "Wait4449FB25",
                                "Arn"
                              ]
                            }
                          }
                        },
                        "handler": "framework.onTimeout",
                        "runtime": "nodejs12.x",
                        "timeout": 900
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                      "version": "2.0.0"
                    }
                  },
                  "LogRetention": {
                    "id": "LogRetention",
                    "path": "RDS-Sanitized-Snapshotter-Test/Provider/framework-onTimeout/LogRetention",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-Test/Provider/framework-onTimeout/LogRetention/Resource",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.CfnResource",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                      "version": "2.0.0"
                    }
                  },
                  "LogGroup": {
                    "id": "LogGroup",
                    "path": "RDS-Sanitized-Snapshotter-Test/Provider/framework-onTimeout/LogGroup",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.Function",
                  "version": "2.0.0"
                }
              },
              "waiter-state-machine": {
                "id": "waiter-state-machine",
                "path": "RDS-Sanitized-Snapshotter-Test/Provider/waiter-state-machine",
                "children": {
                  "Role": {
                    "id": "Role",
                    "path": "RDS-Sanitized-Snapshotter-Test/Provider/waiter-state-machine/Role",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "RDS-Sanitized-Snapshotter-Test/Provider/waiter-state-machine/Role/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "states.",
                                          {
                                            "Ref": "AWS::Region"
                                          },
                                          ".amazonaws.com"
                                        ]
                                      ]
                                    }
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.0.0"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "RDS-Sanitized-Snapshotter-Test/Provider/waiter-state-machine/Role/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "RDS-Sanitized-Snapshotter-Test/Provider/waiter-state-machine/Role/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "lambda:InvokeFunction",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "ProviderframeworkisComplete26D7B0CB",
                                          "Arn"
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "lambda:InvokeFunction",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "ProviderframeworkonTimeout0B47CA38",
                                          "Arn"
                                        ]
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "ProviderwaiterstatemachineRoleDefaultPolicyD3C3DA1A",
                                "roles": [
                                  {
                                    "Ref": "ProviderwaiterstatemachineRole0C7159F9"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                              "version": "2.0.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Policy",
                          "version": "2.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.0.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "RDS-Sanitized-Snapshotter-Test/Provider/waiter-state-machine/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "constructs.Construct",
                  "version": "10.0.5"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.custom_resources.Provider",
              "version": "2.0.0"
            }
          },
          "Test MySQL Instance": {
            "id": "Test MySQL Instance",
            "path": "RDS-Sanitized-Snapshotter-Test/Test MySQL Instance",
            "children": {
              "Default": {
                "id": "Default",
                "path": "RDS-Sanitized-Snapshotter-Test/Test MySQL Instance/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.0.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.CustomResource",
              "version": "2.0.0"
            }
          },
          "Test MySQL Cluster": {
            "id": "Test MySQL Cluster",
            "path": "RDS-Sanitized-Snapshotter-Test/Test MySQL Cluster",
            "children": {
              "Default": {
                "id": "Default",
                "path": "RDS-Sanitized-Snapshotter-Test/Test MySQL Cluster/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.0.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.CustomResource",
              "version": "2.0.0"
            }
          },
          "Test PostgreSQL Instance": {
            "id": "Test PostgreSQL Instance",
            "path": "RDS-Sanitized-Snapshotter-Test/Test PostgreSQL Instance",
            "children": {
              "Default": {
                "id": "Default",
                "path": "RDS-Sanitized-Snapshotter-Test/Test PostgreSQL Instance/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.0.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.CustomResource",
              "version": "2.0.0"
            }
          },
          "Test PostgreSQL Cluster": {
            "id": "Test PostgreSQL Cluster",
            "path": "RDS-Sanitized-Snapshotter-Test/Test PostgreSQL Cluster",
            "children": {
              "Default": {
                "id": "Default",
                "path": "RDS-Sanitized-Snapshotter-Test/Test PostgreSQL Cluster/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.0.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.CustomResource",
              "version": "2.0.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.0.0"
        }
      }
    },
    "constructInfo": {
      "fqn": "aws-cdk-lib.App",
      "version": "2.0.0"
    }
  }
}